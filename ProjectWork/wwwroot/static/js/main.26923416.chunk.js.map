{"version":3,"sources":["utilities.ts","serviceWorker.ts","models/IMessage.ts","comp/Firma.tsx","comp/Calendario.tsx","comp/LessonsCalendar.tsx","comp/Footer.tsx","comp/SceltaCorso.tsx","comp/SceltaClasse.tsx","comp/LogoCorso.tsx","comp/CodiceAccesso.tsx","comp/Main.tsx","models/Cipher.ts","comp/ForgotPassword.tsx","comp/admin/LoginTutor.tsx","models/IAdmin.ts","comp/AskConferma.tsx","comp/admin/StageSwitch.tsx","comp/admin/StudentsList.tsx","comp/admin/AddNewStudent.tsx","comp/admin/PresenzeTable.tsx","comp/admin/StudentStage.tsx","comp/admin/StudentDetails.tsx","comp/admin/DocentiList.tsx","comp/admin/AddNewDocente.tsx","comp/admin/LezioniDocenteTable.tsx","comp/admin/DocenteDetails.tsx","comp/admin/EditDocente.tsx","comp/admin/EditStudente.tsx","comp/admin/StudentsImport.tsx","comp/admin/MaterieList.tsx","comp/ImageScale.tsx","comp/admin/ConfigForm.tsx","comp/admin/ConfigCalendar.tsx","comp/Page404.tsx","comp/admin/EditCodiceFirma.tsx","comp/admin/Home.tsx","comp/admin/Dashboard.tsx","comp/superadmin/CorsiList.tsx","comp/superadmin/AddNewCorso.tsx","comp/superadmin/LoginAdmin.tsx","comp/superadmin/EditCorso.tsx","comp/superadmin/TutorList.tsx","comp/superadmin/AddNewTutor.tsx","comp/superadmin/EditTutor.tsx","comp/superadmin/SuperDashboard.tsx","comp/firmacasa/CodiceSegreto.tsx","models/IStudent.ts","comp/firmacasa/FirmaCasa.tsx","comp/firmacasa/DashboardCasa.tsx","comp/Docs.tsx","comp/studente/LoginStudent.tsx","comp/studente/AddOreStage.tsx","comp/studente/StageList.tsx","comp/studente/Home.tsx","comp/studente/StudentDashboard.tsx","index.tsx"],"names":["siteUrl","logoUrl","avocadoUrl","adminRoute","superAdminRoute","studentRoute","Digits2","n","validateTime","time","test","formattaData","d","convert","from","split","date","Date","Number","getFullYear","getMonth","getDate","formatItalian","capitalizeFirst","name","splitStr","capitalizeQuote","toLowerCase","i","length","charAt","toUpperCase","substring","join","mountLogin","document","getElementsByTagName","classList","add","unmountLogin","remove","imageFileToBase64","file","readImageFile","a","Promise","resolve","reject","reader","FileReader","onload","e","base64Img","Buffer","target","result","toString","onerror","readAsArrayBuffer","resizePopup","mainBlock","getElementById","popup","width","clientWidth","style","checkEnter","callback","keyCode","convertFromUTC","localDate","getHours","getMinutes","getDateTime","clearDate","replace","converted","window","addEventListener","Boolean","location","hostname","match","genericError","title","icon","iconColor","message","Firma","props","maxLength","componentDidMount","id","parseInt","sessionStorage","getItem","Axios","get","then","response","corso","data","setState","changeCode","event","code","value","tryToLog","switchInput","idCorso","anno","axios","post","showMessagePopup","catch","_","disable","input","setAttribute","removeAttribute","focus","setTimeout","state","cambiaCorso","removeItem","routerHistory","push","switchFocus","this","type","spin","className","autoFocus","onChange","onFocus","onBlur","nome","indicator","height","placement","onClick","color","React","PureComponent","Calendario","calendarId","plugins","googleCalendarPlugin","dayGridPlugin","events","googleCalendarId","googleCalendarApiKey","defaultView","fixedWeekCount","firstDay","themeSystem","eventTimeFormat","hour","minute","meridiem","buttonText","today","header","right","locale","eventClick","info","jsEvent","preventDefault","Modal","maskClosable","centered","content","fontSize","start","end","extendedProps","LessonsCalendar","classe","calendar","idCalendario","Footer","inMenu","href","position","role","aria-label","SceltaCorso","corsi","componentWillUnmount","chooseCorso","setItem","map","c","src","logo","alt","SceltaClasse","chooseClasse","Component","LogoCorso","catchNull","forLogin","CodiceAccesso","cambiaCodice","codice","cambiaScelta","inviaCodice","trim","error","onSubmit","Main","focusInput","confermaTutor","history","activeClassName","exact","to","path","render","Cipher","maximum","msg","shift","finalMessage","letter","charInt","charCodeAt","newInt","String","fromCharCode","ForgotPassword","cancelRecover","currentStep","email","newPassword","newPasswordConfirm","idUtente","loading","closeModal","changeMail","changePassword","pass","changePasswordConfirm","increaseStep","decreaseStep","switchLoading","confirmFirstStep","forStudent","url","isNaN","confirmSecondStep","savePassword","password","encode","success","onOk","show","Step","Steps","steps","disabled","htmlType","visible","onCancel","footer","size","current","item","key","LoginTutor","changeInputName","adminName","changeInputPassword","psw","adminPsw","tryLogin","username","obj","isAdmin","JSON","stringify","switchForgot","showForgot","askPassword","callType","body","preAction","customText","tutor","parse","admin","cipher","sendForm","authAdmin","idAdmin","idAmministratore","authCoordinatore","idCoordinatore","put","modal","confirm","marginLeft","ref","r","onKeyUp","destroy","okText","cancelText","StageSwitch","toggleLoading","status","stage","switchStage","checked","StudentsList","students","showConfirm","student","cognome","d2","format","okType","theme","dataRitiro","studente","ritirato","idStudente","stu","currentList","indexOf","changeSelection","newList","selection","find","s","filter","concat","selectAll","selectionList","annoFrequentazione","showHideModal","confirmModal","moveStudents","select","studenti","allRetired","group","forEach","sortbyId","b","promuoviStudent","changeFilter","filterStudentsByFilter","Panel","Collapse","TabPane","Tabs","groups","promosso","sort","ritirati","defaultActiveKey","tab","g","checkedAll","tabTitle","element","bg","maxWidth","cf","frequenza","bordered","AddNewStudent","changeNome","changeCognome","changeEmail","changeData","dataNascita","changeAnnoScolastico","annoS","annoScolastico","changeCF","CF","aggiungiStudente","PresenzeTable","presenze","p","ingresso","uscita","changeEntrata","entrata","idPresenza","editingList","changeUscita","startTimeEdit","animateTds","td1","td2","confirmEdit","presenza","idLezione","output","newPresenze","reloadTotali","getCategorie","categorie","lezione","annullaModifica","Option","Select","presences","defaultValue","showSearch","l","presenzaEdit","pre","moment","minuteStep","placeholder","StudentStage","oreList","toggleModal","argomento","oraInizio","oraFine","totaleRelativo","StudentDetails","params","oreTotali","loadTotali","totPresenze","downloadQR","pngUrl","toDataURL","downloadLink","createElement","download","appendChild","click","removeChild","toggleStage","showStage","perc","Math","round","percent","strokeColor","suffix","decimalSeparator","groupSeparator","imageSettings","excavate","DocentiList","docenti","switchList","showAll","showDeleteConfirm","docente","ritiraOAnnulla","idDocente","backRetire","doc","isInCorso","docs","transform","monteOre","orePrimo","oreSecondo","AddNewDocente","materie","aggiungiDocente","corsiSel","materieSel","tenere","insegnare","m","idMateria","switchMateria","materiaId","switchCorso","corsoId","f","classname","LezioniDocenteTable","canEdit","editPresenza","DocenteDetails","getQRCode","display","alignItems","justifyContent","EditDocente","modificaDocente","EditStudente","modificaStudente","fields","label","field","StudentsImport","splitCSV","renderOptions","rows","fileContent","changeVarPos","varName","readFile","showImportPreview","readAsText","list","cells","addList","hidePopup","confirmImport","flexDirection","accept","beforeUpload","MaterieList","showModal","nomeMateria","hideEditModal","showEditModal","nomeEdit","materiaEdit","materia","aggiungiMateria","modificaMateria","changeNomeEdit","ImageScale","scaleImage","scalable","scaled","coords","firstclass","ConfigForm","actualId","changeID","saveConfig","calendario","eventiScartati","warning","inizio","fine","summary","ConfigCalendar","showHelp","top","marginTop","rel","getElementsByClassName","scrollTo","Page404","goTo","EditCodiceFirma","requestCodeChange","Home","coordinatore","noLezione1","lezioneCorrente1","noLezione2","lezioneCorrente2","getContenuto","titolo","oraIngresso","codiceCorso","Dashboard","session","routeProps","CorsiList","luogo","AddNewCorso","changeLuogo","aggiungiCorso","convertImage","uploadButton","marginBottom","listType","showUploadList","LoginAdmin","isSuperAdmin","EditCorso","modificaCorso","TutorList","t","AddNewTutor","listaCorsi","changeCorso","isExistingCorso","aggiungiTutor","EditTutor","modificaTutor","selected","SuperDashboard","CodiceSegreto","changeCodice","headers","isStudent","areStudent","err","FirmaCasa","caricaLezione","inviaFirma","selectedStudente","firmaDocente","scegliStudente","temp","noLezione","firmato","DashboardCasa","Docs","scrollToIndex","block","scrollIntoView","LoginStudent","userEmail","userCode","tryAccess","isAccessStudent","AddOreStage","changeInizio","console","log","changeFine","changeArgomento","addStage","currentDate","reloadStage","annullaAggiunta","StageList","loadOre","isActive","addNew","ore","totale","o","totaleOre","toggleAdd","floor","EPSILON","StudentDashboard","createHashHistory","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.26923416.chunk.js","sourcesContent":["export const siteUrl = \"https://registrofitstic.azurewebsites.net\"\r\nexport const logoUrl = \"fitstic_logo.png\"\r\nexport const avocadoUrl = \"avocadoLogo.png\"\r\n\r\nexport const adminRoute = \"/adminpanel\"\r\nexport const superAdminRoute = \"/superpanel\"\r\nexport const docentiRoute = \"/docentipanel\"\r\nexport const studentRoute = \"/studentipanel\"\r\n\r\nexport const Digits2 = (n: number) => {\r\n    return n < 10 ? \"0\" + n : n\r\n}\r\n\r\nexport const validateTime = (time: string) => {\r\n    return /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])$/.test(time)\r\n}\r\n\r\nexport const formattaData = (d: string, convert?: boolean) => {\r\n    let from = d.split(/[/-]/g),\r\n    date = convert ? new Date(Number(from[2]), Number(from[1]) - 1, Number(from[0])) : new Date(d)\r\n\r\n    return `${date.getFullYear()}-${Digits2(date.getMonth() + 1)}-${Digits2(date.getDate())}`\r\n}\r\n\r\nexport const formatItalian = (d: string) => {\r\n    let date = new Date(d)\r\n\r\n    return `${Digits2(date.getDate())}-${Digits2(date.getMonth() + 1)}-${date.getFullYear()}` \r\n}\r\n\r\nexport const capitalizeFirst = (name: string) => {\r\n    let splitStr = capitalizeQuote(name.toLowerCase()).split(\" \")\r\n\r\n    for (let i = 0; i < splitStr.length; i++) {\r\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1) \r\n    }\r\n   \r\n    return splitStr.join(\" \")\r\n}\r\n\r\nexport const capitalizeQuote = (name: string) => {\r\n    let splitStr = name.toLowerCase().split(\"'\")\r\n\r\n    for (let i = 0; i < splitStr.length; i++) {\r\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1)\r\n    }\r\n   \r\n    return splitStr.join(\"'\")\r\n}\r\n\r\nexport const mountLogin = () => {\r\n    let body = document.getElementsByTagName(\"body\")[0]\r\n\r\n    body.classList.add(\"login\")\r\n}\r\nexport const unmountLogin = () => {\r\n    let body = document.getElementsByTagName(\"body\")[0]\r\n\r\n    body.classList.remove(\"login\")\r\n}\r\n\r\nexport const imageFileToBase64 = async (file: any) => {\r\n    function readImageFile(file: any){\r\n        return new Promise((resolve, reject) => {\r\n            let reader = new FileReader()\r\n        \r\n            reader.onload = e => {\r\n                let base64Img = new Buffer(e.target.result as any, \"binary\").toString(\"base64\"),\r\n                src = \"data:image/png;base64,\" + base64Img\r\n\r\n                resolve(src)\r\n            }\r\n        \r\n            reader.onerror = reject\r\n        \r\n            reader.readAsArrayBuffer(file)\r\n        })     \r\n    }\r\n\r\n    return readImageFile(file)\r\n}\r\n\r\nexport const resizePopup = () => {\r\n    let mainBlock = document.getElementById(\"mainBlock\"),\r\n    popup = document.getElementById(\"popup\"),\r\n    width = mainBlock ? mainBlock.clientWidth : 0\r\n\r\n    if(mainBlock && popup)\r\n        popup.style.width = width + \"px\"\r\n}\r\n\r\nexport const checkEnter = (e: any, callback: any) => {\r\n    if(e.keyCode === 13)\r\n        callback()\r\n}\r\n\r\nexport const convertFromUTC = (date: string) => {\r\n    let localDate = new Date(date)\r\n\r\n    return `${Digits2(localDate.getHours())}:${Digits2(localDate.getMinutes())}`\r\n}\r\n\r\nexport const getDateTime = (date: string) => {\r\n    let clearDate = date.replace(\"Z\", \"\"),\r\n    converted = new Date(clearDate)\r\n\r\n    return `${Digits2(converted.getHours())}:${Digits2(converted.getMinutes())}`\r\n}\r\n\r\nwindow.addEventListener(\"load\", resizePopup)\r\nwindow.addEventListener(\"resize\", resizePopup)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export interface IMessage{\r\n    readonly title: string\r\n    readonly icon: string\r\n    readonly iconColor: string\r\n    readonly message: string\r\n    readonly time: number\r\n    readonly type?: string\r\n}\r\n\r\nexport const genericError = {\r\n    title: \"Ops!\",\r\n    icon: \"fa-times-circle\",\r\n    iconColor: \"#de1e30\",\r\n    message: \"È stato riscontrato un errore durante l'accesso.\",\r\n    time: 3000\r\n}","import React from \"react\"\r\nimport axios from \"axios\"\r\nimport { IMessage, genericError } from \"../models/IMessage\"\r\nimport { siteUrl, resizePopup } from \"../utilities\"\r\nimport { routerHistory } from \"..\"\r\nimport { Divider, Tooltip, Spin, Icon } from \"antd\"\r\nimport { ICorso } from \"../models/ICorso\"\r\nimport Axios from \"axios\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly code: string\r\n    readonly popup: IMessage\r\n    readonly corso: ICorso\r\n    readonly focus: boolean\r\n}\r\n\r\nexport default class Firma extends React.PureComponent<IProps, IState>{\r\n    maxLength = 16\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            code: \"\",\r\n            popup: genericError,\r\n            corso: null,\r\n            focus: false\r\n        }\r\n    }\r\n    \r\n    componentDidMount = () => {\r\n        let id = parseInt(sessionStorage.getItem(\"corso\"))\r\n\r\n        Axios.get(siteUrl+\"/api/corsi/\"+id).then(response => {\r\n            let corso = response.data as ICorso\r\n\r\n            this.setState({\r\n                corso\r\n            })\r\n        })\r\n\r\n        resizePopup()\r\n    }\r\n\r\n    changeCode = (event: any) => {\r\n        let code = event.target.value\r\n\r\n        this.setState({\r\n            code\r\n        })\r\n\r\n        this.tryToLog(code)\r\n    }\r\n\r\n    tryToLog = (code: string) => {\r\n        if(code.length < this.maxLength) return false\r\n\r\n        this.switchInput(true)\r\n\r\n        let idCorso = parseInt(sessionStorage.getItem(\"corso\")),\r\n        anno = parseInt(sessionStorage.getItem(\"classe\"))\r\n        \r\n        axios.post(siteUrl + \"/api/firma\", {\r\n            code,\r\n            idCorso,\r\n            anno\r\n        }).then(response => {\r\n            this.setState({\r\n                popup: response.data as IMessage\r\n            })\r\n\r\n            this.showMessagePopup()\r\n        }).catch((_) => {\r\n            this.setState({\r\n                popup: genericError\r\n            })\r\n\r\n            this.showMessagePopup()\r\n        })\r\n    }\r\n\r\n    switchInput = (disable: boolean) => {\r\n        let input = document.getElementById(\"mainInput\") as HTMLInputElement\r\n\r\n        if(!input) return\r\n\r\n        if(disable)\r\n            input.setAttribute(\"disabled\", \"disabled\")\r\n        else{\r\n            this.setState({\r\n                code: \"\"\r\n            })\r\n            input.removeAttribute(\"disabled\")\r\n            input.focus()\r\n        }\r\n    }\r\n\r\n    showMessagePopup = () => {\r\n        let popup = document.getElementById(\"popup\")\r\n\r\n        if(!popup) return\r\n\r\n        popup.classList.add(\"show\")\r\n\r\n        setTimeout(() => {\r\n            popup.classList.remove(\"show\")\r\n            this.switchInput(false)\r\n        }, this.state.popup.time)\r\n    }\r\n\r\n    cambiaCorso = () => {\r\n        sessionStorage.removeItem(\"corso\")\r\n        sessionStorage.removeItem(\"classe\")\r\n        sessionStorage.removeItem(\"confermaTutor\")\r\n\r\n        routerHistory.push(\"/\")\r\n    }\r\n\r\n    switchFocus = () => {\r\n        this.setState({\r\n            focus: !this.state.focus\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { popup, corso, focus } = this.state\r\n        let icon = <Icon type=\"loading\" spin />\r\n\r\n        return <div className=\"col\" id=\"mainBlock\">\r\n            <div className=\"text-center w-100\">\r\n                <h2 className=\"mb-1 font-weight-normal\">Scannerizza il codice</h2>\r\n                <h6 className=\"mb-1 text-muted font-weight-normal\">(alza la luminosità del dispositivo)</h6>\r\n                <input autoFocus type=\"password\" value={this.state.code} onChange={this.changeCode} maxLength={this.maxLength} id=\"mainInput\" onFocus={this.switchFocus} onBlur={this.switchFocus}/>\r\n\r\n                <Icon type=\"scan\" className=\"fa-9x d-block text-blue\" />\r\n\r\n                {\r\n                    !focus ? <div className=\"text-danger text-center mt-2\">Clicca sulla pagina per ristabilire il focus e firmare.</div>  : \"\"\r\n                }\r\n\r\n                <div className=\"top-info\">\r\n                    {\r\n                        corso ? corso.nome : <Spin indicator={icon} />\r\n                    }\r\n                        <Divider type=\"vertical\" style={{ height: 20 }} />\r\n                    {\r\n                        parseInt(sessionStorage.getItem(\"classe\")) === 1 ? \"Primo anno\" : \"Secondo anno\"\r\n                    }\r\n                        <Divider type=\"vertical\" style={{ height: 20 }} />\r\n                    <Tooltip placement=\"bottomRight\" title=\"Cambia il corso o la classe per firmare\">\r\n                        <button type=\"button\" className=\"btn btn-sm btn-blue\" onClick={this.cambiaCorso}>\r\n                            <i className=\"far fa-repeat-alt fa-fw mr-1\"></i>\r\n                            Cambia\r\n                        </button>\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"popup\">\r\n                <div className=\"w-100\">\r\n                    <i className={\"fal fa-fw fa-lg fa-6x \" + popup.icon} style={{ color: popup.iconColor}}></i>\r\n                    <h2 className=\"mt-5\">{popup.title}</h2>\r\n                    <div className=\"mt-2\">{popup.message}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport FullCalendar from \"@fullcalendar/react\"\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\"\r\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\"\r\nimport { Modal } from \"antd\"\r\nimport { Digits2 } from \"../utilities\"\r\nimport \"@fullcalendar/core/main.css\"\r\nimport \"@fullcalendar/timegrid/main.css\"\r\n\r\nexport interface IProps{\r\n    readonly calendarId: string\r\n}\r\nexport interface IState{}\r\n\r\nexport default class Calendario extends React.PureComponent<IProps, IState>{\r\n    render(): JSX.Element{\r\n        const { calendarId } = this.props\r\n\r\n        return <FullCalendar\r\n            plugins={[ googleCalendarPlugin, dayGridPlugin ]}\r\n            events={{ googleCalendarId: calendarId }}\r\n            googleCalendarApiKey={\"AIzaSyCEEaAbHOYhofQs-iLdHd_J8-KyD_IlRbE\"}\r\n            defaultView=\"dayGridMonth\"\r\n            fixedWeekCount={false}\r\n            firstDay={1}\r\n            themeSystem={\"bootstrap\"}\r\n            eventTimeFormat={{\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n                meridiem: false\r\n            }}\r\n            buttonText={{\r\n                today: \"Mese corrente\"\r\n            }}\r\n            header={{\r\n                right: \"prev, next\"\r\n            }}\r\n            locale={\"it\"}\r\n            eventClick={\r\n                function(info){\r\n                    info.jsEvent.preventDefault()\r\n                    let event = info.event\r\n                    \r\n                    Modal.info({\r\n                        maskClosable: true,\r\n                        centered: true,\r\n                        icon: null,\r\n                        title: event.title,\r\n                        content: <div className=\"mt-3\" style={{ fontSize: 20 }}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3 pr-0\">\r\n                                    <span className=\"label\">Inizio</span>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <span className=\"desc\">\r\n                                        { Digits2(event.start.getHours()) }:{ Digits2(event.start.getMinutes()) }\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3 pr-0\">\r\n                                    <span className=\"label\">Fine</span>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <span className=\"desc\">\r\n                                        { Digits2(event.end.getHours()) }:{ Digits2(event.end.getMinutes()) }\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            {  \r\n                                event.extendedProps.location && <div className=\"row\">\r\n                                    <div className=\"col-3 pr-0\">\r\n                                        <span className=\"label\">Luogo</span>\r\n                                    </div>\r\n                                    <div className=\"col-9\" style={{ fontSize: 15 }}>\r\n                                        {event.extendedProps.location}\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    })\r\n                }\r\n            }\r\n        />\r\n    }\r\n}","import React from \"react\"\r\nimport { siteUrl } from \"../utilities\"\r\nimport { Icon, Spin } from \"antd\"\r\nimport { ICalendar } from \"../models/ICalendar\"\r\nimport Axios from \"axios\"\r\nimport Calendario from \"./Calendario\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly calendar: ICalendar\r\n}\r\n\r\nexport default class LessonsCalendar extends React.PureComponent<IProps, IState> {\r\n    constructor(props: IProps){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            calendar: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let idCorso = parseInt(sessionStorage.getItem(\"corso\")),\r\n        classe = parseInt(sessionStorage.getItem(\"classe\"))\r\n        \r\n        Axios.get(siteUrl+\"/api/calendari/\"+idCorso+\"/\"+classe).then(response => {\r\n            let calendar = response.data as ICalendar\r\n\r\n            this.setState({\r\n                calendar\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { calendar } = this.state\r\n    \r\n        if(!calendar){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-3\" id=\"mainBlock\">\r\n            <Calendario calendarId={calendar.idCalendario} />\r\n        </div>\r\n    }\r\n  \r\n  }","import React from \"react\"\r\nimport { adminRoute, superAdminRoute, studentRoute, siteUrl } from \"../utilities\"\r\n\r\nexport interface IProps{\r\n    readonly inMenu?: boolean\r\n}\r\nexport interface IState{}\r\n\r\nexport default class Footer extends React.PureComponent<IProps, IState>{\r\n    render(): JSX.Element{\r\n        if(this.props.inMenu){\r\n            return <div className=\"copyright\">\r\n                &copy; {(new Date()).getFullYear()} FITSTIC - <a href={siteUrl+\"/#/documentazione\"} className=\"text-white u-hover\">Documentazione</a>\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"w-100 bg-white p-3 mt-3 shadow px-2 text-center fixed-bottom\">\r\n            <span style={{ position: \"absolute\", right: 20, fontSize: 32, color: \"#000\" }} role=\"img\" aria-label=\"Avocado Team\">🥑</span>\r\n\r\n            <div>\r\n                &copy; {(new Date()).getFullYear()} FITSTIC\r\n            </div>\r\n\r\n            <a href={siteUrl+\"/#\"+adminRoute} className=\"text-blue u-hover align-middle\">Coordinatori</a> | <a href={siteUrl+\"/#\"+superAdminRoute} className=\"text-blue u-hover align-middle\">Amministratori</a> | <a href={siteUrl+\"/#\"+studentRoute} className=\"text-blue u-hover align-middle\">Studenti</a> | <a href={siteUrl+\"/#/firmacasa\"} className=\"text-blue u-hover align-middle\">Firma da remoto</a> | <a href={siteUrl+\"/#/documentazione\"} className=\"text-blue u-hover align-middle\">Documentazione</a>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { siteUrl, mountLogin, unmountLogin } from \"../utilities\"\r\nimport { ICorso } from \"../models/ICorso\"\r\nimport Axios from \"axios\"\r\nimport { Spin, Icon } from \"antd\"\r\nimport { routerHistory } from \"..\"\r\nimport Footer from \"./Footer\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly corsi: ICorso[]\r\n}\r\n\r\nexport default class SceltaCorso extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            corsi: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                corsi\r\n            })\r\n        })\r\n\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    chooseCorso = (id: number) => {\r\n        sessionStorage.setItem(\"corso\", id.toString())\r\n        routerHistory.push(\"/\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { corsi } = this.state\r\n\r\n        if(!corsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50, color: \"#fff\" }} spin />\r\n\r\n            return <div className=\"col-12 px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100\">\r\n                <div className=\"w-100 bg-white py-3 rounded shadow px-2 text-center\">\r\n                    <h3 className=\"text-center\">Scegli il corso</h3>\r\n\r\n                    {\r\n                        corsi.map(c => {\r\n                            return <div className=\"p-3 mx-2 text-center pointer corso-item d-inline-block rounded\" onClick={() => this.chooseCorso(c.idCorso)}>\r\n                                <img src={c.logo} alt=\"logo\" height=\"60\" />\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}","import React from \"react\"\r\nimport { mountLogin, unmountLogin } from \"../utilities\"\r\nimport { routerHistory } from \"..\"\r\nimport Footer from \"./Footer\"\r\n\r\nexport default class SceltaClasse extends React.Component{\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    chooseClasse = (id: number) => {\r\n        sessionStorage.setItem(\"classe\", id.toString())\r\n        routerHistory.push(\"/\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100\">\r\n                <div className=\"w-100 bg-white py-3 rounded shadow\">\r\n                    <h3 className=\"text-center\">Scegli la classe</h3>\r\n\r\n                    <div className=\"py-2 text-center pointer corso-item\" onClick={() => this.chooseClasse(1)}>\r\n                        Primo anno\r\n                    </div>\r\n                    <div className=\"py-2 text-center pointer corso-item\" onClick={() => this.chooseClasse(2)}>\r\n                        Secondo anno\r\n                    </div>\r\n                </div>\r\n                \r\n                <Footer />\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}","import React from \"react\"\r\nimport { Icon, Spin } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, logoUrl } from \"../utilities\"\r\nimport { ICorso } from \"../models/ICorso\"\r\n\r\nexport interface IProps{\r\n    readonly idCorso?: string | number\r\n    readonly forLogin?: boolean\r\n}\r\nexport interface IState{\r\n    readonly logo: string\r\n}\r\n\r\nexport default class LogoCorso extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            logo: null\r\n        }\r\n    }\r\n\r\n    catchNull = () => {\r\n        this.setState({\r\n            logo: logoUrl\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.idCorso){\r\n            this.catchNull()\r\n            return\r\n        }\r\n        \r\n        Axios.get(siteUrl+\"/api/corsi/\"+this.props.idCorso).then(response => {\r\n            let corso = response.data as ICorso\r\n\r\n            if(!corso.logo){\r\n                this.catchNull()\r\n                return\r\n            }\r\n\r\n            this.setState({\r\n                logo: corso.logo\r\n            })\r\n        }).catch(_ =>{\r\n            this.catchNull()\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { logo } = this.state\r\n        \r\n        if(!logo){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50, color: \"#fff\" }} spin />\r\n\r\n            return <div className=\"text-center py-4\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        if(this.props.forLogin){\r\n            return <img src={logo} height=\"40\" className=\"float-right logo\" alt=\"logo\" />\r\n        }else{\r\n            return <div className=\"logo-block px-3 py-4\">\r\n                <img src={logo} height=\"100\" className=\"mx-auto d-block logo\" alt=\"logo\" />\r\n            </div>\r\n        }\r\n    }\r\n}","import React from \"react\"\r\nimport { mountLogin, unmountLogin, siteUrl } from \"../utilities\"\r\nimport { routerHistory } from \"..\"\r\nimport Axios from \"axios\"\r\nimport { Modal } from \"antd\"\r\nimport Footer from \"./Footer\"\r\n\r\nexport interface IProps{\r\n    readonly idCorso: number\r\n}\r\nexport interface IState{\r\n    readonly codice: string\r\n}\r\nexport default class CodiceAccesso extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            codice: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    cambiaCodice = (e: any) => {\r\n        let codice = e.target.value\r\n\r\n        this.setState({\r\n            codice\r\n        })\r\n    }\r\n\r\n    cambiaScelta = () => {\r\n        sessionStorage.removeItem(\"corso\")\r\n        sessionStorage.removeItem(\"classe\")\r\n\r\n        routerHistory.push(\"/\")\r\n    }\r\n\r\n    inviaCodice = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        if(this.state.codice === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire il campo.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.post(siteUrl+\"/api/firma/accedi\", {\r\n            idCorso: this.props.idCorso,\r\n            codice: this.state.codice\r\n        }).then(response => {\r\n\r\n            if(response.data.trim() === \"success\"){\r\n                sessionStorage.setItem(\"confermaTutor\", \"true\")\r\n                routerHistory.push(\"/\")\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Codice non valido.\"\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100\">\r\n                <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.inviaCodice}>\r\n                    <h3 className=\"text-center\">Conferma del coordinatore</h3>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Codice di conferma</label>\r\n                        <input name=\"codice\" type=\"password\" className=\"form-control\" value={this.state.codice} onChange={this.cambiaCodice} />\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"pr-1 col-6\">\r\n                            <input type=\"button\" value=\"Annulla scelta\" className=\"btn btn-lg btn-link text-danger w-100 text-uppercase\" onClick={this.cambiaScelta} />\r\n                        </div>\r\n                        <div className=\"pl-1 col\">\r\n                            <input type=\"submit\" value=\"Prosegui\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"..\"\r\nimport Firma from \"./Firma\"\r\nimport LessonsCalendar from \"./LessonsCalendar\"\r\nimport SceltaCorso from \"./SceltaCorso\"\r\nimport SceltaClasse from \"./SceltaClasse\"\r\nimport LogoCorso from \"./LogoCorso\"\r\nimport CodiceAccesso from \"./CodiceAccesso\"\r\nimport Footer from \"./Footer\"\r\n\r\nexport default class Main extends React.Component{\r\n\r\n    focusInput = () => {\r\n        let input = document.getElementById(\"mainInput\") as HTMLInputElement\r\n\r\n        if(input)\r\n            input.focus()\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        let idCorso = sessionStorage.getItem(\"corso\"),\r\n        classe = sessionStorage.getItem(\"classe\"),\r\n        confermaTutor = sessionStorage.getItem(\"confermaTutor\")\r\n\r\n        if(!idCorso)\r\n            return <SceltaCorso />\r\n\r\n        if(!classe)\r\n            return <SceltaClasse />\r\n\r\n        if(!confermaTutor)\r\n            return <CodiceAccesso idCorso={parseInt(idCorso)} />\r\n\r\n        return <div className=\"container-fluid\" onClick={this.focusInput}>\r\n\r\n            <Router history={routerHistory}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3 bg-blue p-0 menu\">\r\n                        \r\n                        <LogoCorso idCorso={sessionStorage.getItem(\"corso\")} />\r\n\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/\")} exact to=\"/firme/\">\r\n                            <span><i className=\"fal fa-home-alt fa-fw mr-1\"></i> Home</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/calendar\")} exact to=\"/firme/calendar\">\r\n                            <span><i className=\"fal fa-calendar-alt fa-fw mr-1\"></i> Calendario</span>\r\n                        </NavLink>\r\n\r\n                        <Footer inMenu />\r\n                    </div>\r\n\r\n                    <Switch>\r\n                        <Route exact path=\"/firme/\" render={() => (\r\n                            <Firma />\r\n                        )} />\r\n\r\n                        <Route exact path=\"/firme/calendar\" render={() => (\r\n                            <LessonsCalendar />\r\n                        )} />\r\n                    </Switch>\r\n                        \r\n                </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}","export class Cipher{\r\n    private maximum = 65535\r\n\r\n    public encode(msg: string, shift: number = -4){\r\n        let finalMessage = \"\"\r\n    \r\n        if(shift < 0)\r\n            shift = -shift\r\n    \r\n        for(let i = 0; i < msg.length; i++){\r\n            let letter = msg[i],\r\n            charInt = letter.charCodeAt(0),\r\n            newInt = charInt + shift\r\n\r\n            if(newInt > this.maximum)\r\n                newInt = newInt - (this.maximum + 1)\r\n\r\n            letter = String.fromCharCode(newInt)\r\n\r\n            finalMessage += letter\r\n        }\r\n        \r\n        return finalMessage\r\n    }\r\n\r\n    public decode(msg: string, shift: number = -4){\r\n        let finalMessage = \"\"\r\n    \r\n        if(shift < 0)\r\n            shift = -shift\r\n    \r\n        for(let i = 0; i < msg.length; i++){\r\n            let letter = msg[i],\r\n            charInt = letter.charCodeAt(0),\r\n            newInt = charInt - shift\r\n\r\n            if(newInt < 0)\r\n                newInt = this.maximum + (newInt + 1)\r\n\r\n            letter = String.fromCharCode(newInt)\r\n\r\n            finalMessage += letter\r\n        }\r\n        \r\n        return finalMessage\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Steps, Button } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl } from \"../utilities\"\r\nimport { Cipher } from \"../models/Cipher\"\r\n\r\nexport interface IProps{\r\n    readonly show: boolean\r\n    readonly closeModal: () => void\r\n    readonly forStudent?: boolean\r\n}\r\nexport interface IState{\r\n    readonly currentStep: number\r\n    readonly email: string\r\n    readonly code: string\r\n    readonly newPassword: string\r\n    readonly newPasswordConfirm: string\r\n    readonly idUtente: number\r\n    readonly loading: boolean\r\n}\r\n\r\nexport default class ForgotPassword extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            currentStep: 0,\r\n            email: \"\",\r\n            code: \"\",\r\n            newPassword: \"\",\r\n            newPasswordConfirm: \"\",\r\n            idUtente: null,\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    cancelRecover = () => {\r\n        this.setState({\r\n            currentStep: 0,\r\n            email: \"\",\r\n            code: \"\",\r\n            newPassword: \"\",\r\n            newPasswordConfirm: \"\",\r\n            idUtente: null,\r\n            loading: false\r\n        })\r\n\r\n        this.props.closeModal()\r\n    }\r\n\r\n    changeMail = (e: any) => {\r\n        let email = e.target.value.trim()\r\n\r\n        this.setState({\r\n            email\r\n        })\r\n    }\r\n\r\n    changeCode = (e: any) => {\r\n        let code = e.target.value.trim()\r\n\r\n        this.setState({\r\n            code\r\n        })\r\n    }\r\n\r\n    changePassword = (e: any) => {\r\n        let pass = e.target.value\r\n\r\n        this.setState({\r\n            newPassword: pass\r\n        })\r\n    }\r\n\r\n    changePasswordConfirm = (e: any) => {\r\n        let pass = e.target.value\r\n\r\n        this.setState({\r\n            newPasswordConfirm: pass\r\n        })\r\n    }\r\n\r\n    increaseStep = () => {\r\n        this.setState({\r\n            currentStep: this.state.currentStep + 1\r\n        })\r\n    }\r\n\r\n    decreaseStep = () => {\r\n        this.setState({\r\n            currentStep: this.state.currentStep - 1\r\n        })\r\n    }\r\n\r\n    switchLoading = () => {\r\n        this.setState({\r\n            loading: !this.state.loading\r\n        })\r\n    }\r\n\r\n    confirmFirstStep = (e: any) => {\r\n        e.preventDefault()\r\n        \r\n        const { email } = this.state,\r\n        { forStudent } = this.props\r\n\r\n        if(email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        this.switchLoading()\r\n\r\n        let url = forStudent ? \"/api/studenti/recuperopwdstudente\" : \"/api/coordinatori/recuperocoordinatori\"\r\n\r\n        Axios.post(siteUrl + url, {\r\n            email\r\n        }).then(response => {\r\n            let data = response.data,\r\n            idUtente = parseInt(data)\r\n\r\n            if(!isNaN(idUtente)){\r\n                this.setState({\r\n                    idUtente,\r\n                    loading: false\r\n                })\r\n\r\n                this.increaseStep()\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Questa e-mail non corrisponde a nessun utente.\",\r\n                    maskClosable: true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    confirmSecondStep = (e: any) => {\r\n        e.preventDefault()\r\n        \r\n        if(this.state.code === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire il campo.\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        this.increaseStep()\r\n    }\r\n\r\n    savePassword = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { newPassword, newPasswordConfirm, idUtente, code } = this.state,\r\n        { forStudent } = this.props\r\n\r\n        if(newPassword === \"\" || newPasswordConfirm === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(newPassword.length < 8){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"La password deve avere almeno 8 caratteri.\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(newPassword !== newPasswordConfirm){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Le password non corrispondono.\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        this.switchLoading()\r\n\r\n        let cipher = new Cipher(),\r\n        password = cipher.encode(newPassword),\r\n        url = forStudent ? \"/api/Studenti/cambiopassword\" : \"/api/coordinatori/cambiopassword\"\r\n\r\n        Axios.post(siteUrl + url, {\r\n            idUtente,\r\n            password,\r\n            codice: code\r\n        }).then(response => {\r\n            let msg = response.data\r\n\r\n            if(msg.trim() === \"success\"){\r\n                Modal.success({\r\n                    title: \"Complimenti!\",\r\n                    content: \"Password modificata con successo.\",\r\n                    centered: true,\r\n                    onOk: this.cancelRecover\r\n                })\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Non è stato possibile completare l'operazione.\",\r\n                    onOk: () => {\r\n                        this.setState({\r\n                            loading: false\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { show } = this.props\r\n        const { currentStep, email, code, newPassword, newPasswordConfirm, loading } = this.state\r\n        const { Step } = Steps\r\n\r\n        const steps = [{\r\n            title: \"E-mail\",\r\n            content: <form onSubmit={this.confirmFirstStep}>\r\n                <div className=\"form-group my-3\">\r\n                    <label className=\"text-muted\">Inserisci la tua e-mail</label>\r\n                    <input type=\"email\" name=\"email\" value={email} className=\"form-control\" onChange={this.changeMail} disabled={loading} />\r\n                </div>\r\n\r\n                <Button htmlType=\"submit\" className=\"float-right\" type=\"primary\" loading={loading}>Prosegui</Button>\r\n\r\n                <div className=\"clearfix\"></div>\r\n            </form>\r\n        },\r\n        {\r\n            title: \"Codice\",\r\n            content: <form onSubmit={this.confirmSecondStep}>\r\n                <div className=\"form-group my-3\">\r\n                    <label className=\"text-muted\">Inserisci il codice ricevuto via e-mail</label>\r\n                    <input type=\"text\" name=\"code\" value={code} className=\"form-control\" onChange={this.changeCode} disabled={loading} />\r\n                </div>\r\n\r\n                <div className=\"float-right\">\r\n                    <Button className=\"mr-2\" onClick={this.decreaseStep}>Indietro</Button>\r\n\r\n                    <Button htmlType=\"submit\" type=\"primary\" loading={loading}>Prosegui</Button>\r\n                </div>\r\n\r\n                <div className=\"clearfix\"></div>\r\n            </form>\r\n        },\r\n        {\r\n            title: \"Nuova password\",\r\n            content: <form onSubmit={this.savePassword}>\r\n                <div className=\"form-group my-3\">\r\n                    <label className=\"text-muted\">Crea la tua nuova password</label>\r\n                    <input type=\"password\" name=\"newpassword\" value={newPassword} className=\"form-control\" onChange={this.changePassword} disabled={loading} />\r\n                </div>\r\n\r\n                <div className=\"form-group my-3\">\r\n                    <label className=\"text-muted\">Conferma la nuova password</label>\r\n                    <input type=\"password\" name=\"newpassword_conf\" value={newPasswordConfirm} className=\"form-control\" onChange={this.changePasswordConfirm} disabled={loading} />\r\n                </div>\r\n\r\n                <div className=\"float-right\">\r\n                    <Button className=\"mr-2\" onClick={this.decreaseStep}>Indietro</Button>\r\n\r\n                    <Button htmlType=\"submit\" type=\"primary\" loading={loading}>Salva la password</Button>\r\n                </div>\r\n\r\n                <div className=\"clearfix\"></div>\r\n            </form>\r\n        }]\r\n\r\n        return <Modal visible={show} title=\"Recupero della password\" onCancel={this.cancelRecover} footer={null} maskClosable={false}>\r\n            <Steps size=\"small\" current={currentStep}>\r\n                {\r\n                    steps.map(item => {\r\n                        return <Step key={item.title} title={item.title} />\r\n                    })\r\n                }\r\n            </Steps>\r\n\r\n            <div className=\"steps-content\">\r\n                {steps[currentStep].content}\r\n            </div>\r\n        </Modal>\r\n    }\r\n}","import React from \"react\"\r\nimport { routerHistory } from \"../..\"\r\nimport { message, Modal } from \"antd\"\r\nimport { mountLogin, unmountLogin, siteUrl, logoUrl, adminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\nimport { isAdmin } from \"../../models/IAdmin\"\r\nimport ForgotPassword from \"../ForgotPassword\"\r\nimport Footer from \"../Footer\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly adminName: string\r\n    readonly adminPsw: string\r\n    readonly showForgot: boolean\r\n}\r\n\r\nexport default class LoginTutor extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            adminName: \"\",\r\n            adminPsw: \"\",\r\n            showForgot: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    changeInputName = (event: any) => {\r\n        let name = event.target.value\r\n\r\n        this.setState({\r\n            adminName: name\r\n        })\r\n    }\r\n\r\n    changeInputPassword = (event: any) => {\r\n        let psw = event.target.value\r\n\r\n        this.setState({\r\n            adminPsw: psw\r\n        })\r\n    }\r\n\r\n    tryLogin = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { adminName, adminPsw } = this.state\r\n        let cipher = new Cipher(),\r\n        password = cipher.encode(adminPsw)\r\n\r\n        Axios.post(siteUrl+\"/api/coordinatori/logincoordinatore\", {\r\n            username: adminName.trim(),\r\n            password\r\n        }).then(response => {\r\n            let data = response.data\r\n\r\n            if(isAdmin(data)){\r\n                data.password = password\r\n                sessionStorage.setItem(\"adminSession\", JSON.stringify(data))\r\n                routerHistory.push(adminRoute)\r\n                message.success(\"Login effettuato con successo!\")\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Username o Password errati!\",\r\n                    centered: true,\r\n                    maskClosable: true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    switchForgot = () => {\r\n        this.setState({\r\n            showForgot: !this.state.showForgot\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { adminName, adminPsw, showForgot } = this.state\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100\">\r\n                <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.tryLogin}>\r\n                    <h3 className=\"d-inline-block\">Accesso coordinatori</h3>\r\n                    <img src={logoUrl} height=\"40\" className=\"float-right logo\" alt=\"logo\" />\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Utente di accesso</label>\r\n                        <input name=\"username\" type=\"text\" className=\"form-control\" value={adminName} onChange={this.changeInputName} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Password di accesso</label>\r\n                        <input name=\"password\" type=\"password\" className=\"form-control\" value={adminPsw} onChange={this.changeInputPassword} />\r\n                    </div>\r\n\r\n                    <input type=\"submit\" value=\"Accedi\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n\r\n                    <span className=\"link-blue u-hover d-block mt-3 text-center\" onClick={this.switchForgot}>Hai dimenticato la password?</span>\r\n                </form>\r\n\r\n                <Footer />\r\n            </div>\r\n\r\n            <ForgotPassword show={showForgot} closeModal={this.switchForgot} />\r\n        </div>\r\n    }\r\n\r\n}","export interface IAdmin{\r\n    readonly idCoordinatore?: number\r\n    readonly idAmministratore?: number\r\n    readonly idCorso: number\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly codiceCorso?: string\r\n    readonly password?: string\r\n}\r\n\r\nexport const isAdmin = (obj: any) => {\r\n    try{\r\n        return \"idCorso\" in obj && \"nome\" in obj && \"cognome\" in obj\r\n    }catch{\r\n        return false\r\n    }\r\n}\r\n\r\nexport const isSuperAdmin = (obj: any) => {\r\n    try{\r\n        return \"nome\" in obj && \"cognome\" in obj\r\n    }catch{\r\n        return false\r\n    }\r\n}","import React from \"react\"\r\nimport Axios from \"axios\"\r\nimport { Modal, Icon } from \"antd\"\r\nimport { IAdmin } from \"../models/IAdmin\"\r\nimport { checkEnter } from \"../utilities\"\r\nimport { Cipher } from \"../models/Cipher\"\r\n\r\nexport const askPassword = (url: string, callType: string, body?: any, callback?: any, preAction?: any, customText?: string) => {\r\n    let input: HTMLInputElement,\r\n    tutor = JSON.parse(sessionStorage.getItem(\"adminSession\")) as IAdmin,\r\n    admin = JSON.parse(sessionStorage.getItem(\"superSession\")) as IAdmin,\r\n    cipher = new Cipher()\r\n\r\n    const sendForm = () => {\r\n\r\n        if(preAction)\r\n            preAction()\r\n\r\n        if(admin){\r\n            body.authAdmin = {\r\n                idAdmin: admin.idAmministratore,\r\n                password: admin.password\r\n            }\r\n        }\r\n        else if(tutor){\r\n            body.authCoordinatore = {\r\n                idCoordinatore: tutor.idCoordinatore,\r\n                password: tutor.password\r\n            }\r\n        }else{\r\n            if(input.value === \"\"){\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Riempire il campo.\",\r\n                    centered: true,\r\n                    maskClosable: true\r\n                })\r\n                \r\n                return true\r\n            }\r\n            \r\n            body.password = \"idStudente\" in body ? cipher.encode(input.value) : input.value.trim()\r\n        }\r\n\r\n        if(callType === \"post\"){\r\n            Axios.post(url, body).then(callback).catch(_ => {\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"C'è stato un problema. Forse sei stato disconnesso: prova a riefettuare il login.\"\r\n                })\r\n            })\r\n        }else if(callType === \"put\"){\r\n            Axios.put(url, body).then(callback).catch(_ => {\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"C'è stato un problema. Forse sei stato disconnesso: prova a riefettuare il login.\"\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    if(tutor || admin){\r\n        sendForm()\r\n    }else{\r\n        let modal = Modal.confirm({\r\n            title: \"Prima di procedere...\",\r\n            content: <div style={{ marginLeft: -38 }}>\r\n                <div className=\"form-group mb-0\">\r\n                    <label className=\"text-secondary\">\r\n                        {customText ? customText : \"Inserisci la tua password per confermare l'identità\"}\r\n                    </label>\r\n                    <input type=\"password\" ref={r => input = r} className=\"form-control\" onKeyUp={(e) => checkEnter(e, () => {\r\n                        if(!sendForm())\r\n                            modal.destroy()\r\n                    })} />\r\n                </div>\r\n            </div>,\r\n            okText: \"Conferma identità\",\r\n            cancelText: \"Annulla\",\r\n            onOk: sendForm,\r\n            icon: <Icon type=\"lock\" style={{ color: \"var(--danger)\" }} />,\r\n            centered: true\r\n        })\r\n\r\n        setTimeout(() => {\r\n            input.focus()\r\n        }, 300)\r\n    }\r\n}","import React from \"react\"\r\nimport { Switch } from \"antd\"\r\nimport { siteUrl } from \"../../utilities\"\r\nimport { askPassword } from \"../AskConferma\"\r\nimport Axios from \"axios\"\r\n\r\nexport interface IProps{\r\n    readonly idCorso: number\r\n    readonly anno: number\r\n}\r\nexport interface IState{\r\n    readonly stage: boolean\r\n    readonly loading: boolean\r\n}\r\n\r\nexport default class StageSwitch extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            stage: false,\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { idCorso, anno } = this.props\r\n\r\n        this.toggleLoading()\r\n\r\n        Axios.get(siteUrl+\"/api/corsi/getstagevalue/\"+idCorso+\"/\"+anno).then(response => {\r\n            let status = response.data as boolean\r\n\r\n            this.setState({\r\n                stage: status\r\n            })\r\n\r\n            this.toggleLoading()\r\n        })\r\n    }\r\n\r\n    toggleLoading = () => {\r\n        this.setState({\r\n            loading: !this.state.loading\r\n        })\r\n    }\r\n\r\n    switchStage = () => {\r\n        this.toggleLoading()\r\n\r\n        askPassword(siteUrl+\"/api/corsi/switchabilitastage\", \"post\", {\r\n            anno: this.props.anno\r\n        }, (response: any) => {\r\n            let message = response.data\r\n\r\n            if(message === \"success\"){\r\n                this.toggleLoading()\r\n\r\n                this.setState({\r\n                    stage: !this.state.stage\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { stage, loading } = this.state\r\n\r\n        return <label className=\"pointer mb-3\">\r\n            <Switch loading={loading} onChange={this.switchStage} checked={stage} className=\"mr-1 align-top\" /> Attiva lo stage per questa classe\r\n        </label>\r\n    }\r\n}","import React from \"react\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport { routerHistory } from \"../..\"\r\nimport { Modal, Tooltip, Spin, Icon, Checkbox, Collapse, DatePicker, message, Tabs, Input } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, formattaData, adminRoute } from \"../../utilities\"\r\nimport locale from \"antd/es/date-picker/locale/it_IT\"\r\nimport { askPassword } from \"../AskConferma\"\r\nimport StageSwitch from \"./StageSwitch\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly students: IStudent[]\r\n    readonly selection: IStudent[]\r\n    readonly confirmModal: boolean\r\n    readonly filter: string\r\n}\r\n\r\nexport default class StudentsList extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            students: null,\r\n            selection: [],\r\n            confirmModal: false,\r\n            filter: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/studenti/\"+this.props.corso).then(response => {\r\n            this.setState({\r\n                students: response.data as IStudent[]\r\n            })\r\n        })\r\n    }\r\n\r\n    showConfirm = (student: IStudent) => {\r\n        const { students } = this.state\r\n        let date: string = \"\"\r\n\r\n        Modal.confirm({\r\n            title: `${student.nome} ${student.cognome}`,\r\n            content: <div style={{ marginLeft: -38 }}>\r\n                <p>Confermi di voler ritirare questo studente dal corso?</p>\r\n                <label className=\"text-secondary\">Data di ritiro</label>\r\n                \r\n                <DatePicker locale={locale} className=\"w-100\" onChange={(_, d2) => date = d2} format=\"DD-MM-YYYY\" />\r\n            </div>,\r\n            okText: \"Conferma ritiro\",\r\n            okType: \"danger\",\r\n            cancelText: \"Annulla\",\r\n            icon: <Icon type=\"warning\" className=\"text-danger\" theme=\"filled\" />,\r\n            onOk: () => {\r\n                if(date === \"\"){\r\n                    Modal.error({\r\n                        title: \"Errore!\",\r\n                        content: \"Seleziona una data valida.\"\r\n                    })\r\n\r\n                    return true\r\n                }\r\n\r\n                let dataRitiro = formattaData(date, true),\r\n                studente = student as any\r\n                studente.ritirato = \"true\"\r\n                studente.dataRitiro = dataRitiro\r\n                \r\n                askPassword(siteUrl+\"/api/studenti/\" + student.idStudente, \"put\", {\r\n                    studente\r\n                }, (response: any) => {\r\n\r\n                    let stu = response.data as IStudent,\r\n                    currentList = students as any,\r\n                    editingStudent = students.indexOf(student)\r\n                    \r\n                    currentList[editingStudent] = stu\r\n\r\n                    this.setState({\r\n                        students: currentList as IStudent[]\r\n                    })\r\n\r\n                    message.success(\"Studente ritirato con successo!\")\r\n                }, () => {\r\n                    this.setState({\r\n                        students: null\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    changeSelection = (student: IStudent) => {\r\n        let find = this.state.selection.find(s => s === student),\r\n        newList = find ? this.state.selection.filter(s => s.idStudente !== student.idStudente) : this.state.selection.concat(student)\r\n\r\n        this.setState({\r\n            selection: newList\r\n        })\r\n    }\r\n\r\n    selectAll = (anno: number, event: any) => {\r\n        let selectionList = event.target.checked ? this.state.students.filter(s => s.annoFrequentazione === anno && !s.ritirato) : this.state.selection.filter(s => s.annoFrequentazione !== anno)\r\n\r\n        this.setState({\r\n            selection: selectionList\r\n        })\r\n    }\r\n\r\n    showHideModal = () => {\r\n        if(!this.state.selection.length){\r\n            Modal.info({\r\n                title: \"Attenzione!\",\r\n                content: \"Devi selezionare almeno uno studente.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            confirmModal: !this.state.confirmModal\r\n        })\r\n    }\r\n\r\n    moveStudents = () => {\r\n        let select = document.getElementById(\"moveToClass\") as HTMLSelectElement,\r\n        value = parseInt(select.value),\r\n        studenti = this.state.selection.map(s => {\r\n            let stu = s as any\r\n            stu.idCorso = this.props.corso\r\n            stu.annoFrequentazione = value\r\n\r\n            return stu\r\n        })\r\n\r\n        if(value !== 1 && value !== 2){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"L'anno selezionato non è valido.\"\r\n            })\r\n        }\r\n\r\n        askPassword(siteUrl+\"/api/studenti\", \"put\", {\r\n            studenti\r\n        }, (response: any) => {\r\n            this.setState({\r\n                students: response.data as IStudent[],\r\n                confirmModal: false\r\n            })\r\n\r\n            message.success(\"Studenti spostati con successo!\")\r\n        }, () => {\r\n            this.setState({\r\n                students: null,\r\n                selection: []\r\n            })\r\n        })\r\n    }\r\n\r\n    allRetired = (group: IStudent[]) => {\r\n        let allRetired = true\r\n\r\n        group.forEach(s => {\r\n            if(!s.ritirato)\r\n                allRetired = false\r\n        })\r\n\r\n        return !allRetired\r\n    }\r\n\r\n    sortbyId = (a: IStudent, b: IStudent) => { \r\n        if(a.idStudente > b.idStudente)\r\n            return-1\r\n        if(a.idStudente < b.idStudente)\r\n            return 1\r\n\r\n        return 0\r\n    }\r\n\r\n    promuoviStudent = (s: IStudent) => {\r\n        Modal.confirm({\r\n            title: `${s.nome} ${s.cognome}`,\r\n            content: \"Confermi di voler segnare questo studente come archiviato?\",\r\n            okText: \"Conferma\",\r\n            okType: \"primary\",\r\n            cancelText: \"Annulla\",\r\n            onOk: () => {\r\n                askPassword(siteUrl+\"/api/studenti/promuovistudente\", \"put\", {\r\n                    idStudente: s.idStudente\r\n                }, (response: any) => {\r\n                    \r\n                    let students = response.data as IStudent[]\r\n        \r\n                    this.setState({\r\n                        students\r\n                    })\r\n        \r\n                    message.success(\"Studente archiviato con successo!\")\r\n                }, () => {\r\n                    this.setState({\r\n                        students: null\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    changeFilter = (e: any) => {\r\n        let filter = e.target.value\r\n\r\n        this.setState({\r\n            filter\r\n        })\r\n    }\r\n\r\n    filterStudentsByFilter = () => {\r\n        const { students, filter } = this.state\r\n\r\n        return students.filter(s => s.nome.toLowerCase().indexOf(filter.toLowerCase()) !== -1 || s.cognome.toLowerCase().indexOf(filter.toLowerCase()) !== -1)\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { students, selection, filter } = this.state,\r\n        { Panel } = Collapse,\r\n        { TabPane } = Tabs\r\n        \r\n        if(!students){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n        \r\n        let firstYear = students.filter(s => s.annoFrequentazione === 1 && !s.promosso).sort(this.sortbyId).sort((a, _) => a.ritirato ? 0 : -1),\r\n        secondYear = students.filter(s => s.annoFrequentazione === 2 && !s.promosso).sort(this.sortbyId).sort((a, _) => a.ritirato ? 0 : -1),\r\n        groups = [firstYear, secondYear],\r\n        studentiRitirati = filter.trim() === \"\" ? students : this.filterStudentsByFilter(),\r\n        ritirati = studentiRitirati.filter(s => s.promosso).sort(this.sortbyId).sort((a, _) => a.ritirato ? 0 : -1)\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Studenti del corso</h3>\r\n\r\n            <Tabs defaultActiveKey=\"1\">\r\n                <TabPane tab={<span><i className=\"fal fa-user fa-fw mr-1\"></i> Studenti attivi</span>} key=\"1\">\r\n                    <button className=\"btn btn-success float-right mr-1\" type=\"button\" onClick={() => routerHistory.push(adminRoute+\"/studenti/new\")}>\r\n                        <i className=\"fal fa-plus fa-fw\"></i> Aggiungi studente\r\n                    </button>\r\n\r\n                    <button className=\"btn btn-orange float-right mr-2\" type=\"button\" onClick={this.showHideModal}>\r\n                        <i className=\"fa fa-arrows-alt fa-fw\"></i> Sposta studenti\r\n                    </button>\r\n\r\n                    <button className=\"btn btn-blue float-right mr-2\" type=\"button\" onClick={() => routerHistory.push(adminRoute+\"/studenti/import\")}>\r\n                        <i className=\"fa fa-file-csv fa-fw\"></i> Importa da CSV\r\n                    </button>\r\n\r\n                    <div className=\"clearfix\"></div>\r\n\r\n                    <Tabs defaultActiveKey=\"0\">\r\n                        \r\n                        {\r\n                            groups.map((g, i) => {\r\n                                if(!g[0])\r\n                                    return false\r\n                                    \r\n                                let checkedAll = this.allRetired(g),\r\n                                tabTitle = g[0].annoFrequentazione === 1 ? \"Primo\" : \"Secondo\"\r\n\r\n                                g.forEach(element => {\r\n                                    if(selection.indexOf(element) === -1 && !element.ritirato)\r\n                                        checkedAll = false\r\n                                })\r\n\r\n                                return <TabPane tab={tabTitle + \" anno\"} key={i.toString()}>\r\n                                    <StageSwitch anno={g[0].annoFrequentazione} idCorso={g[0].idCorso} />\r\n                                    \r\n                                    <table className=\"table table-bordered text-center\">\r\n\r\n                                        <tbody className=\"border-top-0\">\r\n                                            <tr>\r\n                                                <th style={{width: \"5%\"}}>\r\n                                                    <Tooltip title=\"Seleziona tutti\">\r\n                                                        <Checkbox onChange={(e) => this.selectAll(g[0].annoFrequentazione, e)} checked={checkedAll} />\r\n                                                    </Tooltip>\r\n                                                </th>\r\n                                                <th>Studente</th>\r\n                                                <th>Codice Fiscale</th>\r\n                                                <th style={{width: \"15%\"}}>Frequenza</th>\r\n                                                <th style={{width: \"26%\"}}>Azioni</th>\r\n                                            </tr>\r\n                                \r\n                                            {\r\n                                                g.map(s => {\r\n                                                    let checked = this.state.selection.find(n => n === s) ? true : false,\r\n                                                    bg = s.ritirato ? \"light font-italic\" : \"white\"\r\n                            \r\n                                                    return <tr className={\"bg-\"+bg}>\r\n                                                        <td>\r\n                                                            {\r\n                                                                s.ritirato ? <Checkbox disabled /> : <Checkbox onChange={() => this.changeSelection(s)} checked={checked} />\r\n                                                            }\r\n                                                        </td>\r\n                                                        <Tooltip title={s.nome + \" \" + s.cognome}>\r\n                                                            <td style={{maxWidth: 0}} className=\"text-truncate\">{s.nome} {s.cognome}</td>\r\n                                                        </Tooltip>\r\n                                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cf}</td>\r\n                                                        <td style={{maxWidth: 0}} className=\"text-truncate\">\r\n                                                            {isNaN(s.frequenza) ? 0 : s.frequenza}%\r\n                                                        </td>\r\n                                                        \r\n                                                        <td>\r\n                                                            <Tooltip title=\"Dettagli\">\r\n                                                                <button type=\"button\" className=\"btn btn-info circle-btn\" onClick={() => routerHistory.push(adminRoute+\"/studenti/\" + s.idStudente)}>\r\n                                                                    <i className=\"fa fa-info\"></i>\r\n                                                                </button>\r\n                                                            </Tooltip>\r\n                                                            \r\n                                                            {\r\n                                                                !s.ritirato && <Tooltip title=\"Modifica\">\r\n                                                                    <button type=\"button\" className=\"btn btn-warning text-white circle-btn ml-2\" onClick={() => routerHistory.push(adminRoute+\"/studenti/edit/\" + s.idStudente)}>\r\n                                                                        <i className=\"fa fa-pen\"></i>\r\n                                                                    </button>\r\n                                                                </Tooltip>\r\n                                                            }\r\n                                                            {\r\n                                                                !s.ritirato && <Tooltip title=\"Segna come ritirato\">\r\n                                                                    <button type=\"button\" className=\"btn btn-danger circle-btn ml-2\" onClick={() => this.showConfirm(s)}>\r\n                                                                        <i className=\"fa fa-user-times\"></i>\r\n                                                                    </button>\r\n                                                                </Tooltip>\r\n                                                            }\r\n\r\n                                                            {\r\n                                                                s.ritirato && <Tooltip title=\"Studente ritirato\">\r\n                                                                    <button type=\"button\" className=\"circle-btn ml-2 border-0\">\r\n                                                                        <i className=\"fa fa-user-slash\"></i>\r\n                                                                    </button>\r\n                                                                </Tooltip>\r\n                                                            }\r\n\r\n                                                            <Tooltip title=\"Archivia studente\">\r\n                                                                <button type=\"button\" className=\"btn btn-success circle-btn ml-2\" onClick={() => this.promuoviStudent(s)}>\r\n                                                                    <i className=\"fa fa-user-check\"></i>\r\n                                                                </button>\r\n                                                            </Tooltip>\r\n                                                            \r\n                                                        </td>\r\n                                                    </tr>\r\n                                                })\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </TabPane>\r\n                            })\r\n                        }\r\n                    </Tabs>\r\n                </TabPane>\r\n\r\n                <TabPane tab={<span><i className=\"fal fa-user-graduate fa-fw mr-1\"></i> Studenti archiviati</span>} key=\"2\">\r\n                    <div className=\"float-right mr-1 mb-2\">\r\n                        <label className=\"d-inline-block text-secondary mr-2\">Filtra studenti: </label>\r\n                        <Input value={filter} onChange={this.changeFilter} className=\"w-auto\" />\r\n                    </div>\r\n\r\n                    <table className=\"table table-bordered text-center\">\r\n                        <tbody className=\"border-top-0\">\r\n\r\n                            <tr>\r\n                                <th><i className=\"fa fa-check-circle fa-lg text-success\"></i></th>\r\n                                <th>Studente</th>\r\n                                <th>Codice Fiscale</th>\r\n                                <th style={{width: \"15%\"}}>Anno</th>\r\n                                <th style={{width: \"15%\"}}>Frequenza</th>\r\n                                <th style={{width: \"20%\"}}>Azioni</th>\r\n                            </tr>\r\n                            \r\n                            {\r\n                                ritirati.map(s => {\r\n                                    let bg = s.ritirato ? \"light font-italic\" : \"white\"\r\n\r\n                                    return <tr className={\"bg-\"+bg}>\r\n                                        <td>\r\n                                            {\r\n                                                !s.ritirato ? <i className=\"fa fa-check-circle fa-lg text-success\"></i> : <i className=\"fa fa-times-circle fa-lg text-danger\"></i>\r\n                                            }\r\n                                        </td>\r\n                                        <Tooltip title={s.nome + \" \" + s.cognome}>\r\n                                            <td style={{maxWidth: 0}} className=\"text-truncate\">{s.nome} {s.cognome}</td>\r\n                                        </Tooltip>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cf}</td>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">\r\n                                            {s.annoFrequentazione === 1 ? \"Primo\" : \"Secondo\"}\r\n                                        </td>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">\r\n                                            {isNaN(s.frequenza) ? 0 : s.frequenza}%\r\n                                        </td>\r\n                                        \r\n                                        <td>\r\n                                            <Tooltip title=\"Dettagli\">\r\n                                                <button type=\"button\" className=\"btn btn-info circle-btn\" onClick={() => routerHistory.push(adminRoute+\"/studenti/\" + s.idStudente)}>\r\n                                                    <i className=\"fa fa-info\"></i>\r\n                                                </button>\r\n                                            </Tooltip>                                            \r\n                                        </td>\r\n                                    </tr>\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </TabPane>\r\n            </Tabs>\r\n\r\n            <Modal title=\"Sposta studenti\" visible={this.state.confirmModal} onCancel={this.showHideModal} cancelText=\"Annulla\" okText=\"Conferma\" onOk={this.moveStudents}>\r\n                <label className=\"text-secondary\">Scegliere l'anno in cui spostare gli studenti</label>\r\n                <select className=\"custom-select\" id=\"moveToClass\">\r\n                    <option value=\"1\">Primo anno</option>\r\n                    <option value=\"2\">Secondo anno</option>\r\n                </select>\r\n\r\n                <Collapse bordered={false}>\r\n                    <Panel header=\"Mostra studenti selezionati\" key={1}>\r\n                        { \r\n                            selection.map(s => {\r\n                                return <span className=\"d-block\">\r\n                                    <strong>{s.nome} {s.cognome}</strong> ({s.annoFrequentazione}° anno)\r\n                                </span>\r\n                            })\r\n                        }\r\n                    </Panel>\r\n                </Collapse>\r\n            </Modal>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, message, DatePicker, Icon } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, formattaData, adminRoute } from \"../../utilities\"\r\nimport locale from \"antd/es/date-picker/locale/it_IT\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly dataNascita: string\r\n    readonly cf: string\r\n    readonly email: string\r\n    readonly annoScolastico: number\r\n    readonly loading: boolean\r\n}\r\n\r\nexport default class AddNewStudent extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            cf: \"\",\r\n            annoScolastico: 1,\r\n            email: \"\",\r\n            dataNascita: \"\",\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email\r\n        })\r\n    }\r\n    \r\n    changeData = (data: string) => {\r\n        this.setState({\r\n            dataNascita: data\r\n        })\r\n    }\r\n\r\n    changeAnnoScolastico = (event: any) => {\r\n        let annoS = event.target.value\r\n\r\n        this.setState({\r\n            annoScolastico: Number(annoS)\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let CF = event.target.value.trim()\r\n\r\n        this.setState({\r\n            cf: CF\r\n        })\r\n    }\r\n\r\n    aggiungiStudente = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { nome, cognome, dataNascita, cf, annoScolastico, email } = this.state\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || dataNascita === \"\" || cf === \"\" || !annoScolastico || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(cf.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        let students = [{\r\n            nome: nome.trim(),\r\n            cognome: cognome.trim(),\r\n            cf,\r\n            password: cf,\r\n            email,\r\n            annoFrequentazione: annoScolastico,\r\n            dataNascita: formattaData(dataNascita, true),\r\n            idCorso: this.props.corso\r\n        }]\r\n\r\n        this.toggleLoading()\r\n\r\n        askPassword(siteUrl+\"/api/studenti\", \"post\", {\r\n            studenti: students\r\n        }, (_: any) => {\r\n            this.toggleLoading()\r\n            message.success(\"Studente creato con successo!\")\r\n            routerHistory.push(adminRoute+\"/studenti\")\r\n        })\r\n\r\n    }\r\n\r\n    toggleLoading = () => {\r\n        this.setState({\r\n            loading: !this.state.loading\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, cf, email, loading } = this.state\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Aggiungi un nuovo studente</h3>\r\n\r\n            <form onSubmit={this.aggiungiStudente}>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Anno frequentato</label>\r\n                        <select name=\"anno\" onChange={this.changeAnnoScolastico} className=\"custom-select\">\r\n                            <option value={1}>Primo anno</option>\r\n                            <option value={2}>Secondo anno</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Data di nascita</label>\r\n                        <DatePicker locale={locale} className=\"w-100 select-date\" onChange={(_, d2) => this.changeData(d2)} format=\"DD-MM-YYYY\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={cf} onChange={this.changeCF} />\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-success text-uppercase w-100\" disabled={loading}>\r\n                    {\r\n                        loading && <Icon type=\"loading\" className=\"mr-2 loadable-btn\" spin />\r\n                    }\r\n                    Aggiungi studente</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { IPresenze } from \"../../models/IPresenze\"\r\nimport { Tooltip, Icon, Spin, Modal, Select, TimePicker } from \"antd\"\r\nimport { siteUrl, formatItalian, validateTime, convertFromUTC, getDateTime } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { askPassword } from \"../AskConferma\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport moment from \"moment\"\r\n\r\nexport interface IProps{\r\n    readonly studente: IStudent\r\n    reloadTotali(): void\r\n}\r\nexport interface IState{\r\n    readonly presenze: IPresenze[]\r\n    readonly editingList: IPresenze[]\r\n    readonly filter: string\r\n}\r\n\r\nexport default class PresenzeTable extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            presenze: null,\r\n            editingList: [],\r\n            filter: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { studente } = this.props\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/getdetailedpresences/\"+studente.idStudente).then(response => {\r\n\r\n            let presenze = response.data as IPresenze[]\r\n\r\n            this.setState({\r\n                presenze: presenze.map(p => {\r\n                    p.ingresso = convertFromUTC(p.ingresso)\r\n                    p.uscita = getDateTime(p.uscita) === \"00:00\" ? \"Non firmata\" : convertFromUTC(p.uscita)\r\n\r\n                    return p\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    changeEntrata = (entrata: string, idPresenza: number) => {\r\n        let presenze = this.state.editingList.map(p => {\r\n            if(p.idPresenza === idPresenza)\r\n                p.ingresso = entrata\r\n\r\n            return p\r\n        }) \r\n\r\n        this.setState({\r\n            editingList: presenze\r\n        })\r\n    }\r\n\r\n    changeUscita = (uscita: string, idPresenza: number) => {\r\n        let presenze = this.state.editingList.map(p => {\r\n            if(p.idPresenza === idPresenza)\r\n                p.uscita = uscita\r\n\r\n            return p\r\n        }) \r\n\r\n        this.setState({\r\n            editingList: presenze\r\n        })\r\n    }\r\n\r\n    startTimeEdit = (p: IPresenze) => {\r\n        this.setState({\r\n            editingList: this.state.editingList.concat(p)\r\n        })\r\n    }\r\n\r\n    animateTds = (td1: HTMLElement, td2: HTMLElement) => {\r\n        td1.classList.add(\"edited\")\r\n        td2.classList.add(\"edited\")\r\n\r\n        setTimeout(() => {\r\n            td1.classList.remove(\"edited\")\r\n            td2.classList.remove(\"edited\")\r\n        }, 1000)\r\n    }\r\n\r\n    confirmEdit = (id: number, td1: HTMLElement, td2: HTMLElement) => {\r\n        const { presenze, editingList } = this.state,\r\n        presenza = editingList.find(p => p.idPresenza === id)\r\n\r\n        if(!validateTime(presenza.ingresso) || !validateTime(presenza.uscita)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Orari non validi. (ore:minuti)\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        let data = new Date()\r\n\r\n        askPassword(siteUrl+\"/api/presenze/\" + id, \"put\", {\r\n            idPresenza: presenza.idPresenza,\r\n            idStudente: presenza.idStudente,\r\n            ingresso: new Date(`${data.getFullYear()}-${data.getMonth() + 1}-${data.getDate()} ${presenza.ingresso}`),\r\n            uscita: new Date(`${data.getFullYear()}-${data.getMonth() + 1}-${data.getDate()} ${presenza.uscita}`),\r\n            idLezione: presenza.idLezione\r\n        }, (response: any) => {\r\n            let output = response.data\r\n\r\n            if(output.trim() === \"success\"){\r\n                let newPresenze = presenze.map(p => {\r\n                    if(p.idPresenza === id){\r\n                        return presenza\r\n                    }\r\n\r\n                    return p\r\n                })\r\n\r\n                this.setState({\r\n                    presenze: newPresenze,\r\n                    editingList: editingList.filter(p => p.idPresenza !== presenza.idPresenza)\r\n                })\r\n\r\n                this.animateTds(td1, td2)\r\n                this.props.reloadTotali()\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: output\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    getCategorie = () => {\r\n        const { presenze } = this.state \r\n        let categorie: string[] = []\r\n\r\n        presenze.forEach(p => {\r\n            if(categorie.indexOf(p.lezione) === -1)\r\n                categorie.push(p.lezione)\r\n        })\r\n\r\n        return categorie\r\n    }\r\n\r\n    changeFilter = (filter: string) => {\r\n        this.setState({\r\n            filter: filter === \"\" ? null : filter\r\n        })\r\n    }\r\n\r\n    annullaModifica = (presenza: IPresenze) => {\r\n        this.setState({\r\n            editingList: this.state.editingList.filter(p => p.idPresenza !== presenza.idPresenza)\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { presenze, editingList, filter } = this.state,\r\n        { studente } = this.props,\r\n        { Option } = Select\r\n\r\n        if(!presenze){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div>\r\n                <Spin indicator={icon} className=\"mt-3\" />\r\n            </div>\r\n        }\r\n\r\n        let presences = filter ? presenze.filter(p => p.lezione.toLowerCase() === filter.toLowerCase()) : presenze\r\n\r\n        return <div className=\"mt-3\">\r\n\r\n            <h3 className=\"d-inline-block\">Presenze dello studente</h3>\r\n\r\n            <div className=\"float-right\">\r\n                <label className=\"d-inline-block text-secondary mr-2\">Filtra per materia: </label>\r\n                <Select defaultValue=\"\" style={{ width: 150 }} onChange={this.changeFilter} showSearch>\r\n                    <Option value=\"\">Nessuna</Option>\r\n                    {\r\n                        this.getCategorie().map(l =>{\r\n                            return <Option value={l}>{l}</Option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            </div>\r\n            \r\n            <div className=\"clearfix\"></div>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Giorno</th>\r\n                        <th>Entrata</th>\r\n                        <th>Uscita</th>\r\n                        <th>Lezione</th>\r\n                        {\r\n                            !studente.promosso && <th style={{ width: \"20%\" }}>Azioni</th>\r\n                        }\r\n                    </tr>\r\n\r\n                    {\r\n                        presences.map(p => {\r\n                            let presenzaEdit = editingList.find(pre => pre.idPresenza === p.idPresenza),\r\n                            td1: HTMLElement,\r\n                            td2: HTMLElement\r\n\r\n                            return <tr>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\">{formatItalian(p.data)}</td>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\" ref={r => td1 = r}>\r\n                                    {\r\n                                        presenzaEdit ? <TimePicker defaultValue={moment(p.ingresso, 'HH:mm')} format='HH:mm' onChange={(_, ingresso) => this.changeEntrata(ingresso, p.idPresenza)} minuteStep={10} placeholder=\"Seleziona una data\" /> : <span>{p.ingresso}</span>\r\n                                    }\r\n                                </td>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\" ref={r => td2 = r}>\r\n                                    {\r\n                                        presenzaEdit ? <TimePicker defaultValue={moment(p.uscita, 'HH:mm')} format='HH:mm' onChange={(_, uscita) => this.changeUscita(uscita, p.idPresenza)} minuteStep={10} placeholder=\"Seleziona una data\" /> : <span>{p.uscita}</span>\r\n                                    }\r\n                                </td>\r\n                                <Tooltip title={p.lezione}>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{p.lezione}</td>\r\n                                </Tooltip>\r\n                                {\r\n                                    !studente.promosso && <td>\r\n                                        {\r\n                                            presenzaEdit ? <div>\r\n                                                <Tooltip title=\"Annulla\">\r\n                                                    <button type=\"button\" className=\"btn btn-danger circle-btn\" onClick={() => this.annullaModifica(p)} >\r\n                                                        <i className=\"fa fa-times\"></i>\r\n                                                    </button>\r\n                                                </Tooltip>\r\n\r\n                                                <Tooltip title=\"Conferma modifiche\">\r\n                                                    <button type=\"button\" className=\"btn btn-success circle-btn ml-2\" onClick={() => this.confirmEdit(p.idPresenza, td1, td2)} >\r\n                                                        <i className=\"fa fa-check\"></i>\r\n                                                    </button>\r\n                                                </Tooltip>\r\n                                            </div> : <Tooltip title=\"Modifica orari\">\r\n                                                <button type=\"button\" className=\"btn btn-orange circle-btn\" onClick={() => this.startTimeEdit(p)}>\r\n                                                    <i className=\"fa fa-user-edit\"></i>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                        }\r\n                                    </td>\r\n                                }\r\n                            </tr>\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport Axios from \"axios\"\r\nimport { Modal, Spin, Icon, Tooltip, Button } from \"antd\"\r\nimport { IStage } from \"../../models/IStage\"\r\nimport { siteUrl, formatItalian, convertFromUTC } from \"../../utilities\"\r\n\r\nexport interface IProps{\r\n    readonly idStudente: number\r\n    readonly toggleModal: () => void\r\n    readonly show: boolean\r\n}\r\nexport interface IState{\r\n    readonly oreList: IStage[]\r\n}\r\n\r\nexport default class StudentStage extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            oreList: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/studenti/getorestage/\"+this.props.idStudente).then(response => {\r\n            let oreList = response.data as IStage[]\r\n\r\n            this.setState({\r\n                oreList\r\n            })\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        const { oreList } = this.state,\r\n        { toggleModal, show } = this.props,\r\n        icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n        return <Modal visible={show} title=\"Ore di stage svolte\" onCancel={toggleModal} width=\"60%\" footer={[\r\n            <Button onClick={toggleModal} type=\"primary\">Chiudi</Button>\r\n        ]}>\r\n            {\r\n                !oreList ? <div className=\"text-center\">\r\n                    <Spin indicator={icon} />\r\n                </div> : <div>\r\n                    {\r\n                        !oreList.length ? <div className=\"text-center\">Ore stage non segnate.</div> : <table className=\"table table-bordered text-center\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th style={{width: \"15%\"}}>Data</th>\r\n                                    <th style={{width: \"25%\"}}>Descrizione</th>\r\n                                    <th>Inizio</th>\r\n                                    <th>Fine</th>\r\n                                    <th>Ore svolte</th>\r\n                                </tr>\r\n\r\n                                {\r\n                                    oreList.map(s => {        \r\n                                        return <tr>\r\n                                            <td>{formatItalian(s.data)}</td>\r\n                                            <Tooltip title={s.argomento}>\r\n                                                <td style={{maxWidth: 0}} className=\"text-truncate\">{s.argomento}</td>\r\n                                            </Tooltip>\r\n                                            <td style={{maxWidth: 0}} className=\"text-truncate\">{convertFromUTC(s.oraInizio + \"Z\")}</td>\r\n                                            <td style={{maxWidth: 0}} className=\"text-truncate\">{convertFromUTC(s.oraFine + \"Z\")}</td>\r\n                                            <td style={{maxWidth: 0}} className=\"text-truncate\">{s.totaleRelativo}</td>\r\n                                        </tr>\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    }\r\n                </div>\r\n            }\r\n        </Modal>\r\n    }\r\n}","import React from \"react\"\r\nimport { RouteComponentProps } from \"react-router\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport { routerHistory } from \"../..\"\r\nimport { Icon, Spin, Progress, Statistic, Modal, Button } from \"antd\"\r\nimport PresenzeTable from \"./PresenzeTable\"\r\nimport Axios from \"axios\"\r\nimport { formatItalian, siteUrl, adminRoute, avocadoUrl } from \"../../utilities\"\r\nimport QRCode from \"qrcode.react\"\r\nimport StudentStage from \"./StudentStage\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly student: IStudent\r\n    readonly totPresenze: number\r\n    readonly oreTotali: number\r\n    readonly modal: boolean\r\n    readonly showStage: boolean\r\n}\r\n\r\nexport default class StudentDetails extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            student: null,\r\n            totPresenze: null,\r\n            oreTotali: null,\r\n            modal: false,\r\n            showStage: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(adminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/getstudentibyid/\" + id).then(response => {\r\n            this.setState({\r\n                student: response.data as IStudent\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/gettotaleorelezioni/\" + id).then(response => {\r\n            this.setState({\r\n                oreTotali: response.data as number\r\n            })\r\n        })\r\n\r\n        this.loadTotali()\r\n    }\r\n\r\n    loadTotali = () => {\r\n        this.setState({\r\n            totPresenze: null\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/gethoursamount/\" + this.props.match.params.id).then(response => {\r\n            this.setState({\r\n                totPresenze: response.data as number\r\n            })\r\n        })\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    downloadQR = () => {\r\n        const { student } = this.state,\r\n        canvas = document.getElementById(\"qr-code-image\") as any,\r\n        pngUrl = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\")\r\n        let downloadLink = document.createElement(\"a\")\r\n        \r\n        downloadLink.href = pngUrl\r\n        downloadLink.download = `qrcode${student.nome}${student.cognome}.png`\r\n        document.body.appendChild(downloadLink)\r\n        downloadLink.click()\r\n        document.body.removeChild(downloadLink)\r\n    }\r\n\r\n    toggleStage = () => {\r\n        this.setState({\r\n            showStage: !this.state.showStage\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { student, totPresenze, oreTotali, modal, showStage } = this.state\r\n        \r\n        if(!student){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        let perc = student.frequenza !== null ? Math.round(100 * totPresenze / oreTotali) : null,\r\n        color = perc >= 80 ? \"var(--success)\" : \"var(--danger)\"\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <div className=\"row mx-0\">\r\n                <div className=\"col-12 col-md-6 pl-md-0 mb-2 mb-md-0\">\r\n                    <div className=\"p-3 bg-white border rounded\">\r\n                        <span className=\"border-text\">\r\n                            {\r\n                                student.ritirato ? \"Ritirato: \" + formatItalian(student.dataRitiro) : student.annoFrequentazione === 1 ? \"Primo anno\" : \"Secondo anno\"\r\n                            }\r\n                        </span>\r\n                        <h4 className=\"text-uppercase mb-2 text-truncate\">{student.nome} {student.cognome}</h4>\r\n                        <p className=\"mb-0\"><strong>Data di nascita</strong>: {formatItalian(student.dataNascita)}</p>\r\n                        <p className=\"mb-0\"><strong>E-mail</strong>: {student.email}</p>\r\n                        <Button onClick={this.toggleModal} className=\"float-right\" type=\"link\">\r\n                            Mostra codice QR\r\n                        </Button>\r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 pr-md-0\">\r\n                    <div className=\"p-3 bg-white border rounded\">\r\n                        {\r\n                            perc !== null ? <Progress type=\"circle\" percent={perc} width={80} className=\"float-left mr-3\" strokeColor={color} format={percent => `${percent}%`}  /> : <Spin indicator={<Icon type=\"loading\" spin />} />\r\n                        }\r\n\r\n                        {\r\n                            oreTotali !== null && totPresenze !== null ? <Statistic title=\"Presenze totali (ore)\" value={totPresenze} suffix={\"/ \"+oreTotali} decimalSeparator=\",\" groupSeparator=\".\" /> : <Spin indicator={<Icon type=\"loading\" spin />} />\r\n                        }\r\n\r\n                        <Button onClick={this.toggleStage} className=\"float-right mt-3\" type=\"link\">\r\n                            Mostra ore di stage\r\n                        </Button>\r\n                        \r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <PresenzeTable studente={student} reloadTotali={this.loadTotali} />\r\n            \r\n            <Modal visible={modal} maskClosable centered title={\r\n                <span>\r\n                    <i className=\"far fa-qrcode fa-fw fa-lg text-primary mr-2\"></i>Codice QR dello studente\r\n                </span>\r\n            } onCancel={this.toggleModal} width={350} onOk={this.downloadQR}\r\n            footer={[\r\n                <Button type=\"primary\" onClick={this.downloadQR}>\r\n                    <i className=\"far fa-arrow-to-bottom mr-2\"></i> Salva codice\r\n                </Button>,\r\n                <Button type=\"default\" onClick={this.toggleModal}>Chiudi</Button>\r\n            ]}>\r\n                <div className=\"text-center\">\r\n                    <p>Salva il codice sottostante e condividilo con <strong>{student.nome} {student.cognome}.</strong></p>\r\n                    <div className=\"my-2\">\r\n                        <QRCode id=\"qr-code-image\" value={student.codice} size={200} imageSettings={{ src: avocadoUrl, height: 50, width: 50, excavate: true }} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n\r\n            <StudentStage idStudente={student.idStudente} toggleModal={this.toggleStage} show={showStage} />\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { IDocente } from \"../../models/IDocente\"\r\nimport { routerHistory } from \"../..\"\r\nimport { Modal, Tooltip, Spin, Icon, Switch, message } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, adminRoute } from \"../../utilities\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly docenti: IDocente[]\r\n    readonly showAll: boolean\r\n}\r\n\r\nexport default class DocentiList extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            docenti: null,\r\n            showAll: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/docenti\").then(response => {\r\n            this.setState({\r\n                docenti: response.data as IDocente[]\r\n            })\r\n        })\r\n    }\r\n\r\n    switchList = () => {\r\n        this.setState({\r\n            showAll: !this.state.showAll\r\n        })\r\n    }\r\n\r\n    showDeleteConfirm = (docente: IDocente) => {\r\n        Modal.confirm({\r\n            title: `ATTENZIONE: si sta per ritirare un docente (${docente.nome} ${docente.cognome})`,\r\n            content: \"I dati identificativi del docente, le lezioni e le presenze verranno comunque mantenuti, ma il docente verrà ritirato da tutti i corsi in cui insegna. In seguito sarà possibile reintegrarlo nel corso se necessario.\",\r\n            okText: \"Confermo\",\r\n            okType: \"danger\",\r\n            cancelText: \"Annulla\",\r\n            onOk: () => this.ritiraOAnnulla(docente.idDocente, \"Docente ritirato con successo!\")\r\n        })\r\n    }\r\n\r\n    ritiraOAnnulla = (idDocente: number, msg: string) => {\r\n        askPassword(siteUrl+\"/api/docenti/ritiradocente\", \"put\", {\r\n            idDocente\r\n        }, (response: any) => {\r\n\r\n            let docenti = response.data as IDocente[]\r\n\r\n            this.setState({\r\n                docenti\r\n            })\r\n\r\n            message.success(msg)\r\n        }, () => {\r\n            this.setState({\r\n                docenti: null\r\n            })\r\n        })\r\n    }\r\n\r\n    sortbyId = (a: IDocente, b: IDocente) => { \r\n        if(a.idDocente > b.idDocente)\r\n            return 1\r\n        if(a.idDocente < b.idDocente)\r\n            return -1\r\n\r\n        return 0\r\n    }\r\n\r\n    backRetire = (doc: IDocente) => {\r\n        Modal.confirm({\r\n            title: `${doc.nome} ${doc.cognome}`,\r\n            content: \"Questo docente verrà reintegrato all'interno del corso.\",\r\n            okText: \"Confermo\",\r\n            okType: \"danger\",\r\n            cancelText: \"Annulla\",\r\n            onOk: () => this.ritiraOAnnulla(doc.idDocente, \"Docente reintegrato con successo!\")\r\n        })\r\n    }\r\n\r\n    isInCorso = (doc: IDocente) => {\r\n        return doc.corsi.indexOf(this.props.corso) !== -1\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { docenti, showAll } = this.state\r\n\r\n        if(!docenti){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        let lista = showAll ? docenti : docenti.filter(d => this.isInCorso(d)),\r\n        docs = lista.sort(this.sortbyId).sort((a, _) => a.ritirato ? 0 : -1)\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Docenti del corso</h3>\r\n\r\n            <label className=\"pointer\" style={{ transform: \"translateY(50%)\" }}>\r\n                <Switch checked={!showAll} onChange={this.switchList} className=\"mr-1 align-top\" /> Mostra solo i docenti del mio corso\r\n            </label>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={() => routerHistory.push(adminRoute+\"/docenti/new\")}>\r\n                <i className=\"fal fa-plus fa-fw\"></i> Aggiungi docente\r\n            </button>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                \r\n                    <tbody>\r\n                        <tr>\r\n                            <th style={{width: \"35%\"}}>Docente</th>\r\n                            <th style={{width: \"15%\"}}>Ore 1° anno</th>\r\n                            <th style={{width: \"15%\"}}>Ore 2° anno</th>\r\n                            <th style={{width: \"20%\"}}>Azioni</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            docs.map(d => {   \r\n                                let bg = d.ritirato ? \"light font-italic\" : !this.isInCorso(d) ? \"transblue\" :\"white\"\r\n\r\n                                return <tr className={\"bg-\"+bg}>\r\n                                    <Tooltip title={d.nome + \" \" + d.cognome}>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{d.nome} {d.cognome}</td>\r\n                                    </Tooltip>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{d.monteOre.orePrimo}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{d.monteOre.oreSecondo}</td>\r\n                                    <td>\r\n                                        <Tooltip title=\"Dettagli\">\r\n                                            <button type=\"button\" className=\"btn btn-info circle-btn\" onClick={() => routerHistory.push(adminRoute+\"/docenti/\" + d.idDocente)}>\r\n                                                <i className=\"fa fa-info\"></i>\r\n                                            </button>\r\n                                        </Tooltip>\r\n\r\n                                        {\r\n                                            !d.ritirato && <Tooltip title=\"Modifica\">\r\n                                                <button type=\"button\" className=\"btn btn-warning text-white circle-btn ml-2\" onClick={() => routerHistory.push(adminRoute+\"/docenti/edit/\" + d.idDocente)}>\r\n                                                    <i className=\"fa fa-pen\"></i>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            !d.ritirato && <Tooltip title=\"Segna come ritirato\">\r\n                                                <button type=\"button\" className=\"btn btn-danger circle-btn ml-2\" onClick={() => this.showDeleteConfirm(d)}>\r\n                                                    <i className=\"fa fa-user-times\"></i>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                        }\r\n\r\n                                        {\r\n                                            d.ritirato && <Tooltip title=\"Reintegra nel corso\">\r\n                                                <button type=\"button\" className=\"btn btn-danger circle-btn ml-2\" onClick={() => this.backRetire(d)}>\r\n                                                    <i className=\"fa fa-reply\"></i>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, message, Icon, Spin, Checkbox } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, adminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { IMateria } from \"../../models/IMateria\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly CF: string\r\n    readonly email: string\r\n    readonly materie: IMateria[]\r\n    readonly corsi: ICorso[]\r\n    readonly materieSel: number[]\r\n    readonly corsiSel: number[]\r\n    readonly loading: boolean\r\n}\r\n\r\nexport default class AddNewDocente extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            CF: \"\",\r\n            email: \"\",\r\n            corsi: null,\r\n            materie: null,\r\n            corsiSel: [],\r\n            materieSel: [],\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                corsi\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/materie/getmateriebycorso/\"+this.props.corso).then(response => {\r\n            let materie = response.data as IMateria[]\r\n\r\n            this.setState({\r\n                materie\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let CF = event.target.value.trim()\r\n\r\n        this.setState({\r\n            CF\r\n        })\r\n    }\r\n\r\n    aggiungiDocente = (e: any) => {\r\n        e.preventDefault()\r\n        \r\n        const { nome, cognome, CF, email, corsiSel, materieSel } = this.state\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || CF === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(CF.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!materieSel.length){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Scegliere almeno una materia.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!corsiSel.length){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Scegliere almeno un corso.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        let cipher = new Cipher(),\r\n        password = cipher.encode(CF)\r\n\r\n        this.toggleLoading()\r\n\r\n        askPassword(siteUrl+\"/api/docenti\", \"post\", {\r\n            docente: {\r\n                nome: nome.trim(),\r\n                cognome: cognome.trim(),\r\n                cf: CF,\r\n                password,\r\n                email,\r\n                tenere: corsiSel.map(c => { return { idCorso: c, idDocente: 0 } }),\r\n                insegnare: materieSel.map(m => { return { idMateria: m, idDocente: 0 } }),\r\n            }\r\n        }, (_: any) => {\r\n            this.toggleLoading()\r\n            message.success(\"Docente creato con successo!\")\r\n            routerHistory.push(adminRoute+\"/docenti\")\r\n        })\r\n    }\r\n\r\n    switchMateria = (materiaId: number) => {\r\n        let find = this.state.materieSel.find(m => m === materiaId),\r\n        newList = find ? this.state.materieSel.filter(m => m !== materiaId) : this.state.materieSel.concat(materiaId)\r\n\r\n        this.setState({\r\n            materieSel: newList\r\n        })\r\n    }\r\n\r\n    switchCorso = (corsoId: number) => {\r\n        let find = this.state.corsiSel.find(m => m === corsoId),\r\n        newList = find ? this.state.corsiSel.filter(m => m !== corsoId) : this.state.corsiSel.concat(corsoId)\r\n\r\n        this.setState({\r\n            corsiSel: newList\r\n        })\r\n    }\r\n\r\n    toggleLoading = () => {\r\n        this.setState({\r\n            loading: !this.state.loading\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, CF, email, materie, materieSel, corsi, corsiSel, loading } = this.state\r\n\r\n        if(!materie || !corsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        if(!materie.length){\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                È necessario creare almeno una materia per poter inserire un nuovo docente.\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Aggiungi un nuovo docente</h3>\r\n\r\n            <form onSubmit={this.aggiungiDocente}>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={CF} onChange={this.changeCF} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Materie insegnate dal docente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                materie.map(m => {\r\n                                    let find = materieSel.find(f => f === m.idMateria),\r\n                                    checked = find ? true : false,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n\r\n                                    return <label className={\"option \" + classname}>\r\n                                        <Checkbox className=\"mr-2\" onChange={() => this.switchMateria(m.idMateria)} checked={checked} /> {m.nome}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Corsi del docente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                corsi.map(m => {\r\n                                    let find = corsiSel.find(f => f === m.idCorso),\r\n                                    checked = find ? true : false,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n\r\n                                    return <label className={\"option \" + classname}>\r\n                                        <Checkbox className=\"mr-2\" onChange={() => this.switchCorso(m.idCorso)} checked={checked} /> {m.nome}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-success text-uppercase w-100\" disabled={loading}>\r\n                    {\r\n                        loading && <Icon type=\"loading\" className=\"mr-2 loadable-btn\" spin />\r\n                    }\r\n                    Aggiungi docente\r\n                </button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Tooltip, Icon, Spin, Modal, Select, TimePicker } from \"antd\"\r\nimport { siteUrl, formatItalian, validateTime, convertFromUTC, getDateTime } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { IPresenzaDocente } from \"../../models/IPresenzaDocente\"\r\nimport { askPassword } from \"../AskConferma\"\r\nimport moment from \"moment\"\r\n\r\nexport interface IProps{\r\n    readonly idDocente: number\r\n    readonly canEdit: boolean\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly presenze: IPresenzaDocente[]\r\n    readonly editingList: IPresenzaDocente[]\r\n    readonly filter: string\r\n}\r\n\r\nexport default class LezioniDocenteTable extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            presenze: null,\r\n            editingList: [],\r\n            filter: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { corso, idDocente } = this.props\r\n\r\n        Axios.get(siteUrl+\"/api/lezioni/getlezionidocente/\"+idDocente+\"/\"+corso).then(response => {\r\n            let presenze = response.data as IPresenzaDocente[]\r\n\r\n            this.setState({\r\n                presenze: presenze.map(p => {\r\n                    p.ingresso = convertFromUTC(p.ingresso)\r\n                    p.uscita = getDateTime(p.uscita) === \"00:00\" ? \"Non firmata\" : convertFromUTC(p.uscita)\r\n\r\n                    return p\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    changeEntrata = (entrata: string, idPresenza: number) => {\r\n        let presenze = this.state.editingList.map(p => {\r\n            if(p.idPresenza === idPresenza)\r\n                p.ingresso = entrata\r\n            \r\n            return p\r\n        })\r\n\r\n        this.setState({\r\n            editingList: presenze\r\n        })\r\n    }\r\n\r\n    changeUscita = (uscita: string, idPresenza: number) => {\r\n        let presenze = this.state.editingList.map(p => {\r\n            if(p.idPresenza === idPresenza)\r\n                p.uscita = uscita\r\n            \r\n            return p\r\n        })\r\n\r\n        this.setState({\r\n            editingList: presenze\r\n        })\r\n    }\r\n\r\n    startTimeEdit = (p: IPresenzaDocente) => {\r\n        this.setState({\r\n            editingList: this.state.editingList.concat(p)\r\n        })\r\n    }\r\n\r\n    animateTds = (td1: HTMLElement, td2: HTMLElement) => {\r\n        td1.classList.add(\"edited\")\r\n        td2.classList.add(\"edited\")\r\n\r\n        setTimeout(() => {\r\n            td1.classList.remove(\"edited\")\r\n            td2.classList.remove(\"edited\")\r\n        }, 1000)\r\n    }\r\n\r\n    confirmEdit = (id: number, td1: HTMLElement, td2: HTMLElement) => {\r\n        const { editingList, presenze } = this.state,\r\n        presenza = editingList.find(p => p.idPresenza === id)\r\n        \r\n        if(!validateTime(presenza.ingresso) || !validateTime(presenza.uscita)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Orari non validi. (ore:minuti)\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        let data = new Date()\r\n\r\n        askPassword(siteUrl+\"/api/presenzedocente/\" + id, \"put\", {\r\n            idPresenza: id,\r\n            ingresso: new Date(`${data.getFullYear()}-${data.getMonth() + 1}-${data.getDate()} ${presenza.ingresso}`),\r\n            uscita: new Date(`${data.getFullYear()}-${data.getMonth() + 1}-${data.getDate()} ${presenza.uscita}`),\r\n            idDocente: presenza.idDocente,\r\n            idLezione: presenza.idLezione\r\n        }, (response: any) => {\r\n            let output = response.data\r\n\r\n            if(output.trim() === \"success\"){\r\n                let newPresenze = presenze.map(p => {\r\n                    if(p.idPresenza === id){\r\n                        return presenza\r\n                    }\r\n\r\n                    return p\r\n                })\r\n\r\n                this.setState({\r\n                    presenze: newPresenze,\r\n                    editingList: editingList.filter(p => p.idPresenza !== presenza.idPresenza)\r\n                })\r\n                \r\n                this.animateTds(td1, td2)\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: output\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    getCategorie = () => {\r\n        const { presenze } = this.state \r\n        let categorie: string[] = []\r\n\r\n        presenze.forEach(p => {\r\n            if(categorie.indexOf(p.lezione) === -1)\r\n                categorie.push(p.lezione)\r\n        })\r\n\r\n        return categorie\r\n    }\r\n\r\n    changeFilter = (filter: string) => {\r\n        this.setState({\r\n            filter: filter === \"\" ? null : filter\r\n        })\r\n    }\r\n\r\n    annullaModifica = (presenza: IPresenzaDocente) => {\r\n        this.setState({\r\n            editingList: this.state.editingList.filter(p => p.idPresenza !== presenza.idPresenza)\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { presenze, editingList, filter } = this.state,\r\n        { canEdit } = this.props,\r\n        { Option } = Select\r\n\r\n        if(!presenze){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div>\r\n                <Spin indicator={icon} className=\"mt-3\" />\r\n            </div>\r\n        }\r\n\r\n        let presences = filter ? presenze.filter(p => p.lezione.toLowerCase() === filter.toLowerCase()) : presenze\r\n\r\n        return <div className=\"mt-3\">\r\n            <h3 className=\"d-inline-block\">Lezioni tenute dal docente</h3>\r\n\r\n            <div className=\"float-right\">\r\n                <label className=\"d-inline-block text-secondary mr-2\">Filtra per materia: </label>\r\n                <Select defaultValue=\"\" style={{ width: 150 }} onChange={this.changeFilter} showSearch>\r\n                    <Option value=\"\">Nessuna</Option>\r\n                    {\r\n                        this.getCategorie().map(l =>{\r\n                            return <Option value={l}>{l}</Option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            </div>\r\n\r\n            <div className=\"clearfix\"></div>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                <tbody>\r\n                    <tr className=\"thead-light\">\r\n                        <th>Giorno</th>\r\n                        <th>Entrata</th>\r\n                        <th>Uscita</th>\r\n                        <th>Lezione</th>\r\n                        {\r\n                            canEdit && <th style={{ width: \"20%\" }}>Azioni</th>\r\n                        }\r\n                    </tr>\r\n\r\n                    {\r\n                        presences.map(p => {\r\n                            let editPresenza = editingList.find(pre => pre.idPresenza === p.idPresenza),\r\n                            td1: HTMLElement,\r\n                            td2: HTMLElement\r\n\r\n                            return <tr>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\">{formatItalian(p.data)}</td>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\" ref={r => td1 = r}>\r\n                                    {\r\n                                        editPresenza ? <TimePicker defaultValue={moment(p.ingresso, 'HH:mm')} format='HH:mm' onChange={(_, ingresso) => this.changeEntrata(ingresso, p.idPresenza)} minuteStep={10} placeholder=\"Seleziona una data\" /> : <span>{p.ingresso}</span>\r\n                                    }\r\n                                </td>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\" ref={r => td2 = r}>\r\n                                    {\r\n                                        editPresenza ? <TimePicker defaultValue={moment(p.uscita, 'HH:mm')} format='HH:mm' onChange={(_, uscita) => this.changeUscita(uscita, p.idPresenza)} minuteStep={10} placeholder=\"Seleziona una data\" /> : <span>{p.uscita}</span>\r\n                                    }\r\n                                </td>\r\n                                <Tooltip title={p.lezione}>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{p.lezione}</td>\r\n                                </Tooltip>\r\n                                {\r\n                                    canEdit && <td>\r\n                                        {\r\n                                            editPresenza ? <div>\r\n                                                <Tooltip title=\"Annulla\">\r\n                                                    <button type=\"button\" className=\"btn btn-danger circle-btn\" onClick={() => this.annullaModifica(p)}>\r\n                                                        <i className=\"fa fa-times\"></i>\r\n                                                    </button>\r\n                                                </Tooltip>\r\n\r\n                                                <Tooltip title=\"Conferma modifiche\">\r\n                                                    <button type=\"button\" className=\"btn btn-success circle-btn ml-2\" onClick={() => this.confirmEdit(p.idPresenza, td1, td2)}>\r\n                                                        <i className=\"fa fa-check\"></i>\r\n                                                    </button>\r\n                                                </Tooltip>\r\n                                            </div> : <Tooltip title=\"Modifica orari\">\r\n                                                <button type=\"button\" className=\"btn btn-orange circle-btn\" onClick={() => this.startTimeEdit(p)}>\r\n                                                    <i className=\"fa fa-user-edit\"></i>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                        }\r\n                                        \r\n                                    </td>\r\n                                }\r\n                            </tr>\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { RouteComponentProps } from \"react-router\"\r\nimport { routerHistory } from \"../..\"\r\nimport { Icon, Spin, Modal, Button, Statistic } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { IDocente } from \"../../models/IDocente\"\r\nimport LezioniDocenteTable from \"./LezioniDocenteTable\"\r\nimport { siteUrl, adminRoute, avocadoUrl } from \"../../utilities\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\nimport QRCode from \"qrcode.react\"\r\n\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly docente: IDocente\r\n    readonly modal: boolean\r\n}\r\n\r\nexport default class DocenteDetails extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            docente: null,\r\n            modal: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(adminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/docenti/getdocentibyid/\" + id).then(response => {\r\n            this.setState({\r\n                docente: response.data as IDocente\r\n            })\r\n        })\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    downloadQR = () => {\r\n        const { docente } = this.state,\r\n        canvas = document.getElementById(\"qr-code-image\") as any,\r\n        pngUrl = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\")\r\n        let downloadLink = document.createElement(\"a\")\r\n        \r\n        downloadLink.href = pngUrl\r\n        downloadLink.download = `qrcode${docente.nome}${docente.cognome}.png`\r\n        document.body.appendChild(downloadLink)\r\n        downloadLink.click()\r\n        document.body.removeChild(downloadLink)\r\n    }\r\n\r\n    getQRCode = () => {\r\n        const { docente } = this.state\r\n        let cipher = new Cipher(),\r\n        code = cipher.encode(docente.cf)\r\n\r\n        return code\r\n    }\r\n\r\n    isInCorso = (doc: IDocente) => {\r\n        return doc.corsi.indexOf(this.props.corso) !== -1\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { docente, modal } = this.state\r\n\r\n        if(!docente){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <div className=\"row mx-0\">\r\n                <div className=\"col-12 col-md-6 pl-md-0 mb-2 mb-md-0\">\r\n\r\n                    <div className=\"p-3 bg-white border rounded\">\r\n                        {\r\n                            docente.ritirato && <span className=\"border-text\">Ritirato</span>\r\n                        }\r\n\r\n                        <h4 className=\"text-uppercase mb-2 text-truncate\">{docente.nome} {docente.cognome}</h4>\r\n                        <p className=\"mb-0\"><strong>E-mail</strong>: {docente.email}</p>\r\n                        <Button onClick={this.toggleModal} className=\"float-right\" type=\"link\">\r\n                            Mostra codice QR\r\n                        </Button>\r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3 pr-md-0\">\r\n                    <div className=\"p-3 bg-white border rounded text-center\" style={{ display: \"flex\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                        <Statistic title=\"Ore svolte\" value={docente.monteOre} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <LezioniDocenteTable idDocente={docente.idDocente} canEdit={this.isInCorso(docente)} corso={this.props.corso} />\r\n\r\n            <Modal visible={modal} maskClosable centered title={\r\n                <span>\r\n                    <i className=\"far fa-qrcode fa-fw fa-lg text-primary mr-2\"></i>Codice QR del docente\r\n                </span>\r\n            } onCancel={this.toggleModal} width={350} onOk={this.downloadQR}\r\n            footer={[\r\n                <Button type=\"primary\" onClick={this.downloadQR}>\r\n                    <i className=\"far fa-arrow-to-bottom mr-2\"></i> Salva codice\r\n                </Button>,\r\n                <Button type=\"default\" onClick={this.toggleModal}>Chiudi</Button>\r\n            ]}>\r\n                <div className=\"text-center\">\r\n                    <p>Salva il codice sottostante e condividilo con <strong>{docente.nome} {docente.cognome}.</strong></p>\r\n                    <div className=\"my-2\">\r\n                        <QRCode id=\"qr-code-image\" value={this.getQRCode()} size={200} imageSettings={{ src: avocadoUrl, height: 50, width: 50, excavate: true }} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Icon, Spin, Checkbox, message } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, adminRoute } from \"../../utilities\"\r\nimport { IDocente } from \"../../models/IDocente\"\r\nimport Axios from \"axios\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { IMateria } from \"../../models/IMateria\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly docente: IDocente\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly CF: string\r\n    readonly email: string\r\n    readonly materie: IMateria[]\r\n    readonly corsi: ICorso[]\r\n    readonly materieSel: number[]\r\n    readonly corsiSel: number[]\r\n    readonly loading: boolean\r\n}\r\n\r\nexport default class EditDocente extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            docente: null,\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            CF: \"\",\r\n            email: \"\",\r\n            materie: [],\r\n            materieSel: [],\r\n            corsi: [],\r\n            corsiSel: [],\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(adminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/docenti/getdocentibyid/\" + id).then(response => {\r\n            let doc = response.data as IDocente\r\n\r\n            this.setState({\r\n                docente: doc,\r\n                nome: doc.nome,\r\n                cognome: doc.cognome,\r\n                CF: doc.cf,\r\n                email: doc.email,\r\n                materieSel: doc.materie && doc.materie.length ? doc.materie : [],\r\n                corsiSel: doc.corsi && doc.corsi.length ? doc.corsi : []\r\n            })\r\n        })\r\n        \r\n        Axios.get(siteUrl+\"/api/materie/getmateriebycorso/\"+this.props.corso).then(response => {\r\n            let materie = response.data as IMateria[]\r\n            \r\n            this.setState({\r\n                materie\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n            \r\n            this.setState({\r\n                corsi\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let CF = event.target.value.trim()\r\n\r\n        this.setState({\r\n            CF\r\n        })\r\n    }\r\n\r\n    modificaDocente = (e: any) => {\r\n        e.preventDefault()\r\n        \r\n        const { docente, nome, cognome, CF, email, corsiSel, materieSel } = this.state\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || CF === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!materieSel.length){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Scegliere almeno una materia.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!corsiSel.length){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Scegliere almeno un corso.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(CF.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        this.toggleLoading()\r\n\r\n        askPassword(siteUrl+\"/api/docenti/\" + this.props.match.params.id, \"put\", {\r\n            docente: {\r\n                idDocente: parseInt(this.props.match.params.id),\r\n                nome: nome.trim(),\r\n                cognome: cognome.trim(),\r\n                email,\r\n                cf: CF,\r\n                tenere: corsiSel.map(c => { return { idCorso: c, idDocente: docente.idDocente } }),\r\n                insegnare: materieSel.map(m => { return { idMateria: m, idDocente: docente.idDocente } }),\r\n                ritirato: docente.ritirato\r\n            }\r\n        }, (_: any) => {\r\n            this.toggleLoading()\r\n            message.success(\"Docente modificato con successo!\")\r\n            routerHistory.push(adminRoute+\"/docenti\")\r\n        })\r\n    }\r\n\r\n    toggleLoading = () => {\r\n        this.setState({\r\n            loading: !this.state.loading\r\n        })\r\n    }\r\n\r\n    switchMateria = (materiaId: number) => {\r\n        let find = this.state.materieSel.find(m => m === materiaId),\r\n        newList = find ? this.state.materieSel.filter(m => m !== materiaId) : this.state.materieSel.concat(materiaId)\r\n\r\n        this.setState({\r\n            materieSel: newList\r\n        })\r\n    }\r\n\r\n    switchCorso = (corsoId: number) => {\r\n        let find = this.state.corsiSel.find(m => m === corsoId),\r\n        newList = find ? this.state.corsiSel.filter(m => m !== corsoId) : this.state.corsiSel.concat(corsoId)\r\n\r\n        this.setState({\r\n            corsiSel: newList\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, CF, docente, email, materie, materieSel, corsi, corsiSel, loading } = this.state\r\n\r\n        if(!docente || !materie.length || !corsi.length){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Modifica di un docente</h3>\r\n\r\n            <form onSubmit={this.modificaDocente}>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={CF} onChange={this.changeCF} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Materie insegnate dal docente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                materie.map(m => {\r\n                                    let find = materieSel.find(f => f === m.idMateria),\r\n                                    checked = find ? true : false,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n\r\n                                    return <label className={\"option \" + classname}>\r\n                                        <Checkbox className=\"mr-2\" onChange={() => this.switchMateria(m.idMateria)} checked={checked} /> {m.nome}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Corsi del docente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                corsi.map(m => {\r\n                                    let find = corsiSel.find(f => f === m.idCorso),\r\n                                    checked = find ? true : false,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n\r\n                                    return <label className={\"option \" + classname}>\r\n                                        <Checkbox className=\"mr-2\" onChange={() => this.switchCorso(m.idCorso)} checked={checked} /> {m.nome}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-success text-uppercase w-100\" disabled={loading}>\r\n                    {\r\n                        loading && <Icon type=\"loading\" className=\"mr-2 loadable-btn\" spin />\r\n                    }\r\n                    Modifica docente\r\n                </button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Icon, Spin, message, DatePicker } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, formattaData, formatItalian, adminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport locale from \"antd/es/date-picker/locale/it_IT\"\r\nimport moment from \"moment\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly studente: IStudent\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly dataNascita: string\r\n    readonly CF: string\r\n    readonly email: string\r\n    readonly loading: boolean\r\n}\r\n\r\nexport default class EditStudente extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            studente: null,\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            dataNascita: \"\",\r\n            CF: \"\",\r\n            email: \"\",\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(adminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/getstudentibyid/\" + id).then(response => {\r\n            let stu = response.data as IStudent\r\n\r\n            this.setState({\r\n                studente: stu,\r\n                nome: stu.nome,\r\n                cognome: stu.cognome,\r\n                CF: stu.cf,\r\n                dataNascita: formatItalian(stu.dataNascita),\r\n                email: stu.email\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome\r\n        })\r\n    }\r\n\r\n    changeData = (data: string) => {\r\n        this.setState({\r\n            dataNascita: data\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let CF = event.target.value.trim()\r\n\r\n        this.setState({\r\n            CF\r\n        })\r\n    }\r\n\r\n    modificaStudente = (e: any) => {\r\n        e.preventDefault()\r\n        \r\n        const { nome, cognome, dataNascita, CF, email, studente } = this.state\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || dataNascita === \"\" || CF === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(CF.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        this.toggleLoading()\r\n\r\n        askPassword(siteUrl+\"/api/studenti/\" + studente.idStudente, \"put\", {\r\n            studente: {\r\n                idStudente: studente.idStudente,\r\n                nome: nome.trim(),\r\n                cognome: cognome.trim(),\r\n                email,\r\n                cf: CF,\r\n                idCorso: this.props.corso,\r\n                annoFrequentazione: studente.annoFrequentazione,\r\n                dataNascita: formattaData(dataNascita, true),\r\n                ritirato: studente.ritirato,\r\n                promosso: studente.promosso\r\n            }\r\n        }, (_: any) => {\r\n            this.toggleLoading()\r\n            message.success(\"Studente modificato con successo!\")\r\n            routerHistory.push(adminRoute+\"/studenti\")\r\n        })\r\n        \r\n    }\r\n\r\n    toggleLoading = () => {\r\n        this.setState({\r\n            loading: !this.state.loading\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, dataNascita, CF, studente, email, loading } = this.state\r\n\r\n        if(!studente){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Modifica di uno studente</h3>\r\n\r\n            <form onSubmit={this.modificaStudente}>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Data di nascita</label>\r\n                        <DatePicker locale={locale} className=\"w-100 select-date\" onChange={(_, d2) => this.changeData(d2)} format=\"DD-MM-YYYY\" defaultValue={moment(dataNascita, \"DD-MM-YYYY\")} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={CF} onChange={this.changeCF} />\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-success text-uppercase w-100\" disabled={loading}>\r\n                    {\r\n                        loading && <Icon type=\"loading\" className=\"mr-2 loadable-btn\" spin />\r\n                    }\r\n                    Modifica studente\r\n                </button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport Dragger from \"antd/lib/upload/Dragger\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport { Modal, Tooltip, Icon, message } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { formattaData, capitalizeFirst, siteUrl, resizePopup, formatItalian, adminRoute } from \"../../utilities\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly addList: IStudent[]\r\n    readonly fileContent: string\r\n    readonly fields: any\r\n    readonly loading: boolean\r\n}\r\n\r\nconst fields = [{\r\n    label: \"Nome\",\r\n    field: \"nome\"\r\n},{\r\n    label: \"Cognome\",\r\n    field: \"cognome\"\r\n},{\r\n    label: \"Codice Fiscale\",\r\n    field: \"cf\"\r\n},{\r\n    label: \"Data di nascita\",\r\n    field: \"dataNascita\"\r\n},{\r\n    label: \"E-mail\",\r\n    field: \"email\"\r\n}]\r\n\r\nexport default class StudentsImport extends React.PureComponent<IProps, IState>{\r\n    \r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            addList: [],\r\n            fileContent: \"\",\r\n            fields: {\r\n                nome: 0,\r\n                cognome: 0,\r\n                cf: 0,\r\n                dataNascita: 0,\r\n                email: 0,\r\n                annoFrequentazione: 1\r\n            },\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        resizePopup()\r\n    }\r\n\r\n    splitCSV = (data: string) => {\r\n        let regex = /([\"'])(?:(?=(\\\\?))\\2.)*?\\1/g,\r\n        pieces = data.match(regex)\r\n\r\n        return pieces.map(p => { return p.replace(/[\"]/g, '') })\r\n    }\r\n\r\n    renderOptions = () => {\r\n        let rows = this.state.fileContent.split(\"\\n\"),\r\n        cells = this.splitCSV(rows[0]),\r\n        options = cells.map((c, i) => {\r\n            if(c === \"\")\r\n                return null\r\n\r\n            return <option value={i}>{c}</option>\r\n        })\r\n\r\n        return options\r\n    }\r\n\r\n    changeVarPos = (e: any, varName: string) => {\r\n        let value = e.target.value,\r\n        obj = this.state.fields\r\n\r\n        obj[varName] = value\r\n\r\n        this.setState({\r\n            fields: obj\r\n        })\r\n    }\r\n\r\n    readFile = (file: any) => {\r\n        const reader = new FileReader()\r\n\r\n        reader.onload = e => {\r\n            this.setState({\r\n                fileContent: String(e.target.result).trim()\r\n            })\r\n\r\n            Modal.info({\r\n                width: 500,\r\n                centered: true,\r\n                title: \"Selezionare i campi da abbinare\",\r\n                icon: <Icon type=\"api\" style={{ color: \"var(--success)\" }} />,\r\n                maskClosable: true,\r\n                content: <div style={{ marginLeft: -38 }}>\r\n                    <div className=\"row mt-3 px-0\">\r\n                        <div className=\"col-4\">\r\n                            <label className=\"mt-2\">Classe: </label>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <select className=\"custom-select pointer\" style={{ height: 35 }} onChange={(e) => this.changeVarPos(e, \"annoFrequentazione\")}>\r\n                                <option value=\"1\">Primo anno</option>\r\n                                <option value=\"2\">Secondo anno</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        fields.map(f => {\r\n                            return <div className=\"row mt-3 px-0\">\r\n                                <div className=\"col-4\">\r\n                                    <label className=\"mt-2\">{f.label}: </label>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <select className=\"custom-select pointer\" style={{ height: 35 }} onChange={(e) => this.changeVarPos(e, f.field)}>\r\n                                        {this.renderOptions()}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>,\r\n                onOk: this.showImportPreview,\r\n                okText: \"Prosegui\"\r\n            })\r\n        }\r\n\r\n        reader.readAsText(file, \"ISO-8859-1\")\r\n\r\n        return false\r\n    }\r\n\r\n    showImportPreview = () => {\r\n        const { fileContent, fields} = this.state\r\n\r\n        let rows = fileContent.split(\"\\n\"),\r\n        list: IStudent[] = [],\r\n        popup = document.getElementById(\"popup\")\r\n\r\n        rows.forEach(r => {\r\n            let cells = this.splitCSV(r)\r\n\r\n            let student: IStudent = {\r\n                idCorso: this.props.corso,\r\n                nome: capitalizeFirst(cells[fields['nome']]),\r\n                cognome: capitalizeFirst(cells[fields['cognome']]),\r\n                annoFrequentazione: parseInt(fields['annoFrequentazione']),\r\n                cf: cells[fields['cf']],\r\n                dataNascita: formattaData(cells[fields['dataNascita']], true),\r\n                email: cells[fields['email']],\r\n                password: cells[fields['cf']]\r\n            }\r\n\r\n            list.push(student)\r\n        })\r\n\r\n        this.setState({\r\n            addList: list\r\n        })\r\n\r\n        popup.classList.add(\"show\")\r\n    }\r\n\r\n    hidePopup = () => {\r\n        let popup = document.getElementById(\"popup\")\r\n\r\n        this.setState({\r\n            addList: [],\r\n            fields: {\r\n                nome: 0,\r\n                cognome: 0,\r\n                cf: 0,\r\n                dataNascita: 0,\r\n                email: 0,\r\n                annoFrequentazione: 0\r\n            }\r\n        })\r\n\r\n        popup.classList.remove(\"show\")\r\n    }\r\n\r\n    confirmImport = () => {\r\n        this.toggleLoading()\r\n\r\n        askPassword(siteUrl+\"/api/studenti\", \"post\", {\r\n            studenti: this.state.addList\r\n        }, (_: any) => {\r\n            this.toggleLoading()\r\n            message.success(\"Importazione eseguita con successo!\")\r\n            routerHistory.push(adminRoute+\"/studenti\")\r\n        })\r\n    }\r\n\r\n    toggleLoading = () => {\r\n        this.setState({\r\n            loading: !this.state.loading\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { addList, loading } = this.state\r\n\r\n        return <div className=\"col p-5 right-block\" id=\"mainBlock\" style={{flexDirection: \"column\"}}>\r\n            <h3 className=\"text-center w-100\">Importa studenti da CSV</h3>\r\n\r\n            <label>\r\n                Prima di proseguire, esportare il CSV da <strong>Sifer</strong>.\r\n            </label>\r\n\r\n            <div className=\"uploader mt-2 w-100\">\r\n                <Dragger accept=\".csv\" beforeUpload={file => this.readFile(file)}>\r\n                    <p className=\"ant-upload-drag-icon\">\r\n                        <i className=\"fa fa-file-csv fa-5x\"></i>\r\n                    </p>\r\n                    <p className=\"ant-upload-text\">Clicca o trascina un file su quest'aerea</p>\r\n                    <p className=\"ant-upload-hint\">\r\n                        Assicurati che il file abbia l'estensione <strong>.csv</strong>.\r\n                    </p>\r\n                </Dragger>\r\n            </div>\r\n\r\n            <div id=\"popup\" className=\"preview px-0\">\r\n                <div className=\"w-100 h-100 inner overflow-auto px-5 py-4\">\r\n                    <h3 className=\"mb-3 text-center\">Anteprima dati da importare</h3>\r\n                    {\r\n                        addList.length && <table className=\"table table-bordered text-center\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th>Nome</th>\r\n                                    <th>Cognome</th>\r\n                                    <th>Anno</th>\r\n                                    <th>Codice Fiscale</th>\r\n                                    <th>Data di Nascita</th>\r\n                                    <th style={{width: \"25%\"}}>E-mail</th>\r\n                                </tr>\r\n\r\n                                {\r\n                                    addList.map(s => {                \r\n                                        return <tr>\r\n                                            <Tooltip title={s.nome}>\r\n                                                <td style={{maxWidth: 0}} className=\"text-truncate\">{s.nome}</td>\r\n                                            </Tooltip>\r\n                                            <Tooltip title={s.cognome}>\r\n                                                <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cognome}</td>\r\n                                            </Tooltip>\r\n                                            <td style={{maxWidth: 0}} className=\"text-truncate\">{s.annoFrequentazione}</td>\r\n                                            <Tooltip title={s.cf}>\r\n                                                <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cf}</td>\r\n                                            </Tooltip>\r\n                                            <td style={{maxWidth: 0}} className=\"text-truncate\">{formatItalian(s.dataNascita)}</td>\r\n                                            <Tooltip title={s.email}>\r\n                                                <td style={{maxWidth: 0}} className=\"text-truncate\">{s.email}</td>\r\n                                            </Tooltip>\r\n                                        </tr>\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"bottom-side p-3 text-right\">\r\n                    <button className=\"btn btn-danger mr-2\" onClick={this.hidePopup} disabled={loading}>Annulla</button>\r\n                    <button className=\"btn btn-success\" onClick={this.confirmImport} disabled={loading}>\r\n                        {\r\n                            loading && <Icon type=\"loading\" className=\"mr-2 loadable-btn\" spin />\r\n                        }\r\n                        Conferma importazione\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Tooltip, Spin, Icon, Modal, message, Button } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl } from \"../../utilities\"\r\nimport { IMateria } from \"../../models/IMateria\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly materie: IMateria[]\r\n    readonly showModal: boolean\r\n    readonly nomeMateria: string\r\n    readonly showEditModal: boolean\r\n    readonly materiaEdit: IMateria\r\n    readonly nomeEdit: string\r\n}\r\n\r\nexport default class MaterieList extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            materie: null,\r\n            showModal: false,\r\n            nomeMateria: \"\",\r\n            showEditModal: false,\r\n            materiaEdit: null,\r\n            nomeEdit: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/materie/getmateriebycorso/\" + this.props.corso).then(response => {\r\n            this.setState({\r\n                materie: response.data as IMateria[]\r\n            })\r\n        })\r\n    }\r\n\r\n    showHideModal = () => {\r\n        this.setState({\r\n            showModal: !this.state.showModal,\r\n            nomeMateria: \"\"\r\n        })\r\n    }\r\n\r\n    hideEditModal = () => {\r\n        this.setState({\r\n            showEditModal: false,\r\n            nomeEdit: \"\",\r\n            materiaEdit: null\r\n        })\r\n    }\r\n\r\n    showEditModal = (materia: IMateria) => {\r\n        this.setState({\r\n            showEditModal: true,\r\n            nomeEdit: materia.nome,\r\n            materiaEdit: materia\r\n        })\r\n    }\r\n\r\n    aggiungiMateria = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { nomeMateria } = this.state\r\n\r\n        if(nomeMateria.trim() === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n           return\r\n        }\r\n\r\n        askPassword(siteUrl+\"/api/materie/\" + this.props.corso, \"post\", {\r\n            materia: {\r\n                nome: nomeMateria.trim()\r\n            }\r\n        }, (response: any) => {\r\n            let materie = response.data as IMateria[]\r\n\r\n            this.setState({\r\n                materie\r\n            })\r\n\r\n            message.success(\"Materia aggiunta con successo!\")\r\n        }, () => {\r\n            this.setState({\r\n                materie: null,\r\n                showModal: false\r\n            })\r\n        })\r\n    }\r\n\r\n    modificaMateria = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { nomeEdit, materiaEdit } = this.state\r\n\r\n        if(nomeEdit === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n           return\r\n        }\r\n\r\n        askPassword(siteUrl+\"/api/materie/\" + materiaEdit.idMateria, \"put\", {\r\n            materia: {\r\n                idMateria: materiaEdit.idMateria,\r\n                nome: nomeEdit.trim()\r\n            }\r\n        }, (response: any) => {\r\n            let materie = response.data as IMateria[]\r\n\r\n            this.setState({\r\n                materie,\r\n                materiaEdit: null,\r\n                nomeEdit: \"\",\r\n            })\r\n\r\n            message.success(\"Materia modificata con successo!\")\r\n        }, () => {\r\n            this.setState({\r\n                materie: null,\r\n                showEditModal: false\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nomeMateria: nome\r\n        })\r\n    }\r\n\r\n    changeNomeEdit = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nomeEdit: nome\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { materie, nomeMateria, showModal, showEditModal, materiaEdit, nomeEdit } = this.state\r\n        \r\n        if(!materie){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Lista delle materie</h3>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={this.showHideModal}>\r\n                <i className=\"fal fa-plus fa-fw\"></i> Aggiungi materia\r\n            </button>\r\n\r\n            <div className=\"clearfix\"></div>\r\n\r\n            <div className=\"row mx-0\">\r\n                {\r\n                    materie.map(m => {    \r\n                        return <div className=\"col-12 col-md-3 col-lg-3 p-0 p-md-1 mb-1\">\r\n                            <div className=\"border rounded p-2\">\r\n                                <Tooltip title=\"Modifica\">\r\n                                    <span onClick={() => this.showEditModal(m)} className=\"float-right link-warning ml-2\">\r\n                                        <i className=\"fa fa-pen\"></i>\r\n                                    </span>\r\n                                </Tooltip>\r\n\r\n                                <div className=\"text-truncate\">{m.nome}</div>\r\n                            </div>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <Modal title=\"Aggiungi una materia\" visible={showModal} footer={[\r\n                <Button type=\"primary\" onClick={this.aggiungiMateria}>Aggiungi</Button>,\r\n                <Button type=\"default\" onClick={this.showHideModal}>Annulla</Button>\r\n            ]} onCancel={this.showHideModal}>\r\n                <form onSubmit={this.aggiungiMateria}>\r\n                    <div className=\"form-group mb-0\">\r\n                        <label className=\"text-secondary\">Nome della materia</label>\r\n                        <input type=\"text\" value={nomeMateria} onChange={this.changeNome} className=\"form-control\" />\r\n                    </div>\r\n\r\n                    <input type=\"submit\" className=\"d-none\" />\r\n                </form>\r\n            </Modal>\r\n\r\n            {\r\n                materiaEdit && <Modal title=\"Modifica di una materia\" visible={showEditModal} footer={[\r\n                    <Button type=\"primary\" onClick={this.modificaMateria}>Modifica</Button>,\r\n                    <Button type=\"default\" onClick={this.hideEditModal}>Annulla</Button>\r\n                ]} onCancel={this.hideEditModal}>\r\n                    <form onSubmit={this.modificaMateria}>\r\n                        <div className=\"form-group mb-0\">\r\n                            <label className=\"text-secondary\">Nome della materia</label>\r\n                            <input type=\"text\" value={nomeEdit} onChange={this.changeNomeEdit} className=\"form-control\" />\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"d-none\" />\r\n                    </form>\r\n                </Modal>\r\n            }\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Tooltip } from \"antd\"\r\n\r\nexport interface IProps{\r\n    readonly src: string\r\n    readonly width?: number | string\r\n    readonly height?: number | string\r\n    readonly scalable?: boolean\r\n    readonly style?: React.CSSProperties\r\n}\r\nexport interface IState{\r\n    readonly scaled: boolean\r\n    readonly coords: number[]\r\n}\r\n\r\nexport default class ImageScale extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            scaled: false,\r\n            coords: [0, 0]\r\n        }\r\n    }\r\n\r\n    scaleImage = () => {\r\n        if(!this.props.scalable) return\r\n\r\n        this.setState({\r\n            scaled: !this.state.scaled\r\n        })\r\n        \r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { src, width, height, scalable, style } = this.props\r\n        const { scaled } = this.state\r\n        let firstclass = scalable ? \"scalable \" : \"\",\r\n        classname = scaled ? \"scaled\" : \"\",\r\n        title = scalable ? \"Cliccare per \" + (scaled ? \"rimpicciolire\" : \"ingrandire\") : null\r\n\r\n        return <Tooltip title={title}>\r\n            <img alt=\"scale\" style={style} className={\"imagescale \"+firstclass+classname} src={src} width={width} height={height} onClick={this.scaleImage} />\r\n        </Tooltip>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, message, Icon, Spin, Collapse } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, formatItalian } from \"../../utilities\"\r\nimport { ICalendar } from \"../../models/ICalendar\"\r\nimport Calendario from \"../Calendario\"\r\nimport { askPassword } from \"../AskConferma\"\r\nimport { ICalendarEvent } from \"../../models/ICalendarEvent\"\r\n\r\nexport interface IProps{\r\n    readonly anno: number\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly calendarId: string\r\n    readonly calendar: ICalendar\r\n    readonly actualId: string\r\n}\r\n\r\nexport default class ConfigForm extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            calendarId: null,\r\n            calendar: null,\r\n            actualId: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { corso, anno } = this.props\r\n\r\n        Axios.get(siteUrl+\"/api/calendari/\"+corso+\"/\"+anno).then(response => {\r\n            let calendar = response.data as ICalendar\r\n\r\n            this.setState({\r\n                calendarId: calendar.idCalendario,\r\n                actualId: calendar.idCalendario,\r\n                calendar\r\n            })\r\n        })\r\n    }\r\n\r\n    changeID = (e: any) => {\r\n        let calendarId = e.target.value\r\n\r\n        this.setState({\r\n            calendarId\r\n        })\r\n    }\r\n\r\n    saveConfig = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { corso, anno } = this.props\r\n        const { calendarId } = this.state\r\n\r\n        if(calendarId === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n        \r\n        askPassword(siteUrl+\"/api/calendari\", \"post\", {\r\n            calendario: {\r\n                idCalendario: calendarId,\r\n                idCorso: corso,\r\n                anno\r\n            }\r\n        }, (response: any) => {\r\n            let eventiScartati = response.data as ICalendarEvent[],\r\n            { Panel } = Collapse\r\n\r\n            if(eventiScartati.length){\r\n                Modal.warning({\r\n                    title: \"Attenzione!\",\r\n                    content: <div style={{ marginLeft: -38 }}>\r\n                        <p className=\"text-muted\">I seguenti eventi sono stati scartati durante l'inserimento. Assicurati che siano scritti nel giusto modo (<strong>LUOGO: DOCENTE - MATERIA</strong>), che le materie e i docenti siano stati creati, e che la materia sia effettivamente assegnata al docente.</p>\r\n\r\n                        <Collapse bordered={false}>\r\n                            <Panel header=\"Espandi per visualizzare gli eventi\" key={1}>\r\n                                { \r\n                                    eventiScartati.map(e => {\r\n                                        return <span className=\"d-block\">\r\n                                            <strong>{formatItalian(e.date)} ({e.inizio} - {e.fine})</strong>: {e.summary}\r\n                                        </span>\r\n                                    })\r\n                                }\r\n                            </Panel>\r\n                        </Collapse>\r\n                    </div>\r\n                })\r\n            }\r\n            \r\n            this.setState({\r\n                actualId: calendarId\r\n            })\r\n\r\n            message.success(\"Configurazione calendario salvata!\")\r\n        }, () => {\r\n            this.setState({\r\n                actualId: null\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { calendarId, actualId } = this.state\r\n\r\n        if(calendarId === null){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"text-center\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <form onSubmit={this.saveConfig}>\r\n            <div className=\"form-group row mx-1\">\r\n                <div className=\"col px-0\">\r\n                    <label className=\"text-secondary\">ID Calendario</label>\r\n                    <input name=\"calendarID\" type=\"text\" className=\"form-control\" value={calendarId} onChange={this.changeID} />\r\n                </div>\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-success float-right mr-1 mb-3\">\r\n                {\r\n                    actualId === null && <Icon type=\"loading\" className=\"mr-2 loadable-btn\" spin />\r\n                }\r\n                Salva configurazione\r\n            </button>\r\n\r\n            <div className=\"clearfix\"></div>\r\n\r\n            <div className=\"p-1\">\r\n                <h4>Anteprima visualizzazione</h4>\r\n                <Calendario calendarId={actualId} />\r\n            </div> \r\n        </form>\r\n    }\r\n}","import React from \"react\"\r\nimport { Icon, Modal, Tooltip, Tabs } from \"antd\"\r\nimport ImageScale from \"../ImageScale\"\r\nimport ConfigForm from \"./ConfigForm\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{}\r\n\r\nexport default class ConfigCalendar extends React.PureComponent<IProps, IState>{\r\n    showHelp = () => {\r\n        Modal.info({\r\n            width: 700,\r\n            style: { top: 24 },\r\n            centered: false,\r\n            maskClosable: true,\r\n            icon: <Icon type=\"question-circle\" style={{ marginTop: 6, fontSize: 28, color: \"orange\" }} />,\r\n            okText: \"Ho capito\",\r\n            content: <div className=\"text-justify\">\r\n                <strong>Dove mi trovo?</strong>\r\n                <p>In questa pagina potrai configurare il calendario dal quale verranno caricate le lezioni del corso.</p>\r\n                <strong>Come si configura il calendario?</strong>\r\n                <p>Per configurare il calendario avrai bisogno di un codice univoco, che ti permetterà di collegare il calendario al sito.</p>\r\n                <strong>ID del calendario</strong>\r\n                <p>Per trovare l'ID (identificativo) del calendario, basterà effettuare l'accesso su <a href=\"https://calendar.google.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Google Calendar <i className=\"far fa-external-link\"></i></a> con un account che abbia integrato il calendario del corso. Bisognerà poi premere sul simbolo <i className=\"far fa-cog\"></i> in alto a destra e successivamente su <strong>Impostazioni</strong> nel menu che comparirà. Scorrere quindi la lista a sinistra della pagina, e cliccare sul calendario che si desidera integrare. Recarsi sotto la voce <strong>Integra calendario</strong> e copiare (subito in basso) il codice identificativo del calendario (<strong>ID calendario</strong>), per poi incollarlo in questa pagina di configurazione.</p>\r\n                <p><u>Assicurati che il calendario sia <strong>pubblico</strong>, altrimenti non sarà possibile visualizzarlo.</u></p>\r\n                <strong className=\"d-block mb-2\">Galleria immagini</strong>\r\n                <ImageScale src=\"https://i.imgur.com/e3H0hXX.png\" height={100} scalable />\r\n            </div>\r\n        })\r\n\r\n        setTimeout(() => document.getElementsByClassName(\"ant-modal-wrap\")[0].scrollTo(0, 0), 100)\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { TabPane } = Tabs\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">\r\n                Configurazione calendario\r\n                <Tooltip title=\"Informazioni\">\r\n                    <button type=\"button\" className=\"btn btn-outline-info circle-btn float-right\" onClick={this.showHelp}>\r\n                        <i className=\"fa fa-question\"></i>\r\n                    </button>\r\n                </Tooltip>\r\n                <div className=\"clearfix\"></div>\r\n            </h3>\r\n\r\n            <Tabs>\r\n                <TabPane tab=\"Primo anno\" key=\"1\">\r\n                    <ConfigForm anno={1} corso={this.props.corso} />\r\n                </TabPane>\r\n                <TabPane tab=\"Secondo anno\" key=\"2\">\r\n                    <ConfigForm anno={2} corso={this.props.corso} />\r\n                </TabPane>\r\n            </Tabs>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { routerHistory } from \"..\"\r\n\r\nexport interface IProps{\r\n    readonly goTo: string\r\n}\r\nexport interface IState{}\r\n\r\nexport default class Page404 extends React.PureComponent<IProps, IState>{\r\n    render(): JSX.Element{\r\n        return <div id=\"mainBlock\" className=\"col\">\r\n            <div className=\"text-center text-grey w-100\">\r\n                <i className=\"fal fa-exclamation-triangle mb-2\" style={{ fontSize: 150}}></i>\r\n                <h1 className=\"mb-2 text-grey font-weight-normal\">Errore 404</h1>\r\n                <p style={{ fontSize: 20 }}>La pagina che stati cercando non esiste.</p>\r\n                <button onClick={() => routerHistory.push(this.props.goTo)} type=\"button\" className=\"btn btn-blue btn-lg text-uppercase\">\r\n                    <i className=\"fa fa-shield-check fa-lg fa-fw mr-2\"></i>\r\n                    Torna al sicuro\r\n                </button>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal } from \"antd\"\r\nimport { siteUrl } from \"../../utilities\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{}\r\n\r\nexport default class EditCodiceFirma extends React.PureComponent<IProps, IState>{\r\n    requestCodeChange = (anno: number) => {\r\n        askPassword(siteUrl+\"/api/corsi/generacodiceanno\", \"post\", {\r\n            anno\r\n        }, (response: any) => {\r\n            let codice = response.data\r\n\r\n            Modal.info({\r\n                title: \"Codice generato\",\r\n                content: <span>\r\n                    Il nuovo codice è: <strong>{codice}</strong>\r\n                </span>\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-4 text-center\">Gestione firma da casa</h3>\r\n\r\n            <div className=\"py-4 px-3 text-justify border rounded shadow-sm mb-4\">\r\n                <div className=\"row mx-0\">\r\n                    <div className=\"col-1 text-left\">\r\n                        <i className=\"fal fa-question-circle fa-3x text-warning\"></i>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <p>Nel caso in cui ce ne fosse bisogno, è possibile dare agli studenti la possibilità di firmare le loro presenze da casa.</p>\r\n                        <p>Tramite <a href={siteUrl+\"/#/firmacasa\"} target=\"_blank\" rel=\"noopener noreferrer\">questo url</a> (da condividere con gli studenti) è possibile eseguire tale operazione, ma per farlo è necessario generare, tramite la pagina corrente, un codice univoco che permetta l'accesso alla schermata. Basterà quindi digitarlo nell'apposito campo di testo e si accederà alla lista degli studenti presenti nella classe.</p>\r\n                        <p>Lo studente sarà poi libero di scegliere il proprio nome nella lista, e confermando la propria identità tramite password avrà la possibilità di firmare.</p>\r\n                        <p className=\"mb-0\">Il codice sarà differente in base all'anno di appartenenza.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <strong className=\"mr-2\">Genera codice:</strong>\r\n            <button className=\"btn btn-blue mr-2\" onClick={() => this.requestCodeChange(1)}>Primo anno</button>\r\n            <button className=\"btn btn-danger\" onClick={() => this.requestCodeChange(2)}>Secondo anno</button>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { IAdmin } from \"../../models/IAdmin\"\r\nimport { ILezioneCorrente } from \"../../models/ILezioneCorrente\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, convertFromUTC } from \"../../utilities\"\r\nimport { Tabs, Icon, Spin, Tooltip } from \"antd\"\r\n\r\nexport interface IProps{\r\n    readonly coordinatore: IAdmin\r\n}\r\nexport interface IState{\r\n    readonly lezioneCorrente1: ILezioneCorrente\r\n    readonly noLezione1: boolean\r\n    readonly lezioneCorrente2: ILezioneCorrente\r\n    readonly noLezione2: boolean\r\n}\r\n\r\nexport default class Home extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            lezioneCorrente1: null,\r\n            noLezione1: false,\r\n            lezioneCorrente2: null,\r\n            noLezione2: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { coordinatore } = this.props\r\n\r\n        Axios.get(siteUrl+\"/api/lezioni/getstudentiatlezione/\"+coordinatore.idCorso+\"/1\").then(response => {\r\n            if(typeof(response.data) === \"string\"){\r\n                this.setState({\r\n                    noLezione1: true\r\n                })\r\n            }else{\r\n                let data = response.data as ILezioneCorrente\r\n\r\n                this.setState({\r\n                    lezioneCorrente1: data\r\n                })\r\n            }\r\n        }).catch(_ => {\r\n            this.setState({\r\n                noLezione1: true\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/lezioni/getstudentiatlezione/\"+coordinatore.idCorso+\"/2\").then(response => {\r\n            if(typeof(response.data) === \"string\"){\r\n                this.setState({\r\n                    noLezione2: true\r\n                })\r\n            }else{\r\n                let data = response.data as ILezioneCorrente\r\n\r\n                this.setState({\r\n                    lezioneCorrente2: data\r\n                })\r\n            }\r\n        }).catch(_ => {\r\n            this.setState({\r\n                noLezione2: true\r\n            })\r\n        })\r\n    }\r\n\r\n    getContenuto = (lezione: ILezioneCorrente) => {\r\n        return <div>\r\n            <div className=\"col-12 col-md-6 mb-2 px-2\">\r\n                <div className=\"p-3 bg-white border rounded\">\r\n                    <Tooltip title={lezione.lezione.titolo}>\r\n                        <h4 className=\"text-uppercase mb-2 text-truncate\">{lezione.lezione.titolo}</h4>\r\n                    </Tooltip>\r\n                    <span className=\"text-muted\">{convertFromUTC(lezione.lezione.oraInizio)} - {convertFromUTC(lezione.lezione.oraFine)}</span>\r\n                </div>\r\n            </div>\r\n\r\n            <h6 className=\"mt-3 mb-2 ml-2\">Studenti presenti</h6>\r\n            <div className=\"row mx-0\">\r\n                {\r\n                    lezione.studenti.map(s => {\r\n                        return <div className=\"col-12 col-md-3 mb-md-0 p-1 p-md-2\">\r\n                            <div className=\"border rounded p-2 text-truncate\">\r\n                                <div>{s.nome} {s.cognome}</div>\r\n                                <span className=\"text-muted\">Entrata: {convertFromUTC(s.oraIngresso)}</span>\r\n                            </div>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { coordinatore } = this.props,\r\n        { lezioneCorrente1, lezioneCorrente2, noLezione1, noLezione2 } = this.state,\r\n        { TabPane } = Tabs,\r\n        icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Home coordinatore</h3>\r\n\r\n            <div className=\"col-12 col-md-6 mb-2 mb-md-0 p-3 bg-white border rounded\">\r\n                <span className=\"border-text\">Dati personali</span>\r\n                <h4 className=\"text-uppercase mb-2 text-truncate\">{coordinatore.nome} {coordinatore.cognome}</h4>\r\n\r\n                Codice di accesso alla firma: <strong>{coordinatore.codiceCorso}</strong>\r\n            </div>\r\n\r\n            <h4 className=\"mt-3 mb-2\">Lezioni in corso</h4>\r\n\r\n            <Tabs>\r\n                <TabPane tab=\"Primo anno\" key=\"1\">\r\n                    {\r\n                        !lezioneCorrente1 && !noLezione1 && <div className=\"text-center\">\r\n                            <Spin indicator={icon} />\r\n                        </div>\r\n                    }\r\n                    {\r\n                        !lezioneCorrente1 && noLezione1 && <div className=\"text-center\">\r\n                            Non ci sono lezioni in corso.\r\n                        </div>\r\n                    }\r\n                    {\r\n                        lezioneCorrente1 && !noLezione1 && this.getContenuto(lezioneCorrente1)\r\n                    }\r\n                </TabPane>\r\n                <TabPane tab=\"Secondo anno\" key=\"2\">\r\n                {\r\n                        !lezioneCorrente2 && !noLezione2 && <div className=\"text-center\">\r\n                            <Spin indicator={icon} />\r\n                        </div>\r\n                    }\r\n                    {\r\n                        !lezioneCorrente2 && noLezione2 && <div className=\"text-center\">\r\n                            Non ci sono lezioni in corso.\r\n                        </div>\r\n                    }\r\n                    {\r\n                        lezioneCorrente2 && !noLezione2 && this.getContenuto(lezioneCorrente2)\r\n                    }\r\n                </TabPane>\r\n            </Tabs>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"../..\"\r\nimport LoginTutor from \"./LoginTutor\"\r\nimport StudentsList from \"./StudentsList\"\r\nimport AddNewStudent from \"./AddNewStudent\"\r\nimport StudentDetails from \"./StudentDetails\"\r\nimport DocentiList from \"./DocentiList\"\r\nimport AddNewDocente from \"./AddNewDocente\"\r\nimport DocenteDetails from \"./DocenteDetails\"\r\nimport EditDocente from \"./EditDocente\"\r\nimport EditStudente from \"./EditStudente\"\r\nimport StudentsImport from \"./StudentsImport\"\r\nimport MaterieList from \"./MaterieList\"\r\nimport ConfigCalendar from \"./ConfigCalendar\"\r\nimport { IAdmin } from \"../../models/IAdmin\"\r\nimport LogoCorso from \"../LogoCorso\"\r\nimport Page404 from \"../Page404\"\r\nimport { adminRoute } from \"../../utilities\"\r\nimport EditCodiceFirma from \"./EditCodiceFirma\"\r\nimport Footer from \"../Footer\"\r\nimport Home from \"./Home\"\r\n\r\nexport default class Dashboard extends React.Component{\r\n\r\n    componentWillUnmount = () => {\r\n        sessionStorage.removeItem(\"adminSession\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n\r\n        let session = sessionStorage.getItem(\"adminSession\")\r\n        \r\n        if(!session)\r\n            return <LoginTutor />\r\n\r\n        let admin = JSON.parse(session) as IAdmin\r\n\r\n        return <div className=\"container-fluid\">\r\n            <Router history={routerHistory}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3 bg-blue p-0 menu\">\r\n                        \r\n                        <LogoCorso idCorso={admin.idCorso} />\r\n\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/home\")} to={adminRoute+\"/home\"}>\r\n                            <span><i className=\"fal fa-home-alt fa-fw mr-1\"></i> Home</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/studenti\")} to={adminRoute+\"/studenti\"}>\r\n                            <span><i className=\"fal fa-users-class fa-fw mr-1\"></i> Studenti</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/docenti\")} to={adminRoute+\"/docenti\"}>\r\n                            <span><i className=\"fal fa-chalkboard-teacher fa-fw mr-1\"></i> Docenti</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/materie\")} to={adminRoute+\"/materie\"}>\r\n                            <span><i className=\"fal fa-list-alt fa-fw mr-1\"></i> Materie</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/config\")} to={adminRoute+\"/config\"}>\r\n                            <span><i className=\"fal fa-calendar-edit fa-fw mr-1\"></i> Configura calendario</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/codicefirma\")} to={adminRoute+\"/codicefirma\"}>\r\n                            <span><i className=\"fal fa-house-signal fa-fw mr-1\"></i> Firma da casa</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => {\r\n                            sessionStorage.removeItem(\"adminSession\")\r\n                            routerHistory.push(adminRoute)\r\n                        }} exact to={adminRoute+\"/login\"}>\r\n                            <span><i className=\"fal fa-power-off fa-fw mr-1\"></i> Esci</span>\r\n                        </NavLink>\r\n\r\n                        <Footer inMenu />\r\n                    </div>\r\n  \r\n                    <Switch>\r\n                        <Route exact path={adminRoute} render={() => {\r\n                            routerHistory.push(adminRoute+\"/home\")\r\n\r\n                            return null\r\n                        }} />\r\n\r\n                        <Route exact path={adminRoute+\"/home\"} render={() => (\r\n                            <Home coordinatore={admin} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti\"} render={() => (\r\n                            <StudentsList corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti/new\"} render={() => (\r\n                            <AddNewStudent corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti/import\"} render={() => (\r\n                            <StudentsImport corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti/:id\"} render={(routeProps) => (\r\n                            <StudentDetails {...routeProps} corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti/edit/:id\"} render={(routeProps) => (\r\n                            <EditStudente {...routeProps} corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/docenti\"} render={() => (\r\n                            <DocentiList corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/docenti/new\"} render={() => (\r\n                            <AddNewDocente corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/docenti/:id\"} render={(routeProps) => (\r\n                            <DocenteDetails {...routeProps} corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/docenti/edit/:id\"} render={(routeProps) => (\r\n                            <EditDocente {...routeProps} corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/materie\"} render={() => (\r\n                            <MaterieList corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/config\"} render={() => (\r\n                            <ConfigCalendar corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/codicefirma\"} render={() => (\r\n                            <EditCodiceFirma />\r\n                        )} />\r\n\r\n                        <Route render={() => <Page404 goTo={adminRoute} />} />\r\n\r\n                    </Switch>\r\n                        \r\n                </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, superAdminRoute } from \"../../utilities\"\r\nimport { Icon, Spin, Tooltip } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly corsi: ICorso[]\r\n}\r\n\r\nexport default class CorsiList extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            corsi: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                corsi\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { corsi } = this.state\r\n        \r\n        if(!corsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Lista dei corsi</h3>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={() => routerHistory.push(superAdminRoute+\"/corsi/new\")}>\r\n                <i className=\"fal fa-plus fa-fw\"></i> Aggiungi corso\r\n            </button>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th style={{width: \"15%\"}}>Logo</th>\r\n                        <th>Nome</th>\r\n                        <th>Luogo</th>\r\n                        <th style={{width: \"10%\"}}>Azioni</th>\r\n                    </tr>\r\n\r\n                    {\r\n                        corsi.map(c => {        \r\n                            return <tr>\r\n                                <td><img width=\"55\" src={c.logo} alt=\"logo\" /></td>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\">{c.nome}</td>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\">{c.luogo}</td>\r\n                                <td>\r\n                                    <Tooltip title=\"Modifica\">\r\n                                        <button type=\"button\" className=\"btn btn-warning text-white circle-btn\" onClick={() => routerHistory.push(superAdminRoute+\"/corsi/edit/\" + c.idCorso)}>\r\n                                            <i className=\"fa fa-pen\"></i>\r\n                                        </button>\r\n                                    </Tooltip>\r\n                                </td>\r\n                            </tr>\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Upload, Icon, message } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { imageFileToBase64, superAdminRoute, siteUrl } from \"../../utilities\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly luogo: string\r\n    readonly logo: string\r\n}\r\n\r\nexport default class AddNewCorso extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            luogo: \"\",\r\n            logo: null\r\n        }\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome\r\n        })\r\n    }\r\n\r\n    changeLuogo = (event: any) => {\r\n        let luogo = event.target.value\r\n\r\n        this.setState({\r\n            luogo\r\n        })\r\n    }\r\n\r\n    aggiungiCorso = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { nome, luogo, logo } = this.state\r\n\r\n        if(nome.trim() === \"\" || luogo.trim() === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        askPassword(siteUrl+\"/api/corsi\", \"post\", {\r\n            corso: {\r\n                nome: nome.trim(),\r\n                luogo: luogo.trim(),\r\n                logo: logo ? logo.trim() : \"\"\r\n            }\r\n        }, (_: any) => {\r\n            message.success(\"Corso creato con successo!\")\r\n            routerHistory.push(superAdminRoute+\"/corsi\")\r\n        })\r\n    }\r\n\r\n    convertImage = (file: any) => {\r\n        imageFileToBase64(file).then(result => {\r\n            this.setState({\r\n                logo: String(result)\r\n            })\r\n        })\r\n\r\n        return false\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, luogo, logo } = this.state,\r\n        uploadButton = (\r\n            <div>\r\n                <Icon type=\"plus\" style={{ fontSize: 30, marginBottom: 5 }} />\r\n                <div className=\"ant-upload-text\">Carica immagine</div>\r\n            </div>\r\n        )\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Aggiungi un nuovo corso</h3>\r\n\r\n            <form className=\"row\" onSubmit={this.aggiungiCorso}>\r\n\r\n                <div className=\"form-group mr-3\">\r\n                    <label className=\"text-secondary d-block\">Logo</label>\r\n                    <Upload listType=\"picture-card\" showUploadList={false} beforeUpload={(file) => this.convertImage(file)} className=\"logo-upload\" accept=\"image/*\">\r\n                        {logo ? <img src={logo} alt=\"logo\" style={{ width: \"100%\" }} /> : uploadButton}\r\n                    </Upload>\r\n                </div>\r\n                \r\n                <div className=\"col pr-0\">\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"nomecorso\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Luogo</label>\r\n                        <input name=\"luogo\" type=\"text\" className=\"form-control\" value={luogo} onChange={this.changeLuogo} />\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-success text-uppercase w-100\">Aggiungi corso</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { routerHistory } from \"../..\"\r\nimport { message, Modal } from \"antd\"\r\nimport { mountLogin, unmountLogin, siteUrl, logoUrl, superAdminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\nimport { isSuperAdmin } from \"../../models/IAdmin\"\r\nimport Footer from \"../Footer\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly adminName: string\r\n    readonly adminPsw: string\r\n}\r\n\r\nexport default class LoginAdmin extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            adminName: \"\",\r\n            adminPsw: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    changeInputName = (event: any) => {\r\n        let name = event.target.value\r\n\r\n        this.setState({\r\n            adminName: name\r\n        })\r\n    }\r\n\r\n    changeInputPassword = (event: any) => {\r\n        let psw = event.target.value\r\n\r\n        this.setState({\r\n            adminPsw: psw\r\n        })\r\n    }\r\n\r\n    tryLogin = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { adminName, adminPsw } = this.state\r\n        let cipher = new Cipher(),\r\n        password = cipher.encode(adminPsw)\r\n\r\n        Axios.post(siteUrl+\"/api/amministratori/loginamministratori\", {\r\n            username: adminName.trim(),\r\n            password\r\n        }).then(response => {\r\n            let data = response.data\r\n\r\n            if(isSuperAdmin(data)){\r\n                data.password = password\r\n                sessionStorage.setItem(\"superSession\", JSON.stringify(data))\r\n                routerHistory.push(superAdminRoute)\r\n                message.success(\"Login effettuato con successo!\")\r\n            }\r\n            else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Username o Password errati!\",\r\n                    centered: true,\r\n                    maskClosable: true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { adminName, adminPsw } = this.state\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100\">\r\n                <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.tryLogin}>\r\n                    <h3 className=\"d-inline-block\">Accesso amministratori</h3>\r\n                    <img src={logoUrl} height=\"40\" className=\"float-right logo\" alt=\"logo\" />\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Utente di accesso</label>\r\n                        <input name=\"username\" type=\"text\" className=\"form-control\" value={adminName} onChange={this.changeInputName} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Password di accesso</label>\r\n                        <input name=\"password\" type=\"password\" className=\"form-control\" value={adminPsw} onChange={this.changeInputPassword} />\r\n                    </div>\r\n\r\n                    <input type=\"submit\" value=\"Accedi\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n                </form>\r\n\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}","import React from \"react\"\r\nimport { Modal, Icon, Spin, Upload, message } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, imageFileToBase64, superAdminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{}\r\nexport interface IState{\r\n    readonly corso: ICorso\r\n    readonly nome: string\r\n    readonly luogo: string\r\n    readonly logo: string\r\n}\r\n\r\nexport default class EditCorso extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            corso: null,\r\n            nome: \"\",\r\n            luogo: \"\",\r\n            logo: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(superAdminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/corsi/\" + id).then(response => {\r\n            let corso = response.data as ICorso\r\n\r\n            this.setState({\r\n                corso,\r\n                nome: corso.nome,\r\n                luogo: corso.luogo,\r\n                logo: corso.logo\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome\r\n        })\r\n    }\r\n\r\n    changeLuogo = (event: any) => {\r\n        let luogo = event.target.value\r\n\r\n        this.setState({\r\n            luogo\r\n        })\r\n    }\r\n\r\n    modificaCorso = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { nome, luogo, corso, logo } = this.state\r\n\r\n        if(nome.trim() === \"\" || luogo.trim() === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        askPassword(siteUrl+\"/api/corsi/\" + corso.idCorso, \"put\", {\r\n            corso: {\r\n                idCorso: corso.idCorso,\r\n                nome: nome.trim(),\r\n                luogo: luogo.trim(),\r\n                logo: logo ? logo.trim() : \"\"\r\n            }\r\n        }, (_: any) => {\r\n            message.success(\"Corso modificato con successo!\")\r\n            routerHistory.push(superAdminRoute+\"/corsi\")\r\n        })\r\n    }\r\n\r\n    convertImage = (file: any) => {\r\n        imageFileToBase64(file).then(result => {\r\n            this.setState({\r\n                logo: String(result)\r\n            })\r\n        })\r\n\r\n        return false\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, luogo, corso, logo } = this.state,\r\n        uploadButton = (\r\n            <div>\r\n                <Icon type=\"plus\" style={{ fontSize: 30, marginBottom: 5 }} />\r\n                <div className=\"ant-upload-text\">Carica immagine</div>\r\n            </div>\r\n        )\r\n\r\n        if(!corso){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Modifica di un corso</h3>\r\n\r\n            <form className=\"row\" onSubmit={this.modificaCorso}>\r\n                <div className=\"form-group mr-3\">\r\n                    <label className=\"text-secondary d-block\">Logo</label>\r\n                    <Upload listType=\"picture-card\" showUploadList={false} beforeUpload={(file) => this.convertImage(file)} className=\"logo-upload\" accept=\"image/*\">\r\n                        {logo ? <img src={logo} alt=\"logo\" style={{ width: \"100%\" }} /> : uploadButton}\r\n                    </Upload>\r\n                </div>\r\n\r\n                <div className=\"col pr-0\">\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"nomecorso\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Luogo</label>\r\n                        <input name=\"luogo\" type=\"text\" className=\"form-control\" value={luogo} onChange={this.changeLuogo} />\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-success text-uppercase w-100\">Modifica corso</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, superAdminRoute } from \"../../utilities\"\r\nimport { Icon, Spin, Tooltip } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { ITutor } from \"../../models/ITutor\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly tutor: ITutor[]\r\n}\r\n\r\nexport default class TutorList extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            tutor: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/coordinatori\").then(response => {\r\n            let tutor = response.data as ITutor[]\r\n\r\n            this.setState({\r\n                tutor\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { tutor } = this.state\r\n        \r\n        if(!tutor){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Lista dei coordinatori</h3>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={() => routerHistory.push(superAdminRoute+\"/tutor/new\")}>\r\n                <i className=\"fal fa-plus fa-fw\"></i> Aggiungi coordinatore\r\n            </button>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                \r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th>Cognome</th>\r\n                            <th style={{width: \"30%\"}}>Corso</th>\r\n                            <th style={{width: \"10%\"}}>Azioni</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            tutor.map(t => {        \r\n                                return <tr>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{t.nome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{t.cognome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{t.corso}</td>\r\n                                    <td>\r\n                                        <Tooltip title=\"Modifica\">\r\n                                            <button type=\"button\" className=\"btn btn-warning text-white circle-btn\" onClick={() => routerHistory.push(superAdminRoute+\"/tutor/edit/\" + t.idCoordinatore)}>\r\n                                                <i className=\"fa fa-pen\"></i>\r\n                                            </button>\r\n                                        </Tooltip>\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Icon, message, Spin } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, superAdminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly email: string\r\n    readonly listaCorsi: ICorso[]\r\n    readonly corso: number\r\n}\r\n\r\nexport default class AddNewTutor extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            email: \"\",\r\n            listaCorsi: null,\r\n            corso: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                listaCorsi: corsi,\r\n                corso: corsi.length ? corsi[0].idCorso : 0\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email\r\n        })\r\n    }\r\n\r\n    changeCorso = (event: any) => {\r\n        let corso = parseInt(event.target.value)\r\n\r\n        this.setState({\r\n            corso\r\n        })\r\n    }\r\n\r\n    isExistingCorso = (corso: number) => {\r\n        return this.state.listaCorsi.find(c => c.idCorso === corso)\r\n    }\r\n\r\n    aggiungiTutor = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { nome, cognome, email, corso } = this.state\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!this.isExistingCorso(corso)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Corso non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        askPassword(siteUrl+\"/api/coordinatori\", \"post\", {\r\n            coordinatore: {\r\n                nome: nome.trim(),\r\n                cognome: cognome.trim(),\r\n                email,\r\n                idCorso: corso\r\n            }\r\n        }, (_: any) => {\r\n            message.success(\"Tutor creato con successo!\")\r\n            routerHistory.push(superAdminRoute+\"/tutor\")\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, email, listaCorsi } = this.state\r\n\r\n        if(!listaCorsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        if(!listaCorsi.length){\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                È necessario creare almeno un corso per poter inserire un nuovo coordinatore.\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Aggiungi un nuovo coordinatore</h3>\r\n\r\n            <form onSubmit={this.aggiungiTutor}>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Corso gestito</label>\r\n                        <select name=\"anno\" onChange={this.changeCorso} className=\"custom-select\">\r\n                            {\r\n                                listaCorsi.map(c => {\r\n                                    return <option value={c.idCorso}>{c.nome}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-success text-uppercase w-100\">Aggiungi coordinatore</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Icon, message, Spin } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, superAdminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { ITutor } from \"../../models/ITutor\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly email: string\r\n    readonly listaCorsi: ICorso[]\r\n    readonly corso: number\r\n}\r\n\r\nexport default class EditTutor extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            email: \"\",\r\n            listaCorsi: null,\r\n            corso: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(superAdminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/coordinatori/\"+id).then(response => {\r\n            let tutor = response.data as ITutor\r\n\r\n            this.setState({\r\n                nome: tutor.nome,\r\n                cognome: tutor.cognome,\r\n                email: tutor.email,\r\n                corso: tutor.idCorso\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                listaCorsi: corsi\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email\r\n        })\r\n    }\r\n\r\n    changeCorso = (event: any) => {\r\n        let corso = parseInt(event.target.value)\r\n\r\n        this.setState({\r\n            corso\r\n        })\r\n    }\r\n\r\n    isExistingCorso = (corso: number) => {\r\n        return this.state.listaCorsi.find(c => c.idCorso === corso)\r\n    }\r\n\r\n    modificaTutor = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { nome, cognome, email, corso } = this.state\r\n        const idCoordinatore = this.props.match.params.id\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!this.isExistingCorso(corso)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Corso non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        askPassword(siteUrl+\"/api/coordinatori/\" + idCoordinatore, \"put\", {\r\n            coordinatore: {\r\n                idCoordinatore,\r\n                nome: nome.trim(),\r\n                cognome: cognome.trim(),\r\n                email,\r\n                idCorso: corso\r\n            }\r\n        }, (_: any) => {\r\n            message.success(\"Tutor modificato con successo!\")\r\n            routerHistory.push(superAdminRoute+\"/tutor\")\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, email, listaCorsi, corso } = this.state\r\n\r\n        if(!listaCorsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Modifica di un coordinatore</h3>\r\n\r\n            <form onSubmit={this.modificaTutor}>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Corso gestito</label>\r\n                        <select name=\"anno\" onChange={this.changeCorso} className=\"custom-select\">\r\n                            {\r\n                                listaCorsi.map(c => {\r\n                                    let selected = corso === c.idCorso\r\n\r\n                                    return <option value={c.idCorso} selected={selected}>{c.nome}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-success text-uppercase w-100\">Modifica coordinatore</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"../..\"\r\nimport LogoCorso from \"../LogoCorso\"\r\nimport Page404 from \"../Page404\"\r\nimport { superAdminRoute } from \"../../utilities\"\r\nimport CorsiList from \"./CorsiList\"\r\nimport AddNewCorso from \"./AddNewCorso\"\r\nimport LoginAdmin from \"./LoginAdmin\"\r\nimport EditCorso from \"./EditCorso\"\r\nimport TutorList from \"./TutorList\"\r\nimport AddNewTutor from \"./AddNewTutor\"\r\nimport EditTutor from \"./EditTutor\"\r\nimport Footer from \"../Footer\"\r\n\r\nexport default class SuperDashboard extends React.Component{\r\n\r\n    componentWillUnmount = () => {\r\n        sessionStorage.removeItem(\"superSession\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n\r\n        let session = sessionStorage.getItem(\"superSession\")\r\n        \r\n        if(!session)\r\n            return <LoginAdmin />\r\n\r\n        return <div className=\"container-fluid\">\r\n            <Router history={routerHistory}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3 bg-blue p-0 menu\">\r\n                        \r\n                        <LogoCorso idCorso={0} />\r\n\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(superAdminRoute+\"/studenti\")} to={superAdminRoute+\"/tutor\"}>\r\n                            <span><i className=\"fal fa-users-crown fa-fw mr-1\"></i> Coordinatori</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(superAdminRoute+\"/corsi\")} to={superAdminRoute+\"/corsi\"}>\r\n                            <span><i className=\"fal fa-list-alt fa-fw mr-1\"></i> Corsi</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => {\r\n                            sessionStorage.removeItem(\"superSession\")\r\n                            routerHistory.push(superAdminRoute)\r\n                        }} exact to={superAdminRoute+\"/login\"}>\r\n                            <span><i className=\"fal fa-power-off fa-fw mr-1\"></i> Esci</span>\r\n                        </NavLink>\r\n\r\n                        <Footer inMenu />\r\n                    </div>\r\n  \r\n                    <Switch>\r\n                        <Route exact path={superAdminRoute} render={() => {\r\n                            routerHistory.push(superAdminRoute+\"/tutor\")\r\n\r\n                            return null\r\n                        }} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/tutor\"} render={() => (\r\n                            <TutorList />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/tutor/new\"} render={() => (\r\n                            <AddNewTutor />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/tutor/edit/:id\"} render={(routeProps) => (\r\n                            <EditTutor {...routeProps} />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/corsi\"} render={() => (\r\n                            <CorsiList />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/corsi/new\"} render={() => (\r\n                            <AddNewCorso />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/corsi/edit/:id\"} render={(routeProps) => (\r\n                            <EditCorso {...routeProps} />\r\n                        )} />\r\n\r\n                        <Route render={() => <Page404 goTo={superAdminRoute} />} />\r\n\r\n                    </Switch>\r\n                        \r\n                </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport { Modal } from \"antd\"\r\nimport { mountLogin, unmountLogin, siteUrl } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { routerHistory } from \"../..\"\r\nimport { areStudent } from \"../../models/IStudent\"\r\nimport LogoCorso from \"../LogoCorso\"\r\nimport Footer from \"../Footer\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly codice: string\r\n}\r\n\r\nexport default class CodiceSegreto extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            codice: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    changeCodice = (event: any) => {\r\n        let code = event.target.value\r\n\r\n        this.setState({\r\n            codice: code.trim()\r\n        })\r\n    }\r\n\r\n    inviaCodice = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { codice } = this.state\r\n\r\n        if(codice === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire il campo.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.post(siteUrl+\"/api/firmaremota/accessoremoto\", codice, {\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        }).then(response => {\r\n            let data = response.data\r\n\r\n            if(areStudent(data)){\r\n                sessionStorage.removeItem(\"adminSession\")\r\n                sessionStorage.removeItem(\"superSession\")\r\n                sessionStorage.setItem(\"confermaCasa\", JSON.stringify(data))\r\n                routerHistory.push(\"/firmacasa\")\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Il codice non corrisponde a nessun corso/classe, oppure è scaduto (chiedi al tuo coordinatore di cambiarlo).\",\r\n                    centered: true,\r\n                    maskClosable: true\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Il codice non è valido.\",\r\n                centered: true,\r\n                maskClosable: true\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { codice } = this.state\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100\">\r\n                <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.inviaCodice}>\r\n                    <h3 className=\"d-inline-block\">Accesso firma da casa</h3>\r\n                    <LogoCorso forLogin />\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Codice segreto</label>\r\n                        <input name=\"username\" type=\"text\" className=\"form-control\" value={codice} onChange={this.changeCodice} />\r\n                    </div>\r\n\r\n                    <p className=\"text-muted\">Chiedi al tuo coordinatore il codice segreto per accedere alla firma da casa.</p>\r\n\r\n                    <input type=\"submit\" value=\"Prosegui\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n                </form>\r\n\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}","export interface IStudent{\r\n    readonly idStudente?: number\r\n    readonly email: string\r\n    readonly idCorso: number\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly annoFrequentazione: number\r\n    readonly cf: string\r\n    readonly password?: string\r\n    readonly dataNascita: string\r\n    readonly codice?: string\r\n    readonly ritirato?: boolean\r\n    readonly dataRitiro?: string\r\n    readonly giornate?: number\r\n    readonly frequenza?: number\r\n    readonly promosso?: boolean\r\n    readonly firmato?: boolean\r\n}\r\n\r\nexport const isStudent = (obj: any) => {\r\n    try{\r\n        return \"nome\" in obj && \"cognome\" in obj && \"idStudente\" in obj\r\n    }\r\n    catch{\r\n        return false\r\n    }\r\n}\r\n\r\nexport const isAccessStudent = (obj: any) => {\r\n    try{\r\n        return \"nome\" in obj && \"cognome\" in obj && \"idStudente\" in obj && \"password\" in obj && \"idCorso\" in obj && \"annoFrequentazione\" in obj && \"codice\" in obj\r\n    }\r\n    catch{\r\n        return false\r\n    }\r\n}\r\n\r\nexport const areStudent = (obj: any) => {\r\n    try{\r\n        obj.forEach((s: any) => {\r\n            if(!isStudent(s))\r\n                return false\r\n        })\r\n\r\n        return true\r\n    }\r\n    catch{\r\n        return false\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Radio, Icon, Tooltip, Spin } from \"antd\"\r\nimport { mountLogin, unmountLogin, siteUrl, convertFromUTC } from \"../../utilities\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport LogoCorso from \"../LogoCorso\"\r\nimport { IMessage } from \"../../models/IMessage\"\r\nimport { askPassword } from \"../AskConferma\"\r\nimport Axios from \"axios\"\r\nimport { ILezione } from \"../../models/ILezione\"\r\nimport Footer from \"../Footer\"\r\nimport { routerHistory } from \"../..\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly studenti: IStudent[]\r\n    readonly selectedStudente: IStudent\r\n    readonly lezione: ILezione\r\n    readonly noLezione: boolean\r\n}\r\n\r\nexport default class FirmaCasa extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            studenti: null,\r\n            selectedStudente: null,\r\n            lezione: null,\r\n            noLezione: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n        this.caricaLezione()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    inviaFirma = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { selectedStudente, lezione } = this.state\r\n\r\n        if(!selectedStudente){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Selezionare uno studente.\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        askPassword(siteUrl+\"/api/firmaremota/firmaremotastudente\", \"post\", {\r\n            idStudente: selectedStudente.idStudente,\r\n            idLezione: lezione.idLezione\r\n        }, (response: any) => {\r\n            let popup = response.data as IMessage\r\n\r\n            Modal.info({\r\n                title: popup.title,\r\n                content: <div style={{ marginLeft: 38 }}>{popup.message}</div>,\r\n                icon: <i className={\"float-left mr-3 far \"+popup.icon} style={{ color: popup.iconColor, fontSize: 22 }}/>,\r\n                maskClosable: false,\r\n                onOk: () => routerHistory.push(\"/\")\r\n            })\r\n        }, null, \"Inserisci la tua password\")\r\n    }\r\n\r\n    firmaDocente = () => {\r\n        const { lezione, studenti } = this.state\r\n\r\n        Axios.post(siteUrl+\"/api/docenti/richiestacodice\", lezione.idDocente, {\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        }).then(_ => {\r\n            askPassword(siteUrl+\"/api/firmaremota/firmaremotadocente\", \"post\", {\r\n                idDocente: lezione.idDocente,\r\n                idCorso: studenti[0].idCorso,\r\n                anno: studenti[0].annoFrequentazione,\r\n                idLezione: lezione.idLezione\r\n            }, (response: any) => {\r\n                let popup = response.data as IMessage\r\n    \r\n                Modal.info({\r\n                    title: popup.title,\r\n                    content: <div style={{ marginLeft: 38 }}>{popup.message}</div>,\r\n                    icon: <i className={\"float-left mr-3 far \" + popup.icon} style={{ color: popup.iconColor, fontSize: 22 }}/>,\r\n                    maskClosable: false,\r\n                    onOk: () => routerHistory.push(\"/\")\r\n                })\r\n            }, null, \"Inserisci il codice che ti abbiamo inviato per e-mail\")\r\n        })\r\n    }\r\n\r\n    scegliStudente = (s: IStudent) => {\r\n        this.setState({\r\n            selectedStudente: s\r\n        })\r\n    }\r\n\r\n    caricaLezione = () => {\r\n        let studenti = JSON.parse(sessionStorage.getItem(\"confermaCasa\")) as any[],\r\n        temp = studenti[0]\r\n\r\n        Axios.get(siteUrl+\"/api/lezioni/\"+temp.idCorso+\"/\"+temp.annoFrequentazione).then(response => {\r\n            if(typeof(response.data) === \"string\"){\r\n                this.setState({\r\n                    noLezione: true,\r\n                    studenti: studenti as IStudent[]\r\n                })\r\n            }else{\r\n                let lezione = response.data as ILezione\r\n\r\n                studenti.forEach((s, i) => {\r\n                    Axios.get(siteUrl+\"/api/presenze/checkentrata/\" + lezione.idLezione+\"/\"+s.idStudente).then(response => {\r\n                        let firmato = response.data as boolean\r\n        \r\n                        s.firmato = firmato\r\n\r\n                        if(i === studenti.length - 1){\r\n                            this.setState({\r\n                                lezione,\r\n                                studenti: studenti as IStudent[]\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { studenti, selectedStudente, lezione, noLezione } = this.state\r\n\r\n        if(!studenti){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50, color: \"#fff\" }} spin />\r\n\r\n            return <div className=\"col-12 px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        if(!studenti.length){\r\n            return <div className=\"col-11 col-lg-4 mx-auto\" id=\"loginBlock\">\r\n                <div className=\"w-100 bg-white p-3 rounded shadow\">\r\n                    <p className=\"text-muted m-0 text-center\">\r\n                        <i className=\"fa fa-ban fa-fw fa-lg text-danger\"></i> Non è stato trovato nessuno studente.</p>\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100\">\r\n                <div className=\"bg-white p-3 rounded shadow mx-auto mb-3 col-12 col-md-6 pos-lg-fixed\">\r\n                    {\r\n                        lezione || (!lezione && noLezione) ? <div>\r\n                            {\r\n                                !noLezione ? <Tooltip title={lezione.titolo}>\r\n                                    <h5 className=\"mb-0 text-truncate\">{lezione.titolo}</h5>\r\n                                </Tooltip> : <h5 className=\"mb-0 text-truncate\">Non c'è lezione.</h5>\r\n                            }\r\n                            {\r\n                                !noLezione && <small className=\"text-muted\">{convertFromUTC(lezione.oraInizio)} - {convertFromUTC(lezione.oraFine)}</small>\r\n                            }\r\n                            \r\n                            <button type=\"button\" className=\"btn btn-blue w-100 text-uppercase mt-2\" disabled={lezione === null && noLezione} onClick={this.firmaDocente}>\r\n                                {\r\n                                    lezione === null && !noLezione && <Icon type=\"loading\" className=\"mr-2 loadable-btn\" spin />\r\n                                }\r\n\r\n                                Firma docente\r\n                            </button>\r\n                        </div> : <Icon type=\"loading\" spin style={{ fontSize: 23 }} />\r\n                    }\r\n                </div>\r\n\r\n                <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.inviaFirma}>\r\n                    <h3 className=\"d-inline-block\">Firma studente</h3>\r\n                    <LogoCorso idCorso={studenti[0].idCorso} forLogin />\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Scegli lo studente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                studenti.map(s => {            \r\n                                    let checked = selectedStudente === s,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n                                    \r\n                                    return <label className={\"option \"+classname}>\r\n                                        <Radio className=\"mr-2\" onChange={() => this.scegliStudente(s)} checked={checked} /> {s.nome} {s.cognome} {s.firmato && <Tooltip title=\"Devi ancora firmare l'uscita!\">\r\n                                            <i className=\"fa fa-exclamation-circle text-warning float-right\" style={{ transform: \"translateY(25%)\" }}></i>\r\n                                        </Tooltip>}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <input type=\"submit\" disabled={lezione === null && noLezione} value=\"Firma\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n                </form>\r\n\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}","import React from \"react\"\r\nimport CodiceSegreto from \"./CodiceSegreto\"\r\nimport FirmaCasa from \"./FirmaCasa\"\r\n\r\nexport default class DashboardCasa extends React.Component{\r\n\r\n    componentWillUnmount = () => {\r\n        sessionStorage.removeItem(\"confermaCasa\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        let session = sessionStorage.getItem(\"confermaCasa\")\r\n        \r\n        if(!session)\r\n            return <CodiceSegreto />\r\n\r\n        return <FirmaCasa />\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport { mountLogin, unmountLogin, siteUrl, adminRoute, superAdminRoute } from \"../utilities\"\r\nimport { routerHistory } from \"..\"\r\n\r\nexport default class Docs extends React.Component{\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    scrollToIndex = (id: string) => {\r\n        let block = document.getElementById(id)\r\n        \r\n        block.scrollIntoView()\r\n        block.classList.add(\"highlight\")\r\n\r\n        setTimeout(() => {\r\n            block.classList.remove(\"highlight\")\r\n        }, 1000)\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        return <div className=\"col-11 col-lg-8 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100 bg-white p-4 rounded shadow text-justify my-4\">\r\n                <span className=\"link-primary float-right\" onClick={() => routerHistory.push(\"/\")}>\r\n                    <i className=\"far fa-arrow-left fa-fw fa-lg\"></i> Torna al registro\r\n                </span>\r\n\r\n                <div className=\"clearfix\"></div>\r\n\r\n                <h4 className=\"mb-1\">Come funziona il sito?</h4>\r\n                <p>Tramite questa semplice pagina andremo ad elencare le varie pagine del sito, nonché la modalità di accesso ad esse, suddividendo per i ruoli principali.</p>\r\n\r\n                <div className=\"ml-4\">\r\n                    <h6>Indice:</h6>\r\n                    <ul>\r\n                        <li><span className=\"link-primary u-hover\" onClick={() => this.scrollToIndex(\"stuDoc\")}>Studenti e docenti</span></li>\r\n                        <li><span className=\"link-primary u-hover\" onClick={() => this.scrollToIndex(\"tutor\")}>Coordinatori</span></li>\r\n                        <li><span className=\"link-primary u-hover\" onClick={() => this.scrollToIndex(\"admin\")}>Amministratori</span></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"pl-4 p-2 rounded overflow-hidden\" id=\"stuDoc\">\r\n                    <h6>Studenti e Docenti</h6>\r\n                    <p>Gli studenti e i docenti avranno la possibilità di firmare la loro entrata/uscita da una lezione tramite <a href={siteUrl+\"/#/\"} target=\"_blank\" rel=\"noopener noreferrer\">questo</a> URL.</p>\r\n                    <p>Una volta scelti il corso e la classe, l'accesso alla firma è possibile <strong>solamente</strong> tramite un codice segreto, fornito dal coordinatore del corso o, eventualmente, dal docente incaricato della lezione.</p>\r\n                    <p className=\"mb-0\">Tramite <a href={siteUrl+\"/#/firmacasa\"} target=\"_blank\" rel=\"noopener noreferrer\">questo</a> URL è possibile firmare da casa qualora sia necessario farlo. L'accesso alla firma è potretto da un codice segreto che il coordinatore del corso può generare su richiesta. Gli studenti dovranno solamente scegliere il loro nome nella lista, verrà quindi inviata un'e-mail con un codice segreto, da inserire per confermare la propria identità. Il procedimento rimane identico anche per i docenti, con la differenza che quest'ultimi potranno firmare tramite un semplice bottone.</p>\r\n                </div>\r\n\r\n                <div className=\"pl-4 p-2 rounded overflow-hidden\" id=\"tutor\">\r\n                    <h6>Coordinatori</h6>\r\n                    <p className=\"mb-2\">I coordinatori avranno la possibilità di gestire il corso a cui sono stati assegnati. Tramite <a href={siteUrl+\"/#\"+adminRoute} target=\"_blank\" rel=\"noopener noreferrer\">questo</a> URL si può accedere al gestionale, inserendo Username e Password ricevuti via e-mail dall'amministratore.</p>\r\n                    <p className=\"mb-2\">\r\n                        Grazie al gestionale, è possibile gestire le seguenti attività:\r\n                    </p>\r\n\r\n                    <ul>\r\n                        <li>Homepage:</li>\r\n                        <ul>\r\n                            <li className=\"bg-transblue\">Visualizzare il codice d'accesso alla firma del corso.</li>\r\n                            <li>Tenere traccia delle lezioni attualmente in corso nelle classi, con la lista degli studenti presenti.</li>\r\n                        </ul>\r\n                        <li>Studenti:</li>\r\n                        <ul>\r\n                            <li>Creazione e modifica di studenti, specificando i dati anagrafici e la classe di appartenenza.</li>\r\n                            <li>Possibilità di importare una classe tramite CSV, per velocizzare il processo.</li>\r\n                            <li>Possibilità di spostare gli studenti dal primo al secondo anno.</li>\r\n                            <li>Visualizzazione del dettaglio di uno studente, con la lista delle lezioni frequentate da quest'ultimo.</li>\r\n                            <li>Possibilità di modificare l'entrata o l'uscita di uno studente (nel caso in cui sia stato commesso un errore) tramite appositi bottoni nella lista delle lezioni frequentate.</li>\r\n                            <li>Possibilità di ritirare uno studente tramite apposito bottone nella lista degli studenti.</li>\r\n                            <li>Possibilità di archiviare uno studente (nel caso in cui quest'ultimo sia stato promosso) tramite apposito bottone nella lista degli studenti.</li>\r\n                        </ul>\r\n                        <li>Docenti:</li>\r\n                        <ul>\r\n                            <li>Creazione e modifica di docenti, specificando i dati anagrafici, le materie insegnate e i corsi di appartenenza.</li>\r\n                            <li>Visualizzazione del dettaglio di un docente, con la lista delle lezioni tenute da quest'ultimo.</li>\r\n                            <li>Possibilità di modificare l'entrata o l'uscita di un docente (nel caso in cui sia stato commesso un errore) tramite appositi bottoni nella lista delle lezioni tenute.</li>\r\n                            <li>Possibilità di ritirare un docente dal corso tramite apposito bottone nella lista dei docenti, con possibilità di annullare l'azione di ritiro in caso di reintegro nel corso.</li>\r\n                        </ul>\r\n                        <li>Materie:</li>\r\n                        <ul>\r\n                            <li>Creazione e modifica di materie del corso, assegnabili poi ai docenti.</li>\r\n                        </ul>\r\n                        <li>Calendario:</li>\r\n                        <ul>\r\n                            <li>\r\n                                <p>Possibilità di configurare il calendario delle classi del corso, caricando così le lezioni nel database del registro.</p>\r\n\r\n                                <p className=\"bg-transblue\">Gli eventi del calendario dovranno <strong>obbligatoriamente</strong> essere scritti nel seguente modo:\r\n                                    <div className=\"text-center\">\r\n                                        <strong>LUOGO: DOCENTE - MATERIA</strong> (esempio: LAB 1 PASCAL: Matteo Mascellani - PHP).\r\n                                    </div>\r\n                                </p>\r\n                                \r\n                                <p className=\"mb-0 bg-transblue\"><strong>ATTENZIONE</strong>: prima di configurare il calendario è necessario creare tutte le materie e i docenti citati nel calendario stesso. Ovviamente, è possibile salvare nuovamente il calendario per aggiornare le lezioni nel caso in cui si aggiungano docenti o materie durante l'anno.</p>\r\n                            </li>\r\n                        </ul>\r\n                        <li>Firma da remoto:</li>\r\n                        <ul>\r\n                            <li>\r\n                                <p>Possibilità di abilitare la firma da casa qualora sia necessario.</p>\r\n\r\n                                <p>Tramite <a href={siteUrl+\"/#\"+adminRoute+\"/codicefirma\"} target=\"_blank\" rel=\"noopener noreferrer\">questo</a> URL è possibile creare un codice segreto per identificare la classe scelta. Il codice andrà condiviso con gli studenti, e <u>varrà solamente per il giorno in cui è stato generato</u>.</p>\r\n                                \r\n                                <p>Da <a href={siteUrl+\"/#/firmacasa\"} target=\"_blank\" rel=\"noopener noreferrer\">questo</a> URL gli studenti saranno in grado di inserire il codice creato e, scegliendo il loro nome e cognome, potranno firmare per la lezione programmata.</p>\r\n\r\n                                <p className=\"mb-0\">Il procedimento rimane identico anche per i docenti, con la differenza che quest'ultimi potranno firmare tramite un semplice bottone.</p>\r\n                            </li>\r\n                        </ul>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"pl-4 p-2 rounded overflow-hidden\" id=\"admin\">\r\n                    <h6>Amministratori</h6>\r\n                    <p className=\"mb-2\">Gli amministratori avranno la possibilità di gestire FITSTIC. Tramite <a href={siteUrl+\"/#\"+superAdminRoute} target=\"_blank\" rel=\"noopener noreferrer\">questo</a> URL si può accedere al gestionale, inserendo Username e Password dell'amministratore.</p>\r\n                    <p className=\"mb-2\">\r\n                        Grazie al gestionale, è possibile gestire le seguenti attività:\r\n                    </p>\r\n\r\n                    <ul>\r\n                        <li>Corsi:</li>\r\n                        <ul>\r\n                            <li>Creazione e modifica di corsi (es: Alan Turing, McLuhan, Hopper, ecc.), con possibilità di inserire nome, luogo e logo del corso.</li>\r\n                            <li>Creazione e modifica di coordinatori, che possono essere assegnati ad un determinato corso per gestirlo di conseguenza. \r\n                                <div className=\"bg-transblue\">Al momento della creazione il nuovo coordinatore riceverà un'e-mail con le credenziali per accedere al gestionale, e il codice per confermare l'accesso all'interfaccia della firma (visualizzabile anche nel gestionale dei coordinatori).</div>\r\n                            </li>\r\n                        </ul>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { routerHistory } from \"../..\"\r\nimport { message, Modal } from \"antd\"\r\nimport { mountLogin, unmountLogin, siteUrl, logoUrl, studentRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport Footer from \"../Footer\"\r\nimport { isAccessStudent } from \"../../models/IStudent\"\r\nimport ForgotPassword from \"../ForgotPassword\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly userEmail: string\r\n    readonly userCode: string\r\n    readonly showForgot: boolean\r\n}\r\n\r\nexport default class LoginStudent extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            userEmail: \"\",\r\n            userCode: \"\",\r\n            showForgot: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    changeMail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            userEmail: email\r\n        })\r\n    }\r\n\r\n    changeCode = (event: any) => {\r\n        let code = event.target.value\r\n\r\n        this.setState({\r\n            userCode: code\r\n        })\r\n    }\r\n\r\n    switchForgot = () => {\r\n        this.setState({\r\n            showForgot: !this.state.showForgot\r\n        })\r\n    }\r\n\r\n    tryAccess = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { userEmail, userCode } = this.state\r\n\r\n        let cipher = new Cipher(),\r\n        password = cipher.encode(userCode)\r\n\r\n        Axios.post(siteUrl+\"/api/studenti/loginstudente\", {\r\n            email: userEmail,\r\n            password\r\n        }).then(response => {\r\n            let data = response.data\r\n\r\n            if(isAccessStudent(data)){\r\n                sessionStorage.setItem(\"studentSession\", JSON.stringify(data))\r\n                routerHistory.push(studentRoute)\r\n                message.success(\"Login effettuato con successo!\")\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: response.data,\r\n                    centered: true,\r\n                    maskClosable: true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { userCode, userEmail, showForgot } = this.state\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100\">\r\n                <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.tryAccess}>\r\n                    <h3 className=\"d-inline-block\">Accesso studenti</h3>\r\n                    <img src={logoUrl} height=\"40\" className=\"float-right logo\" alt=\"logo\" />\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={userEmail} onChange={this.changeMail} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Password</label>\r\n                        <input name=\"code\" type=\"password\" className=\"form-control\" value={userCode} onChange={this.changeCode} />\r\n                    </div>\r\n\r\n                    <input type=\"submit\" value=\"Accedi\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n\r\n                    <span className=\"link-blue u-hover d-block mt-3 text-center\" onClick={this.switchForgot}>Hai dimenticato la password?</span>\r\n                </form>\r\n\r\n                <Footer />\r\n\r\n                <ForgotPassword show={showForgot} closeModal={this.switchForgot} forStudent />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}","import React from \"react\"\r\nimport Axios from \"axios\"\r\nimport { Modal, Button, DatePicker, TimePicker } from \"antd\"\r\nimport { validateTime, formatItalian, siteUrl, formattaData } from \"../../utilities\"\r\nimport locale from \"antd/es/date-picker/locale/it_IT\"\r\nimport moment from \"moment\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport { IMessage } from \"../../models/IMessage\"\r\n\r\nexport interface IProps{\r\n    readonly studente: IStudent\r\n    readonly visible: boolean\r\n    readonly annullaAggiunta: () => void\r\n    readonly reloadStage: () => void\r\n}\r\nexport interface IState{\r\n    readonly date: string\r\n    readonly oraInizio: string\r\n    readonly oraFine: string\r\n    readonly argomento: string\r\n    readonly loading: boolean\r\n}\r\n\r\nexport default class AddOreStage extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            date: formatItalian(new Date().toString()),\r\n            oraFine: \"\",\r\n            oraInizio: \"\",\r\n            argomento: \"\",\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    changeData = (data: string) => {\r\n        this.setState({\r\n            date: data\r\n        })\r\n    }\r\n\r\n    changeInizio = (_: any, oraInizio: string) => {\r\n        console.log(oraInizio)\r\n        this.setState({\r\n            oraInizio\r\n        })\r\n    }\r\n\r\n    changeFine = (_: any, oraFine: string) => {\r\n        this.setState({\r\n            oraFine\r\n        })\r\n    }\r\n\r\n    changeArgomento = (e: any) => {\r\n        this.setState({\r\n            argomento: e.target.value\r\n        })\r\n    }\r\n\r\n    toggleLoading = () => {\r\n        this.setState({\r\n            loading: !this.state.loading\r\n        })\r\n    }\r\n\r\n    addStage = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { studente } = this.props,\r\n        { oraFine, oraInizio, argomento, date } = this.state,\r\n        currentDate = new Date(),\r\n        data = date.split(\"-\")\r\n\r\n        if(argomento === \"\" || date === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(data[2] !== currentDate.getFullYear().toString()){\r\n\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Anno non valido. Puoi inserire solo l'anno corrente.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!validateTime(oraFine) || !validateTime(oraInizio)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Orari non validi. (ore:minuti)\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(oraFine === oraInizio){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Gli orari devono essere diversi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        this.toggleLoading()\r\n\r\n        Axios.post(siteUrl+\"/api/studenti/postorestage/\" + studente.idStudente, {\r\n            password: studente.password,\r\n            argomento,\r\n            data: formattaData(date, true),\r\n            oraInizio: new Date(`${data[2]}-${data[1]}-${data[0]} ${oraInizio}`),\r\n            oraFine: new Date(`${data[2]}-${data[1]}-${data[0]} ${oraFine}`),\r\n        }).then(response => {\r\n            let output = response.data as IMessage\r\n\r\n            this.toggleLoading()\r\n\r\n            if(output.type === \"success\")\r\n                this.props.reloadStage()\r\n            else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: output.message\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { date, argomento, loading } = this.state,\r\n        { visible, annullaAggiunta } = this.props\r\n\r\n        return <Modal title=\"Registrazione ore di stage\" visible={visible} footer={[\r\n            <Button type=\"primary\" onClick={this.addStage} loading={loading}>Aggiungi</Button>,\r\n            <Button type=\"default\" onClick={annullaAggiunta}>Annulla</Button>\r\n        ]} onCancel={annullaAggiunta}>\r\n            <form onSubmit={this.addStage}>\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Data</label>\r\n                    <DatePicker locale={locale} className=\"w-100 select-date\" onChange={(_, d2) => this.changeData(d2)} format=\"DD-MM-YYYY\" defaultValue={moment(date, \"DD-MM-YYYY\")} disabled={loading} />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Mansioni svolte</label>\r\n                    <textarea value={argomento} onChange={this.changeArgomento} className=\"form-control\" disabled={loading}></textarea>\r\n                </div>\r\n\r\n                <div className=\"form-group row mx-0\">\r\n                    <div className=\"col pr-1 pl-0\">\r\n                        <label className=\"text-secondary\">Inizio</label>\r\n                        <TimePicker defaultValue={moment(new Date(), 'HH:mm')} format='HH:mm' onChange={this.changeInizio} className=\"w-100 select-date\" minuteStep={10} placeholder=\"Seleziona una data\" />\r\n                    </div>\r\n\r\n                    <div className=\"col pr-0 pl-1\">\r\n                        <label className=\"text-secondary\">Fine</label>\r\n                        <TimePicker defaultValue={moment(new Date(), 'HH:mm')} format='HH:mm' onChange={this.changeFine} className=\"w-100 select-date\" minuteStep={10} placeholder=\"Seleziona una data\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"d-none\" />\r\n            </form>\r\n        </Modal>\r\n    }\r\n}","import React from \"react\"\r\nimport Axios from \"axios\"\r\nimport { Spin, Icon, Progress, Tooltip } from \"antd\"\r\nimport { IStage } from \"../../models/IStage\"\r\nimport { siteUrl, formatItalian, convertFromUTC } from \"../../utilities\"\r\nimport AddOreStage from \"./AddOreStage\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\n\r\nexport interface IProps{\r\n    readonly studente: IStudent\r\n}\r\nexport interface IState{\r\n    readonly oreList: IStage[]\r\n    readonly addNew: boolean\r\n    readonly totaleOre: number\r\n    readonly isActive: boolean\r\n}\r\n\r\nexport default class StageList extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            oreList: null,\r\n            addNew: false,\r\n            totaleOre: 0,\r\n            isActive: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.loadOre()\r\n\r\n        const { studente } = this.props\r\n\r\n        Axios.get(siteUrl+\"/api/corsi/getstagevalue/\"+studente.idCorso+\"/\"+studente.annoFrequentazione).then(response => {\r\n            let isActive = response.data as boolean\r\n\r\n            this.setState({\r\n                isActive\r\n            })\r\n        })\r\n    }\r\n\r\n    loadOre = () => {\r\n        this.setState({\r\n            oreList: null,\r\n            addNew: false\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/getorestage/\"+this.props.studente.idStudente).then(response => {\r\n            let ore = response.data as IStage[],\r\n            totale = 0\r\n\r\n            ore.forEach(o => totale += o.totaleRelativo)\r\n\r\n            this.setState({\r\n                oreList: ore,\r\n                totaleOre: totale\r\n            })\r\n        })\r\n    }\r\n\r\n    toggleAdd = () => {\r\n        this.setState({\r\n            addNew: !this.state.addNew\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { oreList, addNew, totaleOre, isActive } = this.state,\r\n        { studente } = this.props,\r\n        icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n        if(!oreList){\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            \r\n            <div className=\"p-3 bg-white border rounded col-4 mb-3\">\r\n                <strong>Ore svolte</strong>: {totaleOre} su 800 totali\r\n                <Progress percent={Math.floor(((100 * totaleOre / 800) + Number.EPSILON) * 100) / 100} />\r\n            </div>\r\n\r\n            <h3 className=\"d-inline-block\">Ore di stage segnate</h3>\r\n\r\n            {\r\n                isActive  && <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={this.toggleAdd}>\r\n                    <i className=\"fal fa-plus fa-fw\"></i> Aggiungi ore di stage\r\n                </button>\r\n            }\r\n\r\n            {\r\n                isActive === null && <Spin indicator={icon} />\r\n            }\r\n\r\n            <div className=\"clearfix\"></div>\r\n\r\n            {\r\n                !oreList.length ? <div className=\"text-center\">Non hai ancora segnato ore di stage.</div> : <table className=\"table table-bordered text-center\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th style={{width: \"15%\"}}>Data</th>\r\n                            <th style={{width: \"25%\"}}>Descrizione</th>\r\n                            <th>Inizio</th>\r\n                            <th>Fine</th>\r\n                            <th>Ore svolte</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            oreList.map(s => {        \r\n                                return <tr>\r\n                                    <td>{formatItalian(s.data)}</td>\r\n                                    <Tooltip title={s.argomento}>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.argomento}</td>\r\n                                    </Tooltip>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{convertFromUTC(s.oraInizio + \"Z\")}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{convertFromUTC(s.oraFine + \"Z\")}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{s.totaleRelativo}</td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            }\r\n\r\n            <AddOreStage studente={studente} annullaAggiunta={this.toggleAdd} visible={addNew} reloadStage={this.loadOre} />\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport Axios from \"axios\"\r\nimport { Button, Progress, Spin, Icon, Statistic, Tooltip } from \"antd\"\r\nimport QRCode from \"qrcode.react\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport { siteUrl, avocadoUrl } from \"../../utilities\"\r\n\r\nexport interface IProps{\r\n    readonly studente: IStudent\r\n}\r\nexport interface IState{\r\n    readonly oreTotali: number\r\n    readonly totPresenze: number\r\n}\r\n\r\nexport default class Home extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            oreTotali: null,\r\n            totPresenze: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/studenti/gethoursamount/\" + this.props.studente.idStudente).then(response => {\r\n            this.setState({\r\n                totPresenze: response.data as number\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/gettotaleorelezioni/\" + this.props.studente.idStudente).then(response => {\r\n            this.setState({\r\n                oreTotali: response.data as number\r\n            })\r\n        })\r\n    }\r\n\r\n    downloadQR = () => {\r\n        const { studente } = this.props,\r\n        canvas = document.getElementById(\"qr-code-image\") as any,\r\n        pngUrl = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\")\r\n        let downloadLink = document.createElement(\"a\")\r\n\r\n        downloadLink.href = pngUrl\r\n        downloadLink.download = `qrcode${studente.nome}${studente.cognome}.png`\r\n        document.body.appendChild(downloadLink)\r\n        downloadLink.click()\r\n        document.body.removeChild(downloadLink)\r\n    }\r\n\r\n    render = () => {\r\n        const { studente } = this.props,\r\n        { oreTotali, totPresenze } = this.state\r\n\r\n        let perc = Math.round(100 * totPresenze / oreTotali),\r\n        color = perc >= 80 ? \"var(--success)\" : \"var(--danger)\"\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <div className=\"row mx-0\">\r\n                <div className=\"col-12 col-md-4 pl-md-0 mb-2 mb-md-0\">\r\n                    <div className=\"p-3 bg-white border rounded\">\r\n                        <Tooltip title={studente.nome + \" \" + studente.cognome}>\r\n                            <h4 className=\"text-uppercase mb-2 text-truncate\">{studente.nome} {studente.cognome}</h4>\r\n                        </Tooltip>\r\n\r\n                        <div className=\"text-center\">\r\n                            <QRCode id=\"qr-code-image\" value={studente.codice} size={200} imageSettings={{ src: avocadoUrl, height: 50, width: 50, excavate: true }} />\r\n                        </div>\r\n\r\n                        <Button type=\"primary\" className=\"float-right mt-3\" onClick={this.downloadQR}>\r\n                            <i className=\"far fa-arrow-to-bottom mr-2\"></i> Salva codice\r\n                        </Button>\r\n\r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-5 pr-md-0\">\r\n                    <div className=\"p-3 bg-white border rounded\">\r\n                        {\r\n                            perc !== null ? <Progress type=\"circle\" percent={perc} width={80} className=\"float-left mr-3\" strokeColor={color} format={percent => `${percent}%`}  /> : <Spin indicator={<Icon type=\"loading\" spin />} />\r\n                        }\r\n\r\n                        {\r\n                            oreTotali !== null && totPresenze !== null ? <Statistic title=\"Presenze totali (ore)\" value={totPresenze} suffix={\"/ \"+oreTotali} decimalSeparator=\",\" groupSeparator=\".\" /> : <Spin indicator={<Icon type=\"loading\" spin />} />\r\n                        }\r\n\r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"../..\"\r\nimport LogoCorso from \"../LogoCorso\"\r\nimport Page404 from \"../Page404\"\r\nimport { studentRoute } from \"../../utilities\"\r\nimport Footer from \"../Footer\"\r\nimport LoginStudent from \"./LoginStudent\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport StageList from \"./StageList\"\r\nimport Home from \"./Home\"\r\n\r\nexport default class StudentDashboard extends React.Component{\r\n\r\n    componentWillUnmount = () => {\r\n        sessionStorage.removeItem(\"studentSession\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n\r\n        let session = sessionStorage.getItem(\"studentSession\")\r\n        \r\n        if(!session)\r\n            return <LoginStudent />\r\n\r\n        let studente = JSON.parse(session) as IStudent\r\n\r\n        return <div className=\"container-fluid\">\r\n            <Router history={routerHistory}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3 bg-blue p-0 menu\">\r\n                        \r\n                        <LogoCorso idCorso={0} />\r\n\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(studentRoute+\"/home\")} to={studentRoute+\"/home\"}>\r\n                            <span><i className=\"fal fa-home-alt fa-fw mr-1\"></i> Home</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(studentRoute+\"/stage\")} to={studentRoute+\"/stage\"}>\r\n                            <span><i className=\"fal fa-briefcase fa-fw mr-1\"></i> Stage</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => {\r\n                            sessionStorage.removeItem(\"studentSession\")\r\n                            routerHistory.push(studentRoute)\r\n                        }} exact to={studentRoute+\"/login\"}>\r\n                            <span><i className=\"fal fa-power-off fa-fw mr-1\"></i> Esci</span>\r\n                        </NavLink>\r\n\r\n                        <Footer inMenu />\r\n                    </div>\r\n  \r\n                    <Switch>\r\n                        <Route exact path={studentRoute} render={() => {\r\n                            routerHistory.push(studentRoute+\"/home\")\r\n\r\n                            return null\r\n                        }} />\r\n\r\n                        <Route exact path={studentRoute+\"/home\"} render={() => (\r\n                            <Home studente={studente} />\r\n                        )} />\r\n\r\n                        <Route exact path={studentRoute+\"/stage\"} render={() => (\r\n                            <StageList studente={studente} />\r\n                        )} />\r\n\r\n                        <Route render={() => <Page404 goTo={studentRoute} />} />\r\n\r\n                    </Switch>\r\n                        \r\n                </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { createHashHistory } from \"history\"\r\nimport \"./index.scss\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\nimport Main from \"./comp/Main\"\r\nimport { Router, Switch, Route } from \"react-router-dom\"\r\nimport Dashboard from \"./comp/admin/Dashboard\"\r\nimport Page404 from \"./comp/Page404\"\r\nimport moment from \"moment\"\r\nimport \"moment/locale/it\"\r\nimport SuperDashboard from \"./comp/superadmin/SuperDashboard\"\r\nimport { superAdminRoute, adminRoute, studentRoute } from \"./utilities\"\r\nimport DashboardCasa from \"./comp/firmacasa/DashboardCasa\"\r\nimport Docs from \"./comp/Docs\"\r\nimport StudentDashboard from \"./comp/studente/StudentDashboard\"\r\n\r\nmoment.locale(\"it\")\r\n\r\nexport const routerHistory = createHashHistory()\r\n\r\nReactDOM.render(<Router history={routerHistory}>\r\n    <Switch>\r\n        <Route exact path=\"/\" render={() => {\r\n            routerHistory.push(\"/firme/\")\r\n\r\n            return null\r\n        }} />\r\n\r\n        <Route path=\"/firme/\" render={() => (\r\n            <Main />\r\n        )} />\r\n\r\n        <Route path={adminRoute} render={() => (\r\n            <Dashboard />\r\n        )} />\r\n\r\n        <Route path={studentRoute} render={() => (\r\n            <StudentDashboard />\r\n        )} />\r\n\r\n        <Route path={superAdminRoute} render={() => (\r\n            <SuperDashboard />\r\n        )} />\r\n\r\n        <Route path=\"/firmacasa\" render={() => (\r\n            <DashboardCasa />\r\n        )} />\r\n\r\n        <Route exact path=\"/documentazione\" render={() => (\r\n            <Docs />\r\n        )} />\r\n\r\n        <Route render={() => <Page404 goTo=\"/\" />} />\r\n    </Switch>\r\n</Router>, document.getElementById(\"root\"))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}