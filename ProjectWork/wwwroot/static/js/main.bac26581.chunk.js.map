{"version":3,"sources":["utilities.ts","serviceWorker.ts","models/IMessage.ts","comp/Firma.tsx","comp/LessonsCalendar.tsx","comp/SceltaCorso.tsx","comp/SceltaClasse.tsx","comp/LogoCorso.tsx","comp/CodiceAccesso.tsx","comp/Main.tsx","models/Cipher.ts","comp/admin/LoginTutor.tsx","models/IAdmin.ts","comp/AskConferma.tsx","comp/admin/StudentsList.tsx","comp/admin/AddNewStudent.tsx","comp/admin/PresenzeTable.tsx","comp/admin/StudentDetails.tsx","comp/admin/DocentiList.tsx","comp/admin/AddNewDocente.tsx","comp/admin/LezioniDocenteTable.tsx","comp/admin/DocenteDetails.tsx","comp/admin/EditDocente.tsx","comp/admin/EditStudente.tsx","comp/admin/StudentsImport.tsx","comp/admin/MaterieList.tsx","comp/ImageScale.tsx","comp/admin/ConfigForm.tsx","comp/admin/ConfigCalendar.tsx","comp/Page404.tsx","comp/admin/EditCodiceFirma.tsx","comp/admin/Dashboard.tsx","comp/mobile/QRCodeScreen.tsx","comp/mobile/UserCalendar.tsx","comp/mobile/UserApplication.tsx","comp/superadmin/CorsiList.tsx","comp/superadmin/AddNewCorso.tsx","comp/superadmin/LoginAdmin.tsx","comp/superadmin/EditCorso.tsx","comp/superadmin/TutorList.tsx","comp/superadmin/AddNewTutor.tsx","comp/superadmin/EditTutor.tsx","comp/superadmin/SuperDashboard.tsx","comp/firmacasa/CodiceSegreto.tsx","models/IStudent.ts","comp/firmacasa/FirmaCasa.tsx","comp/firmacasa/DashboardCasa.tsx","index.tsx"],"names":["siteUrl","logoUrl","adminRoute","superAdminRoute","Digits2","n","validateTime","time","test","formattaData","d","convert","from","split","date","Date","Number","getFullYear","getMonth","getDate","formatItalian","capitalizeFirst","name","splitStr","capitalizeQuote","toLowerCase","i","length","charAt","toUpperCase","substring","join","mountLogin","document","getElementsByTagName","classList","add","unmountLogin","remove","imageFileToBase64","file","readImageFile","a","Promise","resolve","reject","reader","FileReader","onload","e","base64Img","Buffer","target","result","toString","onerror","readAsArrayBuffer","resizePopup","mainBlock","getElementById","popup","width","clientWidth","style","window","addEventListener","Boolean","location","hostname","match","genericError","title","icon","iconColor","message","Firma","props","maxLength","componentDidMount","id","parseInt","sessionStorage","getItem","Axios","get","then","response","corso","data","setState","changeCode","event","code","value","tryToLog","switchInput","idCorso","anno","axios","post","showMessagePopup","catch","_","disable","input","setAttribute","removeAttribute","focus","setTimeout","state","cambiaCorso","removeItem","routerHistory","push","switchFocus","this","type","spin","className","autoFocus","onChange","onFocus","onBlur","nome","indicator","height","placement","onClick","color","React","PureComponent","LessonsCalendar","classe","calendar","fontSize","plugins","googleCalendarPlugin","dayGridPlugin","events","googleCalendarId","idGoogleCalendar","googleCalendarApiKey","defaultView","fixedWeekCount","firstDay","themeSystem","eventTimeFormat","hour","minute","meridiem","buttonText","today","header","right","locale","eventClick","info","jsEvent","preventDefault","Modal","maskClosable","centered","content","start","getHours","getMinutes","end","extendedProps","SceltaCorso","corsi","componentWillUnmount","chooseCorso","setItem","map","c","SceltaClasse","chooseClasse","Component","LogoCorso","catchNull","logo","forLogin","src","alt","CodiceAccesso","cambiaCodice","codice","cambiaScelta","inviaCodice","trim","error","onSubmit","Main","focusInput","confermaTutor","history","activeClassName","exact","to","path","render","Cipher","maximum","msg","shift","finalMessage","letter","charInt","charCodeAt","newInt","String","fromCharCode","LoginTutor","changeInputName","adminName","changeInputPassword","psw","adminPsw","tryLogin","password","encode","username","obj","isAdmin","JSON","stringify","success","askPassword","url","callType","body","callback","cipher","tutor","parse","confirm","marginLeft","ref","r","okText","cancelText","onOk","idCoordinatore","put","StudentsList","students","showConfirm","student","cognome","d2","format","okType","dataRitiro","studente","ritirato","idStudente","stu","currentList","indexOf","changeSelection","newList","selection","find","s","filter","concat","selectAll","selectionList","checked","annoFrequentazione","showHideModal","confirmModal","moveStudents","select","studenti","allRetired","group","forEach","sortbyId","b","promuoviStudent","Panel","Collapse","TabPane","Tabs","groups","promosso","sort","ritirati","defaultActiveKey","tab","key","g","checkedAll","tabTitle","element","bg","disabled","maxWidth","cf","frequenza","visible","onCancel","bordered","AddNewStudent","changeNome","changeCognome","changeEmail","email","changeData","dataNascita","changeAnnoScolastico","annoS","annoScolastico","changeCF","CF","aggiungiStudente","PresenzeTable","presenze","changeEntrata","idPresenza","entrata","editingList","p","ingresso","changeUscita","uscita","startTimeEdit","animateTds","td1","td2","confirmEdit","presenza","idLezione","output","newPresenze","reloadTotali","getCategorie","categorie","lezione","changeFilter","Option","Select","presences","defaultValue","showSearch","l","presenzaEdit","pre","StudentDetails","params","isNaN","oreTotali","roundToTwo","loadTotali","totPresenze","toggleModal","modal","downloadQR","pngUrl","toDataURL","replace","downloadLink","createElement","href","download","appendChild","click","removeChild","getQRCode","total","Math","round","perc","percent","strokeColor","suffix","decimalSeparator","groupSeparator","footer","size","DocentiList","docenti","switchList","showAll","showDeleteConfirm","docente","context","delete","idDocente","backRetire","doc","isInCorso","docs","transform","monteOre","orePrimo","oreSecondo","AddNewDocente","materie","aggiungiDocente","corsiSel","materieSel","tenere","insegnare","m","idMateria","switchMateria","materiaId","switchCorso","corsoId","f","classname","LezioniDocenteTable","canEdit","editPresenza","DocenteDetails","display","alignItems","justifyContent","EditDocente","modificaDocente","EditStudente","modificaStudente","moment","fields","label","field","StudentsImport","splitCSV","renderOptions","rows","fileContent","changeVarPos","varName","readFile","showImportPreview","readAsText","list","cells","addList","hidePopup","confirmImport","flexDirection","accept","beforeUpload","MaterieList","showModal","nomeMateria","descMateria","hideEditModal","showEditModal","nomeEdit","materiaEdit","materia","descEdit","descrizione","aggiungiMateria","modificaMateria","changeNomeEdit","changeDesc","desc","changeDescEdit","ImageScale","scaleImage","scalable","scaled","coords","firstclass","ConfigForm","calendarId","changeID","saveConfig","IdCalendario","idCalendario","IdCorso","Anno","IdGoogleCalendar","ConfigCalendar","showHelp","top","marginTop","rel","getElementsByClassName","scrollTo","Page404","goTo","EditCodiceFirma","requestCodeChange","Dashboard","session","admin","routeProps","QRCodeScreen","setInterval","reloadCode","studentId","UserCalendar","UserApplication","localStorage","CorsiList","luogo","AddNewCorso","changeLuogo","aggiungiCorso","convertImage","uploadButton","marginBottom","listType","showUploadList","LoginAdmin","isSuperAdmin","EditCorso","modificaCorso","TutorList","t","AddNewTutor","listaCorsi","changeCorso","isExistingCorso","aggiungiTutor","EditTutor","selected","SuperDashboard","CodiceSegreto","changeCodice","headers","isStudent","areStudent","FirmaCasa","inviaFirma","selectedStudente","scegliStudente","DashboardCasa","createHashHistory","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bac26581.chunk.js","sourcesContent":["//export const siteUrl = \"https://localhost:44336\"\r\nexport const siteUrl = \"https://avocadoapi.azurewebsites.net\"\r\nexport const logoUrl = \"fitstic_logo.png\"\r\n\r\nexport const adminRoute = \"/adminpanel\"\r\nexport const superAdminRoute = \"/superpanel\"\r\nexport const docentiRoute = \"/docentipanel\"\r\n\r\nexport const Digits2 = (n: number) => {\r\n    return n < 10 ? \"0\" + n : n\r\n}\r\n\r\nexport const validateTime = (time: string) => {\r\n    return /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])$/.test(time)\r\n}\r\n\r\nexport const formattaData = (d: string, convert?: boolean) => {\r\n    let from = d.split(/[/-]/g),\r\n    date = convert ? new Date(Number(from[2]), Number(from[1]) - 1, Number(from[0])) : new Date(d)\r\n\r\n    return `${date.getFullYear()}-${Digits2(date.getMonth() + 1)}-${Digits2(date.getDate())}`\r\n}\r\n\r\nexport const formatItalian = (d: string) => {\r\n    let date = new Date(d)\r\n\r\n    return `${Digits2(date.getDate())}-${Digits2(date.getMonth() + 1)}-${date.getFullYear()}` \r\n}\r\n\r\nexport const getDateDay = (d: string) => {\r\n    let date = new Date(d)\r\n\r\n    return Digits2(date.getDate()).toString()\r\n}\r\n\r\nexport const getDateMonth = (d: string) => {\r\n    let date = new Date(d)\r\n\r\n    return Digits2(date.getMonth() + 1).toString()\r\n}\r\n\r\nexport const getDateYear = (d: string) => {\r\n    let date = new Date(d)\r\n\r\n    return date.getFullYear().toString()\r\n}\r\n\r\nexport const capitalizeFirst = (name: string) => {\r\n    let splitStr = capitalizeQuote(name.toLowerCase()).split(\" \")\r\n\r\n    for (let i = 0; i < splitStr.length; i++) {\r\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1) \r\n    }\r\n   \r\n    return splitStr.join(\" \")\r\n}\r\n\r\nexport const capitalizeQuote = (name: string) => {\r\n    let splitStr = name.toLowerCase().split(\"'\")\r\n\r\n    for (let i = 0; i < splitStr.length; i++) {\r\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1)\r\n    }\r\n   \r\n    return splitStr.join(\"'\")\r\n}\r\n\r\nexport const mountLogin = () => {\r\n    let body = document.getElementsByTagName(\"body\")[0]\r\n\r\n    body.classList.add(\"login\")\r\n}\r\nexport const unmountLogin = () => {\r\n    let body = document.getElementsByTagName(\"body\")[0]\r\n\r\n    body.classList.remove(\"login\")\r\n}\r\n\r\nexport const imageFileToBase64 = async (file: any) => {\r\n    function readImageFile(file: any){\r\n        return new Promise((resolve, reject) => {\r\n            let reader = new FileReader()\r\n        \r\n            reader.onload = e => {\r\n                let base64Img = new Buffer(e.target.result as any, \"binary\").toString(\"base64\"),\r\n                src = \"data:image/png;base64,\" + base64Img\r\n\r\n                resolve(src)\r\n            }\r\n        \r\n            reader.onerror = reject\r\n        \r\n            reader.readAsArrayBuffer(file)\r\n        })     \r\n    }\r\n\r\n    return readImageFile(file)\r\n}\r\n\r\nexport const resizePopup = () => {\r\n    let mainBlock = document.getElementById(\"mainBlock\"),\r\n    popup = document.getElementById(\"popup\"),\r\n    width = mainBlock ? mainBlock.clientWidth : 0\r\n\r\n    if(mainBlock && popup)\r\n        popup.style.width = width + \"px\"\r\n}\r\n\r\nwindow.addEventListener(\"load\", resizePopup)\r\nwindow.addEventListener(\"resize\", resizePopup)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export interface IMessage{\r\n    readonly title: string\r\n    readonly icon: string\r\n    readonly iconColor: string\r\n    readonly message: string\r\n    readonly time: number\r\n}\r\n\r\nexport const genericError = {\r\n    title: \"Ops!\",\r\n    icon: \"fa-times-circle\",\r\n    iconColor: \"#de1e30\",\r\n    message: \"È stato riscontrato un errore durante l'accesso.\",\r\n    time: 3000\r\n}","import React from \"react\"\r\nimport axios from \"axios\"\r\nimport { IMessage, genericError } from \"../models/IMessage\"\r\nimport { siteUrl, resizePopup } from \"../utilities\"\r\nimport { routerHistory } from \"..\"\r\nimport { Divider, Tooltip, Spin, Icon } from \"antd\"\r\nimport { ICorso } from \"../models/ICorso\"\r\nimport Axios from \"axios\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly code: string\r\n    readonly popup: IMessage\r\n    readonly corso: ICorso\r\n    readonly focus: boolean\r\n}\r\n\r\nexport default class Firma extends React.PureComponent<IProps, IState>{\r\n    maxLength = 16\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            code: \"\",\r\n            popup: genericError,\r\n            corso: null,\r\n            focus: false\r\n        }\r\n    }\r\n    \r\n    componentDidMount = () => {\r\n        let id = parseInt(sessionStorage.getItem(\"corso\"))\r\n\r\n        Axios.get(siteUrl+\"/api/corsi/\"+id).then(response => {\r\n            let corso = response.data as ICorso\r\n\r\n            this.setState({\r\n                corso: corso\r\n            })\r\n        })\r\n\r\n        resizePopup()\r\n    }\r\n\r\n    changeCode = (event: any) => {\r\n        let code = event.target.value\r\n\r\n        this.setState({\r\n            code: code\r\n        })\r\n\r\n        this.tryToLog(code)\r\n    }\r\n\r\n    tryToLog = (code: string) => {\r\n        if(code.length < this.maxLength) return false\r\n\r\n        this.switchInput(true)\r\n\r\n        let idCorso = parseInt(sessionStorage.getItem(\"corso\")),\r\n        anno = parseInt(sessionStorage.getItem(\"classe\"))\r\n        \r\n        axios.post(siteUrl + \"/api/firma\", {\r\n            code: code,\r\n            idCorso: idCorso,\r\n            anno: anno\r\n        }).then((response) => {\r\n            this.setState({\r\n                popup: response.data as IMessage\r\n            })\r\n\r\n            this.showMessagePopup()\r\n        }).catch((_) => {\r\n            this.setState({\r\n                popup: genericError\r\n            })\r\n\r\n            this.showMessagePopup()\r\n        })\r\n    }\r\n\r\n    switchInput = (disable: boolean) => {\r\n        let input = document.getElementById(\"mainInput\") as HTMLInputElement\r\n\r\n        if(!input) return\r\n\r\n        if(disable)\r\n            input.setAttribute(\"disabled\", \"disabled\")\r\n        else{\r\n            input.value = \"\"\r\n            input.removeAttribute(\"disabled\")\r\n            input.focus()\r\n        }\r\n    }\r\n\r\n    showMessagePopup = () => {\r\n        let popup = document.getElementById(\"popup\")\r\n\r\n        if(!popup) return\r\n\r\n        popup.classList.add(\"show\")\r\n\r\n        setTimeout(() => {\r\n            popup.classList.remove(\"show\")\r\n            this.switchInput(false)\r\n        }, this.state.popup.time)\r\n    }\r\n\r\n    cambiaCorso = () => {\r\n        sessionStorage.removeItem(\"corso\")\r\n        sessionStorage.removeItem(\"classe\")\r\n        sessionStorage.removeItem(\"confermaTutor\")\r\n\r\n        routerHistory.push(\"/\")\r\n    }\r\n\r\n    switchFocus = () => {\r\n        this.setState({\r\n            focus: !this.state.focus\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { popup, corso, focus } = this.state\r\n        let icon = <Icon type=\"loading\" spin />\r\n\r\n        return <div className=\"col\" id=\"mainBlock\">\r\n            <div className=\"text-center w-100\">\r\n                <h2 className=\"mb-1 font-weight-normal\">Scannerizza il codice</h2>\r\n                <input autoFocus type=\"password\" value={this.state.code} onChange={this.changeCode} maxLength={this.maxLength} id=\"mainInput\" onFocus={this.switchFocus} onBlur={this.switchFocus}/>\r\n\r\n                <Icon type=\"scan\" className=\"fa-9x d-block text-blue\" />\r\n\r\n                {/* <input autoFocus type=\"password\" className=\"form-control text-center mx-auto shadow-sm font-weight-normal\" value={this.state.code} onChange={this.changeCode} maxLength={this.maxLength} id=\"mainInput\" /> */}\r\n\r\n                {\r\n                    !focus ? <div className=\"text-danger text-center mt-2\">Clicca sulla pagina per ristabilire il focus e firmare.</div>  : \"\"\r\n                }\r\n\r\n                <div className=\"top-info\">\r\n                    {\r\n                        corso ? corso.nome : <Spin indicator={icon} />\r\n                    }\r\n                        <Divider type=\"vertical\" style={{ height: 20 }} />\r\n                    {\r\n                        parseInt(sessionStorage.getItem(\"classe\")) === 1 ? \"Primo anno\" : \"Secondo anno\"\r\n                    }\r\n                        <Divider type=\"vertical\" style={{ height: 20 }} />\r\n                    <Tooltip placement=\"bottomRight\" title=\"Cambia il corso o la classe per firmare\">\r\n                        <button type=\"button\" className=\"btn btn-sm btn-blue\" onClick={this.cambiaCorso}>\r\n                            <i className=\"far fa-repeat-alt fa-fw mr-1\"></i>\r\n                            Cambia\r\n                        </button>\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"popup\">\r\n                <div className=\"w-100\">\r\n                    <i className={\"fal fa-fw fa-lg fa-6x \" + popup.icon} style={{ color: popup.iconColor}}></i>\r\n                    <h2 className=\"mt-5\">{popup.title}</h2>\r\n                    <div className=\"mt-2\">{popup.message}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport FullCalendar from \"@fullcalendar/react\"\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\"\r\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\"\r\nimport { Digits2, siteUrl } from \"../utilities\"\r\nimport { Modal, Icon, Spin } from \"antd\"\r\nimport { ICalendar } from \"../models/ICalendar\"\r\nimport Axios from \"axios\"\r\n\r\nimport \"@fullcalendar/core/main.css\"\r\nimport \"@fullcalendar/timegrid/main.css\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly calendar: ICalendar\r\n}\r\n\r\nexport default class LessonsCalendar extends React.PureComponent<IProps, IState> {\r\n    constructor(props: IProps){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            calendar: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let idCorso = parseInt(sessionStorage.getItem(\"corso\")),\r\n        classe = parseInt(sessionStorage.getItem(\"classe\"))\r\n        \r\n        Axios.get(siteUrl+\"/api/calendari/\"+idCorso+\"/\"+classe).then(response => {\r\n            let calendar = response.data as ICalendar\r\n\r\n            this.setState({\r\n                calendar: calendar\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { calendar } = this.state\r\n    \r\n        if(!calendar){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-3\" id=\"mainBlock\">\r\n            \r\n            <FullCalendar\r\n                plugins={[ googleCalendarPlugin, dayGridPlugin ]}\r\n                events={ { googleCalendarId: calendar.idGoogleCalendar} }\r\n                googleCalendarApiKey={\"AIzaSyCEEaAbHOYhofQs-iLdHd_J8-KyD_IlRbE\"}\r\n                defaultView=\"dayGridMonth\"\r\n                fixedWeekCount={false}\r\n                firstDay={1}\r\n                themeSystem={\"bootstrap\"}\r\n                eventTimeFormat={{\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                    meridiem: false\r\n                }}\r\n                buttonText={{\r\n                    today: \"Mese corrente\"\r\n                }}\r\n                header={{\r\n                    right: \"prev, next\"\r\n                }}\r\n                locale={\"it\"}\r\n                eventClick={\r\n                    function(info){\r\n                        info.jsEvent.preventDefault()\r\n                        let event = info.event\r\n                        \r\n                        Modal.info({\r\n                            maskClosable: true,\r\n                            centered: true,\r\n                            icon: null,\r\n                            title: event.title,\r\n                            content: <div className=\"mt-3\" style={{ fontSize: 20 }}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-3 pr-0\">\r\n                                        <span className=\"label\">Inizio</span>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <span className=\"desc\">\r\n                                            { Digits2(event.start.getHours()) }:{ Digits2(event.start.getMinutes()) }\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-3 pr-0\">\r\n                                        <span className=\"label\">Fine</span>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <span className=\"desc\">\r\n                                            { Digits2(event.end.getHours()) }:{ Digits2(event.end.getMinutes()) }\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                {  \r\n                                    event.extendedProps.location && <div className=\"row\">\r\n                                        <div className=\"col-3 pr-0\">\r\n                                            <span className=\"label\">Luogo</span>\r\n                                        </div>\r\n                                        <div className=\"col-9\" style={{ fontSize: 15 }}>\r\n                                            {event.extendedProps.location}\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        })\r\n                    }\r\n                }\r\n            />\r\n        </div>\r\n    }\r\n  \r\n  }","import React from \"react\"\r\nimport { siteUrl, mountLogin, unmountLogin } from \"../utilities\"\r\nimport { ICorso } from \"../models/ICorso\"\r\nimport Axios from \"axios\"\r\nimport { Spin, Icon } from \"antd\"\r\nimport { routerHistory } from \"..\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly corsi: ICorso[]\r\n}\r\n\r\nexport default class SceltaCorso extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            corsi: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                corsi: corsi\r\n            })\r\n        })\r\n\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    chooseCorso = (id: number) => {\r\n        sessionStorage.setItem(\"corso\", id.toString())\r\n        routerHistory.push(\"/\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { corsi } = this.state\r\n\r\n        if(!corsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50, color: \"#fff\" }} spin />\r\n\r\n            return <div className=\"col-12 px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100 bg-white py-3 rounded shadow\">\r\n                <h3 className=\"text-center\">Scegli il corso</h3>\r\n\r\n                {\r\n                    corsi.map(c => {\r\n                        return <div className=\"py-2 text-center pointer corso-item\" onClick={() => this.chooseCorso(c.idCorso)}>\r\n                            {/* <img src={c.logo} alt=\"logo\" height=\"28\" className=\"mr-2\" /> */}\r\n                            <span className=\"align-middle\">{c.nome}</span>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}","import React from \"react\"\r\nimport { mountLogin, unmountLogin } from \"../utilities\"\r\nimport { routerHistory } from \"..\"\r\n\r\nexport default class SceltaClasse extends React.Component{\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    chooseClasse = (id: number) => {\r\n        sessionStorage.setItem(\"classe\", id.toString())\r\n        routerHistory.push(\"/\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100 bg-white py-3 rounded shadow\">\r\n                <h3 className=\"text-center\">Scegli la classe</h3>\r\n\r\n                <div className=\"py-2 text-center pointer corso-item\" onClick={() => this.chooseClasse(1)}>\r\n                    Primo anno\r\n                </div>\r\n                <div className=\"py-2 text-center pointer corso-item\" onClick={() => this.chooseClasse(2)}>\r\n                    Secondo anno\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}","import React from \"react\"\r\nimport { Icon, Spin } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, logoUrl } from \"../utilities\"\r\nimport { ICorso } from \"../models/ICorso\"\r\n\r\nexport interface IProps{\r\n    readonly idCorso?: string | number\r\n    readonly forLogin?: boolean\r\n}\r\nexport interface IState{\r\n    readonly logo: string\r\n}\r\n\r\nexport default class LogoCorso extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            logo: null\r\n        }\r\n    }\r\n\r\n    catchNull = () => {\r\n        this.setState({\r\n            logo: logoUrl\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.idCorso){\r\n            this.catchNull()\r\n            return\r\n        }\r\n        \r\n        Axios.get(siteUrl+\"/api/corsi/\"+this.props.idCorso).then(response => {\r\n            let corso = response.data as ICorso\r\n\r\n            if(!corso.logo){\r\n                this.catchNull()\r\n                return\r\n            }\r\n\r\n            this.setState({\r\n                logo: corso.logo\r\n            })\r\n        }).catch(_ =>{\r\n            this.catchNull()\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { logo } = this.state\r\n        \r\n        if(!logo){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50, color: \"#fff\" }} spin />\r\n\r\n            return <div className=\"text-center py-4\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        if(this.props.forLogin){\r\n            return <img src={logo} height=\"40\" className=\"float-right logo\" alt=\"logo\" />\r\n        }else{\r\n            return <div className=\"logo-block px-3 py-4\">\r\n                <img src={logo} height=\"100\" className=\"mx-auto d-block logo\" alt=\"logo\" />\r\n            </div>\r\n        }\r\n    }\r\n}","import React from \"react\"\r\nimport { mountLogin, unmountLogin, siteUrl } from \"../utilities\"\r\nimport { routerHistory } from \"..\"\r\nimport Axios from \"axios\"\r\nimport { Modal } from \"antd\"\r\n\r\nexport interface IProps{\r\n    readonly idCorso: number\r\n}\r\nexport interface IState{\r\n    readonly codice: string\r\n}\r\nexport default class CodiceAccesso extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            codice: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    cambiaCodice = (e: any) => {\r\n        let codice = e.target.value\r\n\r\n        this.setState({\r\n            codice: codice\r\n        })\r\n    }\r\n\r\n    cambiaScelta = () => {\r\n        sessionStorage.removeItem(\"corso\")\r\n        sessionStorage.removeItem(\"classe\")\r\n\r\n        routerHistory.push(\"/\")\r\n    }\r\n\r\n    inviaCodice = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        Axios.post(siteUrl+\"/api/firma/accedi\", {\r\n            idCorso: this.props.idCorso,\r\n            codice: this.state.codice\r\n        }).then(response => {\r\n\r\n            if(response.data.trim() === \"success\"){\r\n                sessionStorage.setItem(\"confermaTutor\", \"true\")\r\n                routerHistory.push(\"/\")\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Codice non valido.\"\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.inviaCodice}>\r\n                <h3 className=\"text-center\">Conferma del coordinatore</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Codice di conferma</label>\r\n                    <input name=\"codice\" type=\"password\" className=\"form-control\" value={this.state.codice} onChange={this.cambiaCodice} />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"pr-1 col-6\">\r\n                        <input type=\"button\" value=\"Annulla scelta\" className=\"btn btn-lg btn-link text-danger w-100 text-uppercase\" onClick={this.cambiaScelta} />\r\n                    </div>\r\n                    <div className=\"pl-1 col\">\r\n                        <input type=\"submit\" value=\"Prosegui\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"..\"\r\nimport Firma from \"./Firma\"\r\nimport LessonsCalendar from \"./LessonsCalendar\"\r\nimport SceltaCorso from \"./SceltaCorso\"\r\nimport SceltaClasse from \"./SceltaClasse\"\r\nimport LogoCorso from \"./LogoCorso\"\r\nimport CodiceAccesso from \"./CodiceAccesso\"\r\n\r\nexport default class Main extends React.Component{\r\n\r\n    focusInput = () => {\r\n        let input = document.getElementById(\"mainInput\") as HTMLInputElement\r\n\r\n        if(input)\r\n            input.focus()\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        let idCorso = sessionStorage.getItem(\"corso\"),\r\n        classe = sessionStorage.getItem(\"classe\"),\r\n        confermaTutor = sessionStorage.getItem(\"confermaTutor\")\r\n\r\n        if(!idCorso)\r\n            return <SceltaCorso />\r\n\r\n        if(!classe)\r\n            return <SceltaClasse />\r\n\r\n        if(!confermaTutor)\r\n            return <CodiceAccesso idCorso={parseInt(idCorso)} />\r\n\r\n        return <div className=\"container-fluid\" onClick={this.focusInput}>\r\n\r\n            <Router history={routerHistory}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3 bg-blue p-0 menu\">\r\n                        \r\n                        <LogoCorso idCorso={sessionStorage.getItem(\"corso\")} />\r\n\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/\")} exact to=\"/firme/\">\r\n                            <span><i className=\"fal fa-home-alt fa-fw mr-1\"></i> Home</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/calendar\")} exact to=\"/firme/calendar\">\r\n                            <span><i className=\"fal fa-calendar-alt fa-fw mr-1\"></i> Calendario</span>\r\n                        </NavLink>\r\n                    </div>\r\n\r\n                    <Switch>\r\n                        <Route exact path=\"/firme/\" render={() => (\r\n                            <Firma />\r\n                        )} />\r\n\r\n                        <Route exact path=\"/firme/calendar\" render={() => (\r\n                            <LessonsCalendar />\r\n                        )} />\r\n                    </Switch>\r\n                        \r\n                </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}","export class Cipher{\r\n    private maximum = 65535\r\n\r\n    public encode(msg: string, shift: number = -4){\r\n        let finalMessage = \"\"\r\n    \r\n        if(shift < 0)\r\n            shift = -shift\r\n    \r\n        for(let i = 0; i < msg.length; i++){\r\n            let letter = msg[i],\r\n            charInt = letter.charCodeAt(0),\r\n            newInt = charInt + shift\r\n\r\n            if(newInt > this.maximum)\r\n                newInt = newInt - (this.maximum + 1)\r\n\r\n            letter = String.fromCharCode(newInt)\r\n\r\n            finalMessage += letter\r\n        }\r\n        \r\n        return finalMessage\r\n    }\r\n\r\n    public decode(msg: string, shift: number = -4){\r\n        let finalMessage = \"\"\r\n    \r\n        if(shift < 0)\r\n            shift = -shift\r\n    \r\n        for(let i = 0; i < msg.length; i++){\r\n            let letter = msg[i],\r\n            charInt = letter.charCodeAt(0),\r\n            newInt = charInt - shift\r\n\r\n            if(newInt < 0)\r\n                newInt = this.maximum + (newInt + 1)\r\n\r\n            letter = String.fromCharCode(newInt)\r\n\r\n            finalMessage += letter\r\n        }\r\n        \r\n        return finalMessage\r\n    }\r\n}","import React from \"react\"\r\nimport { routerHistory } from \"../..\"\r\nimport { message, Modal } from \"antd\"\r\nimport { mountLogin, unmountLogin, siteUrl, logoUrl, adminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\nimport { isAdmin } from \"../../models/IAdmin\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly adminName: string\r\n    readonly adminPsw: string\r\n}\r\n\r\nexport default class LoginTutor extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            adminName: \"\",\r\n            adminPsw: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    changeInputName = (event: any) => {\r\n        let name = event.target.value\r\n\r\n        this.setState({\r\n            adminName: name\r\n        })\r\n    }\r\n\r\n    changeInputPassword = (event: any) => {\r\n        let psw = event.target.value\r\n\r\n        this.setState({\r\n            adminPsw: psw\r\n        })\r\n    }\r\n\r\n    tryLogin = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { adminName, adminPsw } = this.state\r\n        let cipher = new Cipher(),\r\n        password = cipher.encode(adminPsw)\r\n\r\n        Axios.post(siteUrl+\"/api/coordinatori/logincoordinatore\", {\r\n            username: adminName.trim(),\r\n            password: password\r\n        }).then(response => {\r\n            let data = response.data\r\n\r\n            if(isAdmin(data)){\r\n                sessionStorage.setItem(\"adminSession\", JSON.stringify(data))\r\n                routerHistory.push(adminRoute)\r\n                message.success(\"Login effettuato con successo!\")\r\n            }\r\n            else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Username o Password errati!\",\r\n                    centered: true,\r\n                    maskClosable: true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { adminName, adminPsw } = this.state\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.tryLogin}>\r\n                <h3 className=\"d-inline-block\">Accesso coordinatori</h3>\r\n                <img src={logoUrl} height=\"40\" className=\"float-right logo\" alt=\"logo\" />\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Utente di accesso</label>\r\n                    <input name=\"username\" type=\"text\" className=\"form-control\" value={adminName} onChange={this.changeInputName} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Password di accesso</label>\r\n                    <input name=\"password\" type=\"password\" className=\"form-control\" value={adminPsw} onChange={this.changeInputPassword} />\r\n                </div>\r\n\r\n                <input type=\"submit\" value=\"Accedi\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n            </form>\r\n        </div>\r\n    }\r\n\r\n}","export interface IAdmin{\r\n    readonly idCoordinatore: number\r\n    readonly idCorso: number\r\n    readonly nome: string\r\n    readonly cognome: string\r\n}\r\nexport const isAdmin = (obj: any) => {\r\n    try{\r\n        return \"idCorso\" in obj && \"nome\" in obj && \"cognome\" in obj\r\n    }catch{\r\n        return false\r\n    }\r\n}\r\nexport const isSuperAdmin = (obj: any) => {\r\n    try{\r\n        return \"nome\" in obj && \"cognome\" in obj\r\n    }catch{\r\n        return false\r\n    }\r\n}","import React from \"react\"\r\nimport { Cipher } from \"../models/Cipher\"\r\nimport Axios from \"axios\"\r\nimport { Modal } from \"antd\"\r\nimport { IAdmin } from \"../models/IAdmin\"\r\n\r\nexport const askPassword = (url: string, callType: string, body?: any, callback?: any) => {\r\n    let input: HTMLInputElement,\r\n    cipher = new Cipher(),\r\n    tutor = JSON.parse(sessionStorage.getItem(\"adminSession\")) as IAdmin\r\n\r\n    Modal.confirm({\r\n        title: \"Prima di procedere...\",\r\n        content: <div style={{ marginLeft: -38 }}>\r\n            <div className=\"form-group mb-0\">\r\n                <label className=\"text-secondary\">Inserisci la tua password per confermare l'identità</label>\r\n                <input type=\"password\" ref={r => input = r} className=\"form-control\" />\r\n            </div>\r\n        </div>,\r\n        okText: \"Conferma identità\",\r\n        cancelText: \"Annulla\",\r\n        onOk: () => {\r\n            if(callType === \"get\"){\r\n                Axios.get(url).then(callback)\r\n            }else if(callType === \"post\"){\r\n                body.password = cipher.encode(input.value)\r\n                body.idCoordinatore = tutor.idCoordinatore\r\n\r\n                Axios.post(url, body).then(callback)\r\n            }else if(callType === \"put\"){\r\n                body.password = cipher.encode(input.value)\r\n                body.idCoordinatore = tutor.idCoordinatore\r\n\r\n                Axios.put(url, body).then(callback)\r\n            }\r\n        }\r\n    })\r\n}","import React from \"react\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport { routerHistory } from \"../..\"\r\nimport { Modal, Tooltip, Spin, Icon, Checkbox, Collapse, DatePicker, message, Tabs } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, formattaData, adminRoute } from \"../../utilities\"\r\nimport locale from \"antd/es/date-picker/locale/it_IT\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly students: IStudent[]\r\n    readonly selection: IStudent[]\r\n    readonly confirmModal: boolean\r\n}\r\n\r\nexport default class StudentsList extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            students: null,\r\n            selection: [],\r\n            confirmModal: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/studenti/\"+this.props.corso).then((response) => {\r\n            this.setState({\r\n                students: response.data as IStudent[]\r\n            })\r\n        })\r\n    }\r\n\r\n    showConfirm = (student: IStudent) => {\r\n        const { students } = this.state\r\n        let date: string = \"\"\r\n\r\n        Modal.confirm({\r\n            title: `ATTENZIONE: si sta per ritirare uno studente (${student.nome} ${student.cognome})`,\r\n            content: <div style={{ marginLeft: -38 }}>\r\n                <p>I dati identificativi dello studente e le sue frequenze verranno comunque mantenuti.</p>\r\n                <label className=\"text-secondary\">Data di ritiro</label>\r\n                \r\n                <DatePicker locale={locale} className=\"w-100\" onChange={(_, d2) => date = d2} format=\"DD-MM-YYYY\" />\r\n            </div>,\r\n            okText: \"Conferma ritiro\",\r\n            okType: \"danger\",\r\n            cancelText: \"Annulla\",\r\n            onOk: () => {\r\n                if(date === \"\"){\r\n                    Modal.error({\r\n                        title: \"Errore!\",\r\n                        content: \"Seleziona una data valida.\"\r\n                    })\r\n\r\n                    return true\r\n                }\r\n\r\n                let dataRitiro = formattaData(date, true),\r\n                studente = student as any\r\n                studente.ritirato = \"true\"\r\n                studente.dataRitiro = dataRitiro\r\n                \r\n                this.setState({\r\n                    students: null\r\n                })\r\n                \r\n                Axios.put(siteUrl+\"/api/studenti/\"+student.idStudente, {...studente}).then(response => {\r\n\r\n                    let stu = response.data as IStudent,\r\n                    currentList = students as any,\r\n                    editingStudent = students.indexOf(student)\r\n                    \r\n                    currentList[editingStudent] = stu\r\n\r\n                    this.setState({\r\n                        students: currentList as IStudent[]\r\n                    })\r\n\r\n                    message.success(\"Studente ritirato con successo!\")\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    changeSelection = (student: IStudent) => {\r\n        let find = this.state.selection.find(s => s === student),\r\n        newList = find ? this.state.selection.filter(s => s.idStudente !== student.idStudente) : this.state.selection.concat(student)\r\n\r\n        this.setState({\r\n            selection: newList\r\n        })\r\n    }\r\n\r\n    selectAll = (anno: number, event: any) => {\r\n        let selectionList = event.target.checked ? this.state.students.filter(s => s.annoFrequentazione === anno && !s.ritirato) : this.state.selection.filter(s => s.annoFrequentazione !== anno)\r\n\r\n        this.setState({\r\n            selection: selectionList\r\n        })\r\n    }\r\n\r\n    showHideModal = () => {\r\n        if(!this.state.selection.length){\r\n            Modal.info({\r\n                title: \"Attenzione!\",\r\n                content: \"Devi selezionare almeno uno studente.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            confirmModal: !this.state.confirmModal\r\n        })\r\n    }\r\n\r\n    moveStudents = () => {\r\n        let select = document.getElementById(\"moveToClass\") as HTMLSelectElement,\r\n        value = parseInt(select.value),\r\n        studenti = this.state.selection.map(s => {\r\n            let stu = s as any\r\n            stu.idCorso = this.props.corso\r\n            stu.annoFrequentazione = value\r\n\r\n            return stu\r\n        })\r\n\r\n        if(value !== 1 && value !== 2){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"L'anno selezionato non è valido.\"\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            students: null,\r\n            selection: []\r\n        })\r\n\r\n        Axios.put(siteUrl+\"/api/studenti\", studenti).then(response => {\r\n            this.setState({\r\n                students: response.data as IStudent[]\r\n            })\r\n\r\n            message.success(\"Studenti spostati con successo!\")\r\n        })\r\n\r\n\r\n        this.showHideModal()\r\n    }\r\n\r\n    allRetired = (group: IStudent[]) => {\r\n        let allRetired = true\r\n\r\n        group.forEach(s => {\r\n            if(!s.ritirato)\r\n                allRetired = false\r\n        })\r\n\r\n        return !allRetired\r\n    }\r\n\r\n    sortbyId = (a: IStudent, b: IStudent) => { \r\n        if(a.idStudente > b.idStudente)\r\n            return-1\r\n        if(a.idStudente < b.idStudente)\r\n            return 1\r\n\r\n        return 0\r\n    }\r\n\r\n    promuoviStudent = (s: IStudent) => {\r\n        Modal.confirm({\r\n            title: `${s.nome} ${s.cognome}`,\r\n            content: \"Confermi di voler segnare questo studente come promosso?\",\r\n            okText: \"Conferma\",\r\n            okType: \"primary\",\r\n            cancelText: \"Annulla\",\r\n            onOk: () => {\r\n                this.setState({\r\n                    students: null\r\n                })\r\n\r\n                askPassword(siteUrl+\"/api/studenti/promuovistudente\", \"post\", {\r\n                    idStudente: s.idStudente\r\n                }, (response: any) => {\r\n                    let studenti = response.data as IStudent[]\r\n        \r\n                    this.setState({\r\n                        students: studenti\r\n                    })\r\n        \r\n                    message.success(\"Studente promosso con successo!\")\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { students, selection } = this.state,\r\n        { Panel } = Collapse,\r\n        { TabPane } = Tabs\r\n        \r\n        if(!students){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n        \r\n        let firstYear = students.filter(s => s.annoFrequentazione === 1 && !s.promosso).sort(this.sortbyId).sort((a, _) => a.ritirato ? 0 : -1),\r\n        secondYear = students.filter(s => s.annoFrequentazione === 2 && !s.promosso).sort(this.sortbyId).sort((a, _) => a.ritirato ? 0 : -1),\r\n        groups = [firstYear, secondYear],\r\n        ritirati = students.filter(s => s.promosso).sort(this.sortbyId)\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Studenti del corso</h3>\r\n\r\n            <Tabs defaultActiveKey=\"1\">\r\n                <TabPane tab={<span><i className=\"fal fa-user fa-fw mr-1\"></i> Studenti attivi</span>} key=\"1\">\r\n                    <button className=\"btn btn-success float-right\" type=\"button\" onClick={() => routerHistory.push(adminRoute+\"/studenti/new\")}>\r\n                        <i className=\"fal fa-plus\"></i> Aggiungi studente\r\n                    </button>\r\n\r\n                    <button className=\"btn btn-orange float-right mr-2\" type=\"button\" onClick={this.showHideModal}>\r\n                        <i className=\"fa fa-arrows-alt\"></i> Sposta studenti\r\n                    </button>\r\n\r\n                    <button className=\"btn btn-blue float-right mr-2\" type=\"button\" onClick={() => routerHistory.push(adminRoute+\"/studenti/import\")}>\r\n                        <i className=\"fa fa-file-csv\"></i> Importa da CSV\r\n                    </button>\r\n\r\n                    <div className=\"clearfix\"></div>\r\n\r\n                    <Tabs defaultActiveKey=\"0\">\r\n                        \r\n                        {\r\n                            groups.map((g, i) => {\r\n                                if(!g[0])\r\n                                    return false\r\n                                    \r\n                                let checkedAll = this.allRetired(g),\r\n                                tabTitle = g[0].annoFrequentazione === 1 ? \"Primo\" : \"Secondo\"\r\n\r\n                                g.forEach(element => {\r\n                                    if(selection.indexOf(element) === -1 && !element.ritirato)\r\n                                        checkedAll = false\r\n                                })\r\n\r\n                                return <TabPane tab={tabTitle + \" anno\"} key={i.toString()}>\r\n                                    <table className=\"table table-bordered text-center\">\r\n\r\n                                        <tbody className=\"border-top-0\">\r\n                                            <tr>\r\n                                                <th style={{width: \"5%\"}}>\r\n                                                    <Tooltip title=\"Seleziona tutti\">\r\n                                                        <Checkbox onChange={(e) => this.selectAll(g[0].annoFrequentazione, e)} checked={checkedAll} />\r\n                                                    </Tooltip>\r\n                                                </th>\r\n                                                <th>Nome</th>\r\n                                                <th>Cognome</th>\r\n                                                <th>Codice Fiscale</th>\r\n                                                <th style={{width: \"15%\"}}>Frequenza</th>\r\n                                                <th style={{width: \"26%\"}}>Azioni</th>\r\n                                            </tr>\r\n                                \r\n                                            {\r\n                                                g.map(s => {\r\n                                                    let checked = this.state.selection.find(n => n === s) ? true : false,\r\n                                                    bg = s.ritirato ? \"light font-italic\" : \"white\"\r\n                            \r\n                                                    return <tr className={\"bg-\"+bg}>\r\n                                                        <td>\r\n                                                            {\r\n                                                                s.ritirato ? <Checkbox disabled={true} /> : <Checkbox onChange={() => this.changeSelection(s)} checked={checked} />\r\n                                                            }\r\n                                                        </td>\r\n                                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.nome}</td>\r\n                                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cognome}</td>\r\n                                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cf}</td>\r\n                                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.frequenza}%</td>\r\n                                                        \r\n                                                        <td>\r\n                                                            <Tooltip title=\"Dettagli\">\r\n                                                                <button type=\"button\" className=\"btn btn-info circle-btn\" onClick={() => routerHistory.push(adminRoute+\"/studenti/\" + s.idStudente)}>\r\n                                                                    <i className=\"fa fa-info\"></i>\r\n                                                                </button>\r\n                                                            </Tooltip>\r\n                                                            \r\n                                                            {\r\n                                                                !s.ritirato && <Tooltip title=\"Modifica\">\r\n                                                                    <button type=\"button\" className=\"btn btn-warning text-white circle-btn ml-2\" onClick={() => routerHistory.push(adminRoute+\"/studenti/edit/\" + s.idStudente)}>\r\n                                                                        <i className=\"fa fa-pen\"></i>\r\n                                                                    </button>\r\n                                                                </Tooltip>\r\n                                                            }\r\n                                                            {\r\n                                                                !s.ritirato && <Tooltip title=\"Segna come ritirato\">\r\n                                                                    <button type=\"button\" className=\"btn btn-danger circle-btn ml-2\" onClick={() => this.showConfirm(s)}>\r\n                                                                        <i className=\"fa fa-user-times\"></i>\r\n                                                                    </button>\r\n                                                                </Tooltip>\r\n                                                            }\r\n\r\n                                                            {\r\n                                                                s.ritirato && <Tooltip title=\"Studente ritirato\">\r\n                                                                    <button type=\"button\" className=\"circle-btn ml-2 border-0\">\r\n                                                                        <i className=\"fa fa-user-slash\"></i>\r\n                                                                    </button>\r\n                                                                </Tooltip>\r\n                                                            }\r\n                                                            \r\n                                                            <Tooltip title=\"Segna come promosso\">\r\n                                                                <button type=\"button\" className=\"btn btn-success circle-btn ml-2\" onClick={() => this.promuoviStudent(s)}>\r\n                                                                    <i className=\"fa fa-user-check\"></i>\r\n                                                                </button>\r\n                                                            </Tooltip>\r\n                                                            \r\n                                                        </td>\r\n                                                    </tr>\r\n                                                })\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </TabPane>\r\n                            })\r\n                        }\r\n                    </Tabs>\r\n                </TabPane>\r\n\r\n                <TabPane  tab={<span><i className=\"fal fa-user-graduate fa-fw mr-1\"></i> Studenti archiviati</span>} key=\"2\">\r\n                    <table className=\"table table-bordered text-center\">\r\n                        <tbody className=\"border-top-0\">\r\n\r\n                            <tr>\r\n                                <th><i className=\"fa fa-check-circle fa-lg text-success\"></i></th>\r\n                                <th>Nome</th>\r\n                                <th>Cognome</th>\r\n                                <th>Codice Fiscale</th>\r\n                                <th style={{width: \"15%\"}}>Frequenza</th>\r\n                                <th style={{width: \"20%\"}}>Azioni</th>\r\n                            </tr>\r\n                            \r\n                            {\r\n                                ritirati.map(s => {\r\n\r\n                                    return <tr>\r\n                                        <td><i className=\"fa fa-check-circle fa-lg text-success\"></i></td>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.nome}</td>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cognome}</td>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cf}</td>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.frequenza}%</td>\r\n                                        \r\n                                        <td>\r\n                                            <Tooltip title=\"Dettagli\">\r\n                                                <button type=\"button\" className=\"btn btn-info circle-btn\" onClick={() => routerHistory.push(adminRoute+\"/studenti/\" + s.idStudente)}>\r\n                                                    <i className=\"fa fa-info\"></i>\r\n                                                </button>\r\n                                            </Tooltip>                                            \r\n                                        </td>\r\n                                    </tr>\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </TabPane>\r\n            </Tabs>\r\n\r\n            <Modal title=\"Sposta studenti\" visible={this.state.confirmModal} onCancel={this.showHideModal} cancelText=\"Annulla\" okText=\"Conferma\" onOk={this.moveStudents}>\r\n                <label className=\"text-secondary\">Scegliere l'anno in cui spostare gli studenti</label>\r\n                <select className=\"custom-select\" id=\"moveToClass\">\r\n                    <option value=\"1\">Primo anno</option>\r\n                    <option value=\"2\">Secondo anno</option>\r\n                </select>\r\n\r\n                <Collapse bordered={false}>\r\n                    <Panel header=\"Mostra studenti selezionati\" key={1}>\r\n                        { \r\n                            selection.map(s => {\r\n                                return <span className=\"d-block\">\r\n                                    <strong>{s.nome} {s.cognome}</strong> ({s.annoFrequentazione}° anno)\r\n                                </span>\r\n                            })\r\n                        }\r\n                    </Panel>\r\n                </Collapse>\r\n            </Modal>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, message, DatePicker } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, formattaData, adminRoute } from \"../../utilities\"\r\nimport locale from \"antd/es/date-picker/locale/it_IT\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly dataNascita: string\r\n    readonly cf: string\r\n    readonly email: string\r\n    readonly annoScolastico: number\r\n}\r\n\r\nexport default class AddNewStudent extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            cf: \"\",\r\n            annoScolastico: 1,\r\n            email: \"\",\r\n            dataNascita: \"\"\r\n        }\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n    \r\n    changeData = (data: string) => {\r\n        this.setState({\r\n            dataNascita: data\r\n        })\r\n    }\r\n\r\n    changeAnnoScolastico = (event: any) => {\r\n        let annoS = event.target.value\r\n\r\n        this.setState({\r\n            annoScolastico: Number(annoS)\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let CF = event.target.value.trim()\r\n\r\n        this.setState({\r\n            cf: CF\r\n        })\r\n    }\r\n\r\n    aggiungiStudente = () => {\r\n        const { nome, cognome, dataNascita, cf, annoScolastico, email } = this.state\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || dataNascita === \"\" || cf === \"\" || !annoScolastico || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(cf.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        let students = [{\r\n            nome: nome.trim(),\r\n            cognome: cognome.trim(),\r\n            cf: cf,\r\n            password: cf,\r\n            email: email,\r\n            annoFrequentazione: annoScolastico,\r\n            dataNascita: formattaData(dataNascita, true),\r\n            idCorso: this.props.corso\r\n        }]\r\n\r\n        askPassword(siteUrl+\"/api/studenti\", \"post\", {\r\n            studenti: students\r\n        }, (response: any) => {\r\n            message.success(\"Studente creato con successo!\")\r\n            routerHistory.push(adminRoute+\"/studenti\")\r\n        })\r\n\r\n        // Axios.post(siteUrl+\"/api/studenti\", students).then(response => {\r\n        //     message.success(\"Studente creato con successo!\")\r\n        //     routerHistory.push(adminRoute+\"/studenti\")\r\n        // })\r\n\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, cf, email } = this.state\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Aggiungi un nuovo studente</h3>\r\n\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Anno frequentato</label>\r\n                        <select name=\"anno\" onChange={this.changeAnnoScolastico} className=\"custom-select\">\r\n                            <option value={1}>Primo anno</option>\r\n                            <option value={2}>Secondo anno</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Data di nascita</label>\r\n                        <DatePicker locale={locale} className=\"w-100 select-date\" onChange={(_, d2) => this.changeData(d2)} format=\"DD-MM-YYYY\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={cf} onChange={this.changeCF} />\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.aggiungiStudente}>Aggiungi studente</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { IPresenze } from \"../../models/IPresenze\"\r\nimport { Tooltip, Icon, Spin, Modal, Select } from \"antd\"\r\nimport { siteUrl, formatItalian, validateTime } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\n\r\nexport interface IProps{\r\n    readonly studente: number\r\n    reloadTotali(): void\r\n}\r\nexport interface IState{\r\n    readonly presenze: IPresenze[]\r\n    readonly editingList: IPresenze[]\r\n    readonly filter: string\r\n}\r\n\r\nexport default class PresenzeTable extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            presenze: null,\r\n            editingList: [],\r\n            filter: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/studenti/getdetailedpresences/\"+this.props.studente).then((response) => {\r\n\r\n            let presenze = response.data as IPresenze[]\r\n\r\n            this.setState({\r\n                presenze: presenze\r\n            })\r\n        })\r\n    }\r\n\r\n    changeEntrata = (e: any, idPresenza: number) => {\r\n        let entrata = e.target.value.trim(),\r\n        presenze = this.state.editingList.map(p => {\r\n            if(p.idPresenza === idPresenza)\r\n                p.ingresso = entrata\r\n\r\n            return p\r\n        }) \r\n\r\n        this.setState({\r\n            editingList: presenze\r\n        })\r\n    }\r\n\r\n    changeUscita = (e: any, idPresenza: number) => {\r\n        let uscita = e.target.value.trim(),\r\n        presenze = this.state.editingList.map(p => {\r\n            if(p.idPresenza === idPresenza)\r\n                p.uscita = uscita\r\n\r\n            return p\r\n        }) \r\n\r\n        this.setState({\r\n            editingList: presenze\r\n        })\r\n    }\r\n\r\n    startTimeEdit = (p: IPresenze) => {\r\n        this.setState({\r\n            editingList: this.state.editingList.concat(p)\r\n        })\r\n    }\r\n\r\n    animateTds = (td1: HTMLElement, td2: HTMLElement) => {\r\n        td1.classList.add(\"edited\")\r\n        td2.classList.add(\"edited\")\r\n\r\n        setTimeout(() => {\r\n            td1.classList.remove(\"edited\")\r\n            td2.classList.remove(\"edited\")\r\n        }, 1000)\r\n    }\r\n\r\n    confirmEdit = (id: number, td1: HTMLElement, td2: HTMLElement) => {\r\n        const { presenze, editingList } = this.state,\r\n        presenza = editingList.find(p => p.idPresenza === id)\r\n\r\n        if(!validateTime(presenza.ingresso) || !validateTime(presenza.uscita)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Orari non validi! (ore:minuti:secondi)\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.put(siteUrl+\"/api/presenze/\" + id, {\r\n            idPresenza: presenza.idPresenza,\r\n            idStudente: presenza.idStudente,\r\n            ingresso: presenza.ingresso,\r\n            uscita: presenza.uscita,\r\n            idLezione: presenza.idLezione\r\n        }).then(response => {\r\n            let output = response.data\r\n\r\n            if(output === \"success\"){\r\n                let newPresenze = presenze.map(p => {\r\n                    if(p.idPresenza === id){\r\n                        return presenza\r\n                    }\r\n\r\n                    return p\r\n                })\r\n\r\n                this.setState({\r\n                    presenze: newPresenze,\r\n                    editingList: editingList.filter(p => p.idPresenza !== presenza.idPresenza)\r\n                })\r\n\r\n                this.animateTds(td1, td2)\r\n                this.props.reloadTotali()\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: output\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    getCategorie = () => {\r\n        const { presenze } = this.state \r\n        let categorie: string[] = []\r\n\r\n        presenze.forEach(p => {\r\n            if(categorie.indexOf(p.lezione) === -1)\r\n                categorie.push(p.lezione)\r\n        })\r\n\r\n        return categorie\r\n    }\r\n\r\n    changeFilter = (filter: string) => {\r\n        this.setState({\r\n            filter: filter === \"\" ? null : filter\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { presenze, editingList, filter } = this.state,\r\n        { Option } = Select\r\n\r\n        if(!presenze){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div>\r\n                <Spin indicator={icon} className=\"mt-3\" />\r\n            </div>\r\n        }\r\n\r\n        let presences = filter ? presenze.filter(p => p.lezione.toLowerCase() === filter.toLowerCase()) : presenze\r\n\r\n        return <div className=\"mt-3\">\r\n\r\n            <h3 className=\"d-inline-block\">Presenze dello studente</h3>\r\n\r\n            <div className=\"float-right\">\r\n                <label className=\"d-inline-block text-secondary mr-2\">Filtra per materia: </label>\r\n                <Select defaultValue=\"\" style={{ width: 150 }} onChange={this.changeFilter} showSearch>\r\n                    <Option value=\"\">Nessuna</Option>\r\n                    {\r\n                        this.getCategorie().map(l =>{\r\n                            return <Option value={l}>{l}</Option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            </div>\r\n            \r\n            <div className=\"clearfix\"></div>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Giorno</th>\r\n                        <th>Entrata</th>\r\n                        <th>Uscita</th>\r\n                        <th>Lezione</th>\r\n                        <th>Azioni</th>\r\n                    </tr>\r\n\r\n                    {\r\n                        presences.map(p => {\r\n                            let presenzaEdit = editingList.find(pre => pre.idPresenza === p.idPresenza),\r\n                            td1: HTMLElement,\r\n                            td2: HTMLElement\r\n\r\n                            return <tr>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\">{formatItalian(p.data)}</td>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\" ref={r => td1 = r}>\r\n                                    {\r\n                                        presenzaEdit ? <input type=\"text\" className=\"form-control edit-time\" value={presenzaEdit.ingresso} onChange={(e) => this.changeEntrata(e, p.idPresenza)} /> : <span>{p.ingresso}</span>\r\n                                    }\r\n                                </td>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\" ref={r => td2 = r}>\r\n                                    {\r\n                                        presenzaEdit ? <input type=\"text\" className=\"form-control edit-time\" value={presenzaEdit.uscita} onChange={(e) => this.changeUscita(e, p.idPresenza)} /> : <span>{p.uscita}</span>\r\n                                    }\r\n                                </td>\r\n                                <Tooltip title={p.lezione}>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{p.lezione}</td>\r\n                                </Tooltip>\r\n                                <td>\r\n                                    {\r\n                                        presenzaEdit ? <Tooltip title=\"Conferma modifiche\">\r\n                                            <button type=\"button\" className=\"btn btn-success circle-btn\" onClick={() => this.confirmEdit(p.idPresenza, td1, td2)} >\r\n                                                <i className=\"fa fa-check\"></i>\r\n                                            </button>\r\n                                        </Tooltip> : <Tooltip title=\"Modifica orari\">\r\n                                            <button type=\"button\" className=\"btn btn-orange circle-btn\" onClick={() => this.startTimeEdit(p)}>\r\n                                                <i className=\"fa fa-user-edit\"></i>\r\n                                            </button>\r\n                                        </Tooltip>\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { RouteComponentProps } from \"react-router\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport { routerHistory } from \"../..\"\r\nimport { Icon, Spin, Progress, Statistic, Modal, Button } from \"antd\"\r\nimport PresenzeTable from \"./PresenzeTable\"\r\nimport Axios from \"axios\"\r\nimport { formatItalian, siteUrl, adminRoute } from \"../../utilities\"\r\nimport QRCode from \"qrcode.react\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly student: IStudent\r\n    readonly totPresenze: number\r\n    readonly oreTotali: number\r\n    readonly modal: boolean\r\n}\r\n\r\nexport default class StudentDetails extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            student: null,\r\n            totPresenze: null,\r\n            oreTotali: null,\r\n            modal: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(adminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/getstudentibyid/\" + id).then((response) => {\r\n            this.setState({\r\n                student: response.data as IStudent\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/gettotaleorelezioni/\" + id).then((response) => {\r\n            this.setState({\r\n                oreTotali: this.roundToTwo(response.data as number)\r\n            })\r\n        })\r\n\r\n        this.loadTotali()\r\n    }\r\n\r\n    loadTotali = () => {\r\n        this.setState({\r\n            totPresenze: null\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/gethoursamount/\" + this.props.match.params.id).then((response) => {\r\n            this.setState({\r\n                totPresenze: this.roundToTwo(response.data as number)\r\n            })\r\n        })\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    downloadQR = () => {\r\n        const { student } = this.state,\r\n        canvas = document.getElementById(\"qr-code-image\") as any\r\n        const pngUrl = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\")\r\n        let downloadLink = document.createElement(\"a\")\r\n        downloadLink.href = pngUrl\r\n        downloadLink.download = `qrcode${student.nome}${student.cognome}.png`\r\n        document.body.appendChild(downloadLink)\r\n        downloadLink.click()\r\n        document.body.removeChild(downloadLink)\r\n    }\r\n\r\n    getQRCode = () => {\r\n        const { student } = this.state\r\n\r\n        return student.codice\r\n    }\r\n\r\n    roundToTwo = (total: number) => {    \r\n        return Math.round(total)\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { student, totPresenze, oreTotali, modal } = this.state\r\n        \r\n        if(!student){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        let perc = student.frequenza !== null ? this.roundToTwo(100 * totPresenze / oreTotali) : null,\r\n        color = perc >= 80 ? \"var(--success)\" : \"var(--danger)\"\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <div className=\"row mx-0\">\r\n                <div className=\"col-12 col-md-6 pl-md-0 mb-2 mb-md-0\">\r\n                    <div className=\"p-3 bg-white border rounded\">\r\n                        <span className=\"border-text\">\r\n                            {\r\n                                student.ritirato ? \"Ritirato: \"+student.dataRitiro : student.annoFrequentazione === 1 ? \"Primo anno\" : \"Secondo anno\"\r\n                            }\r\n                        </span>\r\n                        <h4 className=\"text-uppercase mb-2 text-truncate\">{student.nome} {student.cognome}</h4>\r\n                        <p className=\"mb-0\"><strong>Data di nascita</strong>: {formatItalian(student.dataNascita)}</p>\r\n                        <p className=\"mb-0\"><strong>E-mail</strong>: {student.email}</p>\r\n                        <Button onClick={this.toggleModal} className=\"float-right\" type=\"link\">\r\n                            Mostra codice QR\r\n                        </Button>\r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 pr-md-0\">\r\n                    <div className=\"p-3 bg-white border rounded\">\r\n                        {\r\n                            perc !== null ? <Progress type=\"circle\" percent={perc} width={80} className=\"float-left mr-3\" strokeColor={color} format={percent => `${percent}%`}  /> : <Spin indicator={<Icon type=\"loading\" spin />} />\r\n                        }\r\n\r\n                        {\r\n                            oreTotali !== null && totPresenze !== null ? <Statistic title=\"Presenze totali (ore)\" value={totPresenze} suffix={\"/ \"+oreTotali} decimalSeparator=\",\" groupSeparator=\".\" /> : <Spin indicator={<Icon type=\"loading\" spin />} />\r\n                        }\r\n                        \r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <PresenzeTable studente={student.idStudente} reloadTotali={this.loadTotali} />\r\n            \r\n            <Modal visible={modal} maskClosable={true} centered title={\r\n                <span>\r\n                    <i className=\"far fa-qrcode fa-fw fa-lg text-primary mr-2\"></i>Codice QR dello studente\r\n                </span>\r\n            } onCancel={this.toggleModal} width={350} onOk={this.downloadQR}\r\n            footer={[\r\n                <Button type=\"primary\" onClick={this.downloadQR}>\r\n                    <i className=\"far fa-arrow-to-bottom mr-2\"></i> Salva codice\r\n                </Button>,\r\n                <Button type=\"default\" onClick={this.toggleModal}>Chiudi</Button>\r\n            ]}>\r\n                <div className=\"text-center\">\r\n                    <p>Salva il codice sottostante e condividilo con <strong>{student.nome} {student.cognome}.</strong></p>\r\n                    <div className=\"my-2\">\r\n                        <QRCode id=\"qr-code-image\" value={this.getQRCode()} size={200} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { IDocente } from \"../../models/IDocente\"\r\nimport { routerHistory } from \"../..\"\r\nimport { Modal, Tooltip, Spin, Icon, Switch, message } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, adminRoute } from \"../../utilities\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly docenti: IDocente[]\r\n    readonly showAll: boolean\r\n}\r\n\r\nexport default class DocentiList extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            docenti: null,\r\n            showAll: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/docenti\").then((response) => {\r\n            this.setState({\r\n                docenti: response.data as IDocente[]\r\n            })\r\n        })\r\n    }\r\n\r\n    switchList = () => {\r\n        this.setState({\r\n            showAll: !this.state.showAll\r\n        })\r\n    }\r\n\r\n    showDeleteConfirm = (docente: IDocente) => {\r\n        let context = this\r\n\r\n        Modal.confirm({\r\n            title: `ATTENZIONE: si sta per ritirare un docente (${docente.nome} ${docente.cognome})`,\r\n            content: \"I dati identificativi del docente, le lezioni e le presenze verranno comunque mantenuti, ma il docente verrà ritirato da tutti i corsi in cui insegna. In seguito sarà possibile reintegrarlo nel corso se necessario.\",\r\n            okText: \"Confermo\",\r\n            okType: \"danger\",\r\n            cancelText: \"Annulla\",\r\n            onOk: () => {\r\n                context.setState({\r\n                    docenti: null\r\n                })\r\n                \r\n                Axios.delete(siteUrl+\"/api/docenti/\"+docente.idDocente).then(response => {\r\n\r\n                    let docenti = response.data as IDocente[]\r\n\r\n                    context.setState({\r\n                        docenti: docenti\r\n                    })\r\n\r\n                    message.success(\"Docente ritirato con successo!\")\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    sortbyId = (a: IDocente, b: IDocente) => { \r\n        if(a.idDocente > b.idDocente)\r\n            return 1\r\n        if(a.idDocente < b.idDocente)\r\n            return -1\r\n\r\n        return 0\r\n    }\r\n\r\n    backRetire = (doc: IDocente) => {\r\n        let context = this\r\n\r\n        Modal.confirm({\r\n            title: `${doc.nome} ${doc.cognome}`,\r\n            content: \"Questo docente verrà reintegrato all'interno del corso.\",\r\n            okText: \"Confermo\",\r\n            okType: \"danger\",\r\n            cancelText: \"Annulla\",\r\n            onOk: () => {\r\n                context.setState({\r\n                    docenti: null\r\n                })\r\n\r\n                Axios.delete(siteUrl+\"/api/docenti/\"+doc.idDocente).then(response => {\r\n\r\n                    let docenti = response.data as IDocente[]\r\n\r\n                    context.setState({\r\n                        docenti: docenti\r\n                    })\r\n\r\n                    message.success(\"Docente reintegrato con successo!\")\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    isInCorso = (doc: IDocente) => {\r\n        return doc.corsi.indexOf(this.props.corso) !== -1\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { docenti, showAll } = this.state\r\n\r\n        if(!docenti){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        let lista = showAll ? docenti : docenti.filter(d => this.isInCorso(d)),\r\n        docs = lista.sort(this.sortbyId).sort((a, _) => a.ritirato ? 0 : -1)\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Docenti del corso</h3>\r\n\r\n            <label className=\"pointer\" style={{ transform: \"translateY(50%)\" }}>\r\n                <Switch checked={!showAll} onChange={this.switchList} className=\"mr-1 align-top\" /> Mostra solo i docenti del mio corso\r\n            </label>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={() => routerHistory.push(adminRoute+\"/docenti/new\")}>\r\n                <i className=\"fal fa-plus\"></i> Aggiungi docente\r\n            </button>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                \r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th>Cognome</th>\r\n                            <th style={{width: \"15%\"}}>Ore 1° anno</th>\r\n                            <th style={{width: \"15%\"}}>Ore 2° anno</th>\r\n                            <th style={{width: \"20%\"}}>Azioni</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            docs.map(d => {   \r\n                                let bg = d.ritirato ? \"light font-italic\" : !this.isInCorso(d) ? \"transblue\" :\"white\"\r\n\r\n                                return <tr className={\"bg-\"+bg}>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{d.nome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{d.cognome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{d.monteOre.orePrimo}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{d.monteOre.oreSecondo}</td>\r\n                                    <td>\r\n                                        <Tooltip title=\"Dettagli\">\r\n                                            <button type=\"button\" className=\"btn btn-info circle-btn\" onClick={() => routerHistory.push(adminRoute+\"/docenti/\" + d.idDocente)}>\r\n                                                <i className=\"fa fa-info\"></i>\r\n                                            </button>\r\n                                        </Tooltip>\r\n\r\n                                        {\r\n                                            !d.ritirato && <Tooltip title=\"Modifica\">\r\n                                                <button type=\"button\" className=\"btn btn-warning text-white circle-btn ml-2\" onClick={() => routerHistory.push(adminRoute+\"/docenti/edit/\" + d.idDocente)}>\r\n                                                    <i className=\"fa fa-pen\"></i>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            !d.ritirato && <Tooltip title=\"Segna come ritirato\">\r\n                                                <button type=\"button\" className=\"btn btn-danger circle-btn ml-2\" onClick={() => this.showDeleteConfirm(d)}>\r\n                                                    <i className=\"fa fa-user-times\"></i>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                        }\r\n\r\n                                        {\r\n                                            d.ritirato && <Tooltip title=\"Reintegra nel corso\">\r\n                                                <button type=\"button\" className=\"btn btn-danger circle-btn ml-2\" onClick={() => this.backRetire(d)}>\r\n                                                    <i className=\"fa fa-reply\"></i>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, message, Icon, Spin, Checkbox } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, adminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { IMateria } from \"../../models/IMateria\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly CF: string\r\n    readonly email: string\r\n    readonly materie: IMateria[]\r\n    readonly corsi: ICorso[]\r\n    readonly materieSel: number[]\r\n    readonly corsiSel: number[] \r\n}\r\n\r\nexport default class AddNewDocente extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            CF: \"\",\r\n            email: \"\",\r\n            corsi: null,\r\n            materie: null,\r\n            corsiSel: [],\r\n            materieSel: []\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                corsi: corsi\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/materie/getmateriebycorso/\"+this.props.corso).then(response => {\r\n            let materie = response.data as IMateria[]\r\n\r\n            this.setState({\r\n                materie: materie\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let CF = event.target.value.trim()\r\n\r\n        this.setState({\r\n            CF: CF\r\n        })\r\n    }\r\n\r\n    aggiungiDocente = () => {\r\n        const { nome, cognome,CF, email, corsiSel, materieSel } = this.state\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || CF === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(CF.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!materieSel.length){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Scegliere almeno una materia.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!corsiSel.length){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Scegliere almeno un corso.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        let cipher = new Cipher(),\r\n        password = cipher.encode(CF)\r\n\r\n        Axios.post(siteUrl+\"/api/docenti\", {\r\n            nome: nome.trim(),\r\n            cognome: cognome.trim(),\r\n            cf: CF,\r\n            password: password,\r\n            email: email,\r\n            tenere: corsiSel.map(c => { return { idCorso: c, idDocente: 0 } }),\r\n            insegnare: materieSel.map(m => { return { idMateria: m, idDocente: 0 } }),\r\n        }).then(_ => {\r\n            message.success(\"Docente creato con successo!\")\r\n            routerHistory.push(adminRoute+\"/docenti\")\r\n        })\r\n\r\n    }\r\n\r\n    switchMateria = (materiaId: number) => {\r\n        let find = this.state.materieSel.find(m => m === materiaId),\r\n        newList = find ? this.state.materieSel.filter(m => m !== materiaId) : this.state.materieSel.concat(materiaId)\r\n\r\n        this.setState({\r\n            materieSel: newList\r\n        })\r\n    }\r\n\r\n    switchCorso = (corsoId: number) => {\r\n        let find = this.state.corsiSel.find(m => m === corsoId),\r\n        newList = find ? this.state.corsiSel.filter(m => m !== corsoId) : this.state.corsiSel.concat(corsoId)\r\n\r\n        this.setState({\r\n            corsiSel: newList\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, CF, email, materie, materieSel, corsi, corsiSel } = this.state\r\n\r\n        if(!materie || !corsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        if(!materie.length){\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                È necessario creare almeno una materia per poter inserire un nuovo docente.\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Aggiungi un nuovo docente</h3>\r\n\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={CF} onChange={this.changeCF} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Materie insegnate dal docente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                materie.map(m => {\r\n                                    let find = materieSel.find(f => f === m.idMateria),\r\n                                    checked = find ? true : false,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n\r\n                                    return <label className={\"option \" + classname}>\r\n                                        <Checkbox className=\"mr-2\" onChange={() => this.switchMateria(m.idMateria)} checked={checked} /> {m.nome}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Corsi del docente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                corsi.map(m => {\r\n                                    let find = corsiSel.find(f => f === m.idCorso),\r\n                                    checked = find ? true : false,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n\r\n                                    return <label className={\"option \" + classname}>\r\n                                        <Checkbox className=\"mr-2\" onChange={() => this.switchCorso(m.idCorso)} checked={checked} /> {m.nome}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.aggiungiDocente}>Aggiungi docente</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Tooltip, Icon, Spin, Modal, Select } from \"antd\"\r\nimport { siteUrl, formatItalian, validateTime } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { IPresenzaDocente } from \"../../models/IPresenzaDocente\"\r\n\r\nexport interface IProps{\r\n    readonly idDocente: string\r\n    readonly canEdit: boolean\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly presenze: IPresenzaDocente[]\r\n    readonly editingList: IPresenzaDocente[]\r\n    readonly filter: string\r\n}\r\n\r\nexport default class LezioniDocenteTable extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            presenze: null,\r\n            editingList: [],\r\n            filter: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { corso, idDocente } = this.props\r\n\r\n        Axios.get(siteUrl+\"/api/lezioni/getlezionidocente/\"+idDocente+\"/\"+corso).then(response => {\r\n            let presenze = response.data as IPresenzaDocente[]\r\n\r\n            this.setState({\r\n                presenze: presenze\r\n            })\r\n        })\r\n    }\r\n\r\n    changeEntrata = (e: any, idPresenza: number) => {\r\n        let entrata = e.target.value.trim(),\r\n        presenze = this.state.editingList.map(p => {\r\n            if(p.idPresenza === idPresenza)\r\n                p.ingresso = entrata\r\n            \r\n            return p\r\n        })\r\n\r\n        this.setState({\r\n            editingList: presenze\r\n        })\r\n    }\r\n\r\n    changeUscita = (e: any, idPresenza: number) => {\r\n        let uscita = e.target.value.trim(),\r\n        presenze = this.state.editingList.map(p => {\r\n            if(p.idPresenza === idPresenza)\r\n                p.uscita = uscita\r\n            \r\n            return p\r\n        })\r\n\r\n        this.setState({\r\n            editingList: presenze\r\n        })\r\n    }\r\n\r\n    startTimeEdit = (p: IPresenzaDocente) => {\r\n        this.setState({\r\n            editingList: this.state.editingList.concat(p)\r\n        })\r\n    }\r\n\r\n    animateTds = (td1: HTMLElement, td2: HTMLElement) => {\r\n        td1.classList.add(\"edited\")\r\n        td2.classList.add(\"edited\")\r\n\r\n        setTimeout(() => {\r\n            td1.classList.remove(\"edited\")\r\n            td2.classList.remove(\"edited\")\r\n        }, 1000)\r\n    }\r\n\r\n    confirmEdit = (id: number, td1: HTMLElement, td2: HTMLElement) => {\r\n        const { editingList, presenze } = this.state,\r\n        presenza = editingList.find(p => p.idPresenza === id)\r\n        \r\n        if(!validateTime(presenza.ingresso) || !validateTime(presenza.uscita)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Orari non validi! (ore:minuti:secondi)\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.put(siteUrl+\"/api/presenzedocente/\"+id, {\r\n            idPresenza: id,\r\n            ingresso: presenza.ingresso,\r\n            uscita: presenza.uscita,\r\n            idDocente: presenza.idDocente,\r\n            idLezione: presenza.idLezione\r\n        }).then(response => {\r\n            let output = response.data\r\n\r\n            if(output === \"success\"){\r\n                let newPresenze = presenze.map(p => {\r\n                    if(p.idPresenza === id){\r\n                        return presenza\r\n                    }\r\n\r\n                    return p\r\n                })\r\n\r\n                this.setState({\r\n                    presenze: newPresenze,\r\n                    editingList: editingList.filter(p => p.idPresenza !== presenza.idPresenza)\r\n                })\r\n                \r\n                this.animateTds(td1, td2)\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: output\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    getCategorie = () => {\r\n        const { presenze } = this.state \r\n        let categorie: string[] = []\r\n\r\n        presenze.forEach(p => {\r\n            if(categorie.indexOf(p.lezione) === -1)\r\n                categorie.push(p.lezione)\r\n        })\r\n\r\n        return categorie\r\n    }\r\n\r\n    changeFilter = (filter: string) => {\r\n        this.setState({\r\n            filter: filter === \"\" ? null : filter\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { presenze, editingList, filter } = this.state,\r\n        { canEdit } = this.props,\r\n        { Option } = Select\r\n\r\n        if(!presenze){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div>\r\n                <Spin indicator={icon} className=\"mt-3\" />\r\n            </div>\r\n        }\r\n\r\n        let presences = filter ? presenze.filter(p => p.lezione.toLowerCase() === filter.toLowerCase()) : presenze\r\n\r\n        return <div className=\"mt-3\">\r\n            <h3 className=\"d-inline-block\">Lezioni tenute dal docente</h3>\r\n\r\n            <div className=\"float-right\">\r\n                <label className=\"d-inline-block text-secondary mr-2\">Filtra per materia: </label>\r\n                <Select defaultValue=\"\" style={{ width: 150 }} onChange={this.changeFilter} showSearch>\r\n                    <Option value=\"\">Nessuna</Option>\r\n                    {\r\n                        this.getCategorie().map(l =>{\r\n                            return <Option value={l}>{l}</Option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            </div>\r\n\r\n            <div className=\"clearfix\"></div>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                <tbody>\r\n                    <tr className=\"thead-light\">\r\n                        <th>Giorno</th>\r\n                        <th>Entrata</th>\r\n                        <th>Uscita</th>\r\n                        <th>Lezione</th>\r\n                        {\r\n                            canEdit && <th>Azioni</th>\r\n                        }\r\n                    </tr>\r\n\r\n                    {\r\n                        presences.map(p => {\r\n                            let editPresenza = editingList.find(pre => pre.idPresenza === p.idPresenza),\r\n                            td1: HTMLElement,\r\n                            td2: HTMLElement\r\n\r\n                            return <tr>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\">{formatItalian(p.data)}</td>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\" ref={r => td1 = r}>\r\n                                    {\r\n                                        editPresenza ? <input type=\"text\" className=\"form-control edit-time\" value={editPresenza.ingresso} onChange={(e) => this.changeEntrata(e, p.idPresenza)} /> : <span>{p.ingresso}</span>\r\n                                    }\r\n                                </td>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\" ref={r => td2 = r}>\r\n                                    {\r\n                                        editPresenza ? <input type=\"text\" className=\"form-control edit-time\" value={editPresenza.uscita} onChange={(e) => this.changeUscita(e, p.idPresenza)} /> : <span>{p.uscita}</span>\r\n                                    }\r\n                                </td>\r\n                                <Tooltip title={p.lezione}>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{p.lezione}</td>\r\n                                </Tooltip>\r\n                                {\r\n                                    canEdit && <td>\r\n                                        {\r\n                                            editPresenza ? <Tooltip title=\"Conferma modifiche\">\r\n                                                <button type=\"button\" className=\"btn btn-success circle-btn\" onClick={() => this.confirmEdit(p.idPresenza, td1, td2)}>\r\n                                                    <i className=\"fa fa-check\"></i>\r\n                                                </button>\r\n                                            </Tooltip> : <Tooltip title=\"Modifica orari\">\r\n                                                <button type=\"button\" className=\"btn btn-orange circle-btn\" onClick={() => this.startTimeEdit(p)}>\r\n                                                    <i className=\"fa fa-user-edit\"></i>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                        }\r\n                                        \r\n                                    </td>\r\n                                }\r\n                            </tr>\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { RouteComponentProps } from \"react-router\"\r\nimport { routerHistory } from \"../..\"\r\nimport { Icon, Spin, Modal, Button, Statistic } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { IDocente } from \"../../models/IDocente\"\r\nimport LezioniDocenteTable from \"./LezioniDocenteTable\"\r\nimport { siteUrl, adminRoute } from \"../../utilities\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\nimport QRCode from \"qrcode.react\"\r\n\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly docente: IDocente\r\n    readonly modal: boolean\r\n}\r\n\r\nexport default class DocenteDetails extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            docente: null,\r\n            modal: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(adminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/docenti/getdocentibyid/\" + id).then((response) => {\r\n            this.setState({\r\n                docente: response.data as IDocente\r\n            })\r\n        })\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    downloadQR = () => {\r\n        const { docente } = this.state,\r\n        canvas = document.getElementById(\"qr-code-image\") as any\r\n        const pngUrl = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\")\r\n        let downloadLink = document.createElement(\"a\")\r\n        downloadLink.href = pngUrl\r\n        downloadLink.download = `qrcode${docente.nome}${docente.cognome}.png`\r\n        document.body.appendChild(downloadLink)\r\n        downloadLink.click()\r\n        document.body.removeChild(downloadLink)\r\n    }\r\n\r\n    getQRCode = () => {\r\n        const { docente } = this.state\r\n        let cipher = new Cipher(),\r\n        code = cipher.encode(docente.cf)\r\n\r\n        return code\r\n    }\r\n\r\n    isInCorso = (doc: IDocente) => {\r\n        return doc.corsi.indexOf(this.props.corso) !== -1\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { docente, modal } = this.state\r\n\r\n        if(!docente){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <div className=\"row mx-0\">\r\n                <div className=\"col-12 col-md-6 pl-md-0 mb-2 mb-md-0\">\r\n\r\n                    <div className=\"p-3 bg-white border\">\r\n                        {\r\n                            docente.ritirato && <span className=\"border-text\">Ritirato</span>\r\n                        }\r\n\r\n                        <h4 className=\"text-uppercase mb-2 text-truncate\">{docente.nome} {docente.cognome}</h4>\r\n                        <p className=\"mb-0\"><strong>E-mail</strong>: {docente.email}</p>\r\n                        <Button onClick={this.toggleModal} className=\"float-right\" type=\"link\">\r\n                            Mostra codice QR\r\n                        </Button>\r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3 pr-md-0\">\r\n                    <div className=\"p-3 bg-white border rounded text-center\" style={{ display: \"flex\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                        <Statistic title=\"Ore svolte\" value={docente.monteOre} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <LezioniDocenteTable idDocente={docente.idDocente} canEdit={this.isInCorso(docente)} corso={this.props.corso} />\r\n\r\n            <Modal visible={modal} maskClosable={true} centered title={\r\n                <span>\r\n                    <i className=\"far fa-qrcode fa-fw fa-lg text-primary mr-2\"></i>Codice QR del docente\r\n                </span>\r\n            } onCancel={this.toggleModal} width={350} onOk={this.downloadQR}\r\n            footer={[\r\n                <Button type=\"primary\" onClick={this.downloadQR}>\r\n                    <i className=\"far fa-arrow-to-bottom mr-2\"></i> Salva codice\r\n                </Button>,\r\n                <Button type=\"default\" onClick={this.toggleModal}>Chiudi</Button>\r\n            ]}>\r\n                <div className=\"text-center\">\r\n                    <p>Salva il codice sottostante e condividilo con <strong>{docente.nome} {docente.cognome}.</strong></p>\r\n                    <div className=\"my-2\">\r\n                        <QRCode id=\"qr-code-image\" value={this.getQRCode()} size={200} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Icon, Spin, Checkbox, message } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, adminRoute } from \"../../utilities\"\r\nimport { IDocente } from \"../../models/IDocente\"\r\nimport Axios from \"axios\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { IMateria } from \"../../models/IMateria\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly docente: IDocente\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly CF: string\r\n    readonly email: string\r\n    readonly materie: IMateria[]\r\n    readonly corsi: ICorso[]\r\n    readonly materieSel: number[]\r\n    readonly corsiSel: number[] \r\n}\r\n\r\nexport default class EditDocente extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            docente: null,\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            CF: \"\",\r\n            email: \"\",\r\n            materie: [],\r\n            materieSel: [],\r\n            corsi: [],\r\n            corsiSel: []\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(adminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/docenti/getdocentibyid/\" + id).then((response) => {\r\n            let doc = response.data as IDocente\r\n\r\n            this.setState({\r\n                docente: doc,\r\n                nome: doc.nome,\r\n                cognome: doc.cognome,\r\n                CF: doc.cf,\r\n                email: doc.email,\r\n                materieSel: doc.materie && doc.materie.length ? doc.materie : [],\r\n                corsiSel: doc.corsi && doc.corsi.length ? doc.corsi : []\r\n            })\r\n        })\r\n        \r\n        Axios.get(siteUrl+\"/api/materie/getmateriebycorso/\"+this.props.corso).then((response) => {\r\n            let materie = response.data as IMateria[]\r\n            \r\n            this.setState({\r\n                materie: materie\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/corsi\").then((response) => {\r\n            let corsi = response.data as ICorso[]\r\n            \r\n            this.setState({\r\n                corsi: corsi\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let CF = event.target.value.trim()\r\n\r\n        this.setState({\r\n            CF: CF\r\n        })\r\n    }\r\n\r\n    modificaDocente = () => {\r\n        const { docente, nome, cognome, CF, email, corsiSel, materieSel } = this.state\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || CF === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!materieSel.length){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Scegliere almeno una materia.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!corsiSel.length){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Scegliere almeno un corso.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(CF.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.put(siteUrl+\"/api/docenti/\" + this.props.match.params.id, {\r\n            idDocente: parseInt(this.props.match.params.id),\r\n            nome: nome.trim(),\r\n            cognome: cognome.trim(),\r\n            email: email,\r\n            cf: CF,\r\n            tenere: corsiSel.map(c => { return { idCorso: c, idDocente: docente.idDocente } }),\r\n            insegnare: materieSel.map(m => { return { idMateria: m, idDocente: docente.idDocente } }),\r\n            ritirato: docente.ritirato\r\n        }).then(_ => {\r\n            message.success(\"Docente modificato con successo!\")\r\n            routerHistory.push(adminRoute+\"/docenti\")\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    switchMateria = (materiaId: number) => {\r\n        let find = this.state.materieSel.find(m => m === materiaId),\r\n        newList = find ? this.state.materieSel.filter(m => m !== materiaId) : this.state.materieSel.concat(materiaId)\r\n\r\n        this.setState({\r\n            materieSel: newList\r\n        })\r\n    }\r\n\r\n    switchCorso = (corsoId: number) => {\r\n        let find = this.state.corsiSel.find(m => m === corsoId),\r\n        newList = find ? this.state.corsiSel.filter(m => m !== corsoId) : this.state.corsiSel.concat(corsoId)\r\n\r\n        this.setState({\r\n            corsiSel: newList\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, CF, docente, email, materie, materieSel, corsi, corsiSel } = this.state\r\n\r\n        if(!docente || !materie.length || !corsi.length){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Modifica di un docente</h3>\r\n\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={CF} onChange={this.changeCF} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Materie insegnate dal docente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                materie.map(m => {\r\n                                    let find = materieSel.find(f => f === m.idMateria),\r\n                                    checked = find ? true : false,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n\r\n                                    return <label className={\"option \" + classname}>\r\n                                        <Checkbox className=\"mr-2\" onChange={() => this.switchMateria(m.idMateria)} checked={checked} /> {m.nome}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Corsi del docente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                corsi.map(m => {\r\n                                    let find = corsiSel.find(f => f === m.idCorso),\r\n                                    checked = find ? true : false,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n\r\n                                    return <label className={\"option \" + classname}>\r\n                                        <Checkbox className=\"mr-2\" onChange={() => this.switchCorso(m.idCorso)} checked={checked} /> {m.nome}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.modificaDocente}>Modifica docente</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Icon, Spin, message, DatePicker } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, formattaData, formatItalian, adminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport locale from \"antd/es/date-picker/locale/it_IT\"\r\nimport moment from \"moment\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly studente: IStudent\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly dataNascita: string\r\n    readonly CF: string\r\n    readonly email: string\r\n}\r\n\r\nexport default class EditStudente extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            studente: null,\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            dataNascita: \"\",\r\n            CF: \"\",\r\n            email: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(adminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/getstudentibyid/\" + id).then((response) => {\r\n            let stu = response.data as IStudent\r\n\r\n            this.setState({\r\n                studente: stu,\r\n                nome: stu.nome,\r\n                cognome: stu.cognome,\r\n                CF: stu.cf,\r\n                dataNascita: formatItalian(stu.dataNascita),\r\n                email: stu.email\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeData = (data: string) => {\r\n        this.setState({\r\n            dataNascita: data\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let CF = event.target.value.trim()\r\n\r\n        this.setState({\r\n            CF: CF\r\n        })\r\n    }\r\n\r\n    modificaStudente = () => {\r\n        const { nome, cognome, dataNascita, CF, email, studente } = this.state\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || dataNascita === \"\" || CF === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(CF.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.put(siteUrl+\"/api/studenti/\" + studente.idStudente, {\r\n            idStudente: studente.idStudente,\r\n            nome: nome.trim(),\r\n            cognome: cognome.trim(),\r\n            email: email,\r\n            cf: CF,\r\n            idCorso: this.props.corso,\r\n            annoFrequentazione: studente.annoFrequentazione,\r\n            dataNascita: formattaData(dataNascita, true),\r\n            ritirato: studente.ritirato\r\n        }).then(_ => {\r\n            message.success(\"Studente modificato con successo!\")\r\n            routerHistory.push(adminRoute+\"/studenti\")\r\n        })\r\n        \r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, dataNascita, CF, studente, email } = this.state\r\n\r\n        if(!studente){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Modifica di uno studente</h3>\r\n\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Data di nascita</label>\r\n                        <DatePicker locale={locale} className=\"w-100 select-date\" onChange={(_, d2) => this.changeData(d2)} format=\"DD-MM-YYYY\" defaultValue={moment(dataNascita, \"DD-MM-YYYY\")} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={CF} onChange={this.changeCF} />\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.modificaStudente}>Modifica studente</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport Dragger from \"antd/lib/upload/Dragger\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport { Modal, Tooltip, Icon, message } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { formattaData, capitalizeFirst, siteUrl, resizePopup, formatItalian, adminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly addList: IStudent[]\r\n    readonly fileContent: string\r\n    readonly fields: any\r\n}\r\n\r\nconst fields = [{\r\n    label: \"Nome\",\r\n    field: \"nome\"\r\n},{\r\n    label: \"Cognome\",\r\n    field: \"cognome\"\r\n},{\r\n    label: \"Codice Fiscale\",\r\n    field: \"cf\"\r\n},{\r\n    label: \"Data di nascita\",\r\n    field: \"dataNascita\"\r\n},{\r\n    label: \"E-mail\",\r\n    field: \"email\"\r\n}]\r\n\r\nexport default class StudentsImport extends React.PureComponent<IProps, IState>{\r\n    \r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            addList: [],\r\n            fileContent: \"\",\r\n            fields: {\r\n                nome: 0,\r\n                cognome: 0,\r\n                cf: 0,\r\n                dataNascita: 0,\r\n                email: 0,\r\n                annoFrequentazione: 1\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        resizePopup()\r\n    }\r\n\r\n    splitCSV = (data: string) => {\r\n        let regex = /([\"'])(?:(?=(\\\\?))\\2.)*?\\1/g,\r\n        pieces = data.match(regex)\r\n\r\n        return pieces.map(p => { return p.replace(/[\"]/g, '') })\r\n    }\r\n\r\n    renderOptions = () => {\r\n        let rows = this.state.fileContent.split(\"\\n\"),\r\n        cells = this.splitCSV(rows[0]),\r\n        options = cells.map((c, i) => {\r\n            if(c === \"\")\r\n                return null\r\n\r\n            return <option value={i}>{c}</option>\r\n        })\r\n\r\n        return options\r\n    }\r\n\r\n    changeVarPos = (e: any, varName: string) => {\r\n        let value = e.target.value,\r\n        obj = this.state.fields\r\n\r\n        obj[varName] = value\r\n\r\n        this.setState({\r\n            fields: obj\r\n        })\r\n    }\r\n\r\n    readFile = (file: any) => {\r\n        const reader = new FileReader()\r\n\r\n        reader.onload = e => {\r\n            this.setState({\r\n                fileContent: String(e.target.result).trim()\r\n            })\r\n\r\n            Modal.info({\r\n                width: 500,\r\n                centered: true,\r\n                title: \"Selezionare i campi da abbinare\",\r\n                icon: <Icon type=\"api\" style={{ color: \"var(--success)\" }} />,\r\n                maskClosable: true,\r\n                content: <div style={{ marginLeft: -38 }}>\r\n                    <div className=\"row mt-3 px-0\">\r\n                        <div className=\"col-4\">\r\n                            <label className=\"mt-2\">Classe: </label>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <select className=\"custom-select pointer\" style={{ height: 35 }} onChange={(e) => this.changeVarPos(e, \"annoFrequentazione\")}>\r\n                                <option value=\"1\">Primo anno</option>\r\n                                <option value=\"2\">Secondo anno</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        fields.map(f => {\r\n                            return <div className=\"row mt-3 px-0\">\r\n                                <div className=\"col-4\">\r\n                                    <label className=\"mt-2\">{f.label}: </label>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <select className=\"custom-select pointer\" style={{ height: 35 }} onChange={(e) => this.changeVarPos(e, f.field)}>\r\n                                        {this.renderOptions()}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>,\r\n                onOk: this.showImportPreview,\r\n                okText: \"Prosegui\"\r\n            })\r\n        }\r\n\r\n        reader.readAsText(file, \"ISO-8859-1\")\r\n\r\n        return false\r\n    }\r\n\r\n    showImportPreview = () => {\r\n        const { fileContent, fields} = this.state\r\n\r\n        let rows = fileContent.split(\"\\n\"),\r\n        list: IStudent[] = [],\r\n        popup = document.getElementById(\"popup\")\r\n\r\n        rows.forEach(r => {\r\n            let cells = this.splitCSV(r)\r\n\r\n            let student: IStudent = {\r\n                idCorso: this.props.corso,\r\n                nome: capitalizeFirst(cells[fields['nome']]),\r\n                cognome: capitalizeFirst(cells[fields['cognome']]),\r\n                annoFrequentazione: parseInt(fields['annoFrequentazione']),\r\n                cf: cells[fields['cf']],\r\n                dataNascita: formattaData(cells[fields['dataNascita']], true),\r\n                email: cells[fields['email']],\r\n                password: cells[fields['cf']]\r\n            }\r\n\r\n            list.push(student)\r\n        })\r\n\r\n        this.setState({\r\n            addList: list\r\n        })\r\n\r\n        popup.classList.add(\"show\")\r\n    }\r\n\r\n    hidePopup = () => {\r\n        let popup = document.getElementById(\"popup\")\r\n\r\n        this.setState({\r\n            addList: [],\r\n            fields: {\r\n                nome: 0,\r\n                cognome: 0,\r\n                cf: 0,\r\n                dataNascita: 0,\r\n                email: 0,\r\n                annoFrequentazione: 0\r\n            }\r\n        })\r\n\r\n        popup.classList.remove(\"show\")\r\n    }\r\n\r\n    confirmImport = () => {\r\n        Axios.post(siteUrl+\"/api/studenti\", this.state.addList).then(_ => {\r\n            message.success(\"Importazione eseguita con successo!\")\r\n            routerHistory.push(adminRoute+\"/studenti\")\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { addList } = this.state\r\n\r\n        return <div className=\"col p-5 right-block\" id=\"mainBlock\" style={{flexDirection: \"column\"}}>\r\n            <h3 className=\"text-center w-100\">Importa studenti da CSV</h3>\r\n\r\n            <label>\r\n                Prima di proseguire, esportare il CSV da <strong>Sifer</strong>.\r\n            </label>\r\n\r\n            <div className=\"uploader mt-2 w-100\">\r\n                <Dragger accept=\".csv\" beforeUpload={file => this.readFile(file)}>\r\n                    <p className=\"ant-upload-drag-icon\">\r\n                        <i className=\"fa fa-file-csv fa-5x\"></i>\r\n                    </p>\r\n                    <p className=\"ant-upload-text\">Clicca o trascina un file su quest'aerea</p>\r\n                    <p className=\"ant-upload-hint\">\r\n                        Assicurati che il file abbia l'estensione <strong>.csv</strong>.\r\n                    </p>\r\n                </Dragger>\r\n            </div>\r\n\r\n            <div id=\"popup\" className=\"preview px-0\">\r\n                <div className=\"w-100 h-100 inner overflow-auto px-5 py-4\">\r\n                    <h3 className=\"mb-3 text-center\">Anteprima dati da importare</h3>\r\n                    {\r\n                        addList.length && <table className=\"table table-bordered text-center\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th>Nome</th>\r\n                                    <th>Cognome</th>\r\n                                    <th>Anno</th>\r\n                                    <th>Codice Fiscale</th>\r\n                                    <th>Data di Nascita</th>\r\n                                    <th style={{width: \"25%\"}}>E-mail</th>\r\n                                </tr>\r\n\r\n                                {\r\n                                    addList.map(s => {                \r\n                                        return <tr>\r\n                                            <Tooltip title={s.nome}>\r\n                                                <td style={{maxWidth: 0}} className=\"text-truncate\">{s.nome}</td>\r\n                                            </Tooltip>\r\n                                            <Tooltip title={s.cognome}>\r\n                                                <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cognome}</td>\r\n                                            </Tooltip>\r\n                                            <td style={{maxWidth: 0}} className=\"text-truncate\">{s.annoFrequentazione}</td>\r\n                                            <Tooltip title={s.cf}>\r\n                                                <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cf}</td>\r\n                                            </Tooltip>\r\n                                            <td style={{maxWidth: 0}} className=\"text-truncate\">{formatItalian(s.dataNascita)}</td>\r\n                                            <Tooltip title={s.email}>\r\n                                                <td style={{maxWidth: 0}} className=\"text-truncate\">{s.email}</td>\r\n                                            </Tooltip>\r\n                                        </tr>\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"bottom-side p-3 text-right\">\r\n                    <button className=\"btn btn-danger mr-2\" onClick={this.hidePopup}>Annulla</button>\r\n                    <button className=\"btn btn-success\" onClick={this.confirmImport}>Conferma importazione</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Tooltip, Spin, Icon, Modal, message, Button } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl } from \"../../utilities\"\r\nimport { IMateria } from \"../../models/IMateria\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly materie: IMateria[]\r\n    readonly showModal: boolean\r\n    readonly nomeMateria: string\r\n    readonly showEditModal: boolean\r\n    readonly materiaEdit: IMateria\r\n    readonly nomeEdit: string\r\n    readonly descEdit: string\r\n    readonly descMateria: string\r\n}\r\n\r\nexport default class MaterieList extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            materie: null,\r\n            showModal: false,\r\n            nomeMateria: \"\",\r\n            descMateria: \"\",\r\n            showEditModal: false,\r\n            materiaEdit: null,\r\n            nomeEdit: \"\",\r\n            descEdit: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/materie/getmateriebycorso/\" + this.props.corso).then((response) => {\r\n            this.setState({\r\n                materie: response.data as IMateria[]\r\n            })\r\n        })\r\n    }\r\n\r\n    showHideModal = () => {\r\n        this.setState({\r\n            showModal: !this.state.showModal,\r\n            nomeMateria: \"\",\r\n            descMateria: \"\"\r\n        })\r\n    }\r\n\r\n    hideEditModal = () => {\r\n        this.setState({\r\n            showEditModal: false,\r\n            nomeEdit: \"\",\r\n            materiaEdit: null\r\n        })\r\n    }\r\n\r\n    showEditModal = (materia: IMateria) => {\r\n        this.setState({\r\n            showEditModal: true,\r\n            nomeEdit: materia.nome,\r\n            descEdit: materia.descrizione,\r\n            materiaEdit: materia\r\n        })\r\n    }\r\n\r\n    aggiungiMateria = () => {\r\n        const { nomeMateria, descMateria } = this.state\r\n\r\n        if(nomeMateria.trim() === \"\" || descMateria.trim() === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n           return\r\n        }\r\n        \r\n        this.setState({\r\n            materie: null,\r\n            showModal: false\r\n        })\r\n\r\n        Axios.post(siteUrl+\"/api/materie/\"+this.props.corso, {\r\n            nome: nomeMateria.trim(),\r\n            descrizione: descMateria.trim()\r\n        }).then(response => {\r\n            let materie = response.data as IMateria[]\r\n\r\n            this.setState({\r\n                materie: materie\r\n            })\r\n\r\n            message.success(\"Materia aggiunta con successo!\")\r\n        })\r\n\r\n    }\r\n\r\n    modificaMateria = () => {\r\n        const { nomeEdit, materiaEdit, descEdit } = this.state\r\n\r\n        if(nomeEdit === \"\" || descEdit === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n           return\r\n        }\r\n        \r\n        this.setState({\r\n            materie: null,\r\n            showEditModal: false\r\n        })\r\n\r\n        Axios.put(siteUrl+\"/api/materie/\"+materiaEdit.idMateria, {\r\n            idMateria: materiaEdit.idMateria,\r\n            nome: nomeEdit.trim(),\r\n            descrizione: descEdit.trim()\r\n        }).then(response => {\r\n            let materie = response.data as IMateria[]\r\n\r\n            this.setState({\r\n                materie: materie,\r\n                materiaEdit: null,\r\n                nomeEdit: \"\",\r\n                descEdit: \"\"\r\n            })\r\n\r\n            message.success(\"Materia modificata con successo!\")\r\n        })\r\n\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nomeMateria: nome\r\n        })\r\n    }\r\n\r\n    changeNomeEdit = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nomeEdit: nome\r\n        })\r\n    }\r\n\r\n    changeDesc = (event: any) => {\r\n        let desc = event.target.value\r\n\r\n        this.setState({\r\n            descMateria: desc\r\n        })\r\n    }\r\n\r\n    changeDescEdit = (event: any) => {\r\n        let desc = event.target.value\r\n\r\n        this.setState({\r\n            descEdit: desc\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { materie, nomeMateria, showModal, showEditModal, materiaEdit, nomeEdit, descMateria, descEdit } = this.state\r\n        \r\n        if(!materie){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Lista delle materie</h3>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={this.showHideModal}>\r\n                <i className=\"fal fa-plus\"></i> Aggiungi materia\r\n            </button>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                \r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th>Descrizione</th>\r\n                            <th style={{width: \"10%\"}}>Azioni</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            materie.map(m => {        \r\n                                return <tr>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{m.nome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{m.descrizione}</td>\r\n                                    <td>\r\n                                        <Tooltip title=\"Modifica\">\r\n                                            <button type=\"button\" className=\"btn btn-warning text-white circle-btn\" onClick={() => this.showEditModal(m)}>\r\n                                                <i className=\"fa fa-pen\"></i>\r\n                                            </button>\r\n                                        </Tooltip>\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n\r\n            <Modal title=\"Aggiungi una materia\" visible={showModal} footer={[\r\n                <Button type=\"primary\" onClick={this.aggiungiMateria}>Aggiungi</Button>,\r\n                <Button type=\"default\" onClick={this.showHideModal}>Annulla</Button>\r\n            ]} onCancel={this.showHideModal}>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Nome della materia</label>\r\n                        <input type=\"text\" value={nomeMateria} onChange={this.changeNome} className=\"form-control\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Descrizione della materia</label>\r\n                        <input type=\"text\" value={descMateria} onChange={this.changeDesc} className=\"form-control\" />\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n\r\n            {\r\n                materiaEdit && <Modal title=\"Modifica di una materia\" visible={showEditModal} footer={[\r\n                    <Button type=\"primary\" onClick={this.modificaMateria}>Modifica</Button>,\r\n                    <Button type=\"default\" onClick={this.hideEditModal}>Annulla</Button>\r\n                ]} onCancel={this.hideEditModal}>\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-secondary\">Nome della materia</label>\r\n                            <input type=\"text\" value={nomeEdit} onChange={this.changeNomeEdit} className=\"form-control\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-secondary\">Descrizione della materia</label>\r\n                            <input type=\"text\" value={descEdit} onChange={this.changeDescEdit} className=\"form-control\" />\r\n                        </div>\r\n                    </form>\r\n                </Modal>\r\n            }\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Tooltip } from \"antd\"\r\n\r\nexport interface IProps{\r\n    readonly src: string\r\n    readonly width?: number | string\r\n    readonly height?: number | string\r\n    readonly scalable?: boolean\r\n    readonly style?: React.CSSProperties\r\n}\r\nexport interface IState{\r\n    readonly scaled: boolean\r\n    readonly coords: number[]\r\n}\r\n\r\nexport default class ImageScale extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            scaled: false,\r\n            coords: [0, 0]\r\n        }\r\n    }\r\n\r\n    scaleImage = () => {\r\n        if(!this.props.scalable) return\r\n\r\n        this.setState({\r\n            scaled: !this.state.scaled\r\n        })\r\n        \r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { src, width, height, scalable, style } = this.props\r\n        const { scaled } = this.state\r\n        let firstclass = scalable ? \"scalable \" : \"\",\r\n        classname = scaled ? \"scaled\" : \"\",\r\n        title = scalable ? \"Cliccare per \" + (scaled ? \"rimpicciolire\" : \"ingrandire\") : null\r\n\r\n        return <Tooltip title={title}>\r\n            <img alt=\"scale\" style={style} className={\"imagescale \"+firstclass+classname} src={src} width={width} height={height} onClick={this.scaleImage} />\r\n        </Tooltip>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, message, Icon, Spin } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl } from \"../../utilities\"\r\nimport { ICalendar } from \"../../models/ICalendar\"\r\n\r\nexport interface IProps{\r\n    readonly anno: number\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly calendarId: string\r\n    readonly calendar: ICalendar\r\n}\r\n\r\nexport default class ConfigForm extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            calendarId: null,\r\n            calendar: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { corso, anno } = this.props\r\n\r\n        Axios.get(siteUrl+\"/api/calendari/\"+corso+\"/\"+anno).then(response => {\r\n            let calendar = response.data as ICalendar\r\n\r\n            this.setState({\r\n                calendarId: calendar.idGoogleCalendar,\r\n                calendar: calendar\r\n            })\r\n        })\r\n    }\r\n\r\n    changeID = (e: any) => {\r\n        let calendarId = e.target.value\r\n\r\n        this.setState({\r\n            calendarId: calendarId\r\n        })\r\n    }\r\n\r\n    saveConfig = () => {\r\n        const { corso, anno } = this.props\r\n        const { calendarId, calendar } = this.state\r\n\r\n        if(calendarId === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.post(siteUrl+\"/api/calendari\", {\r\n            IdCalendario: calendar ? calendar.idCalendario : \"0\",\r\n            IdCorso: corso,\r\n            Anno: anno,\r\n            IdGoogleCalendar: calendarId\r\n        }).then(_ => {\r\n            message.success(\"Configurazione calendario salvata!\")\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { calendarId } = this.state\r\n\r\n        if(calendarId === null){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"text-center\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <form>\r\n            <div className=\"form-group row\">\r\n                <div className=\"col\">\r\n                    <label className=\"text-secondary\">ID Calendario</label>\r\n                    <input name=\"calendarID\" type=\"text\" className=\"form-control\" value={calendarId} onChange={this.changeID} />\r\n                </div>\r\n            </div>\r\n\r\n            <button type=\"button\" className=\"btn btn-success float-right mr-1 mb-1\" onClick={this.saveConfig}>Salva configurazione</button>\r\n        </form>\r\n    }\r\n}","import React from \"react\"\r\nimport { Icon, Modal, Tooltip, Tabs } from \"antd\"\r\nimport ImageScale from \"../ImageScale\"\r\nimport ConfigForm from \"./ConfigForm\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{}\r\n\r\nexport default class ConfigCalendar extends React.PureComponent<IProps, IState>{\r\n    showHelp = () => {\r\n        Modal.info({\r\n            width: 700,\r\n            style: { top: 24 },\r\n            centered: false,\r\n            maskClosable: true,\r\n            icon: <Icon type=\"question-circle\" style={{ marginTop: 6, fontSize: 28, color: \"orange\" }} />,\r\n            okText: \"Ho capito\",\r\n            content: <div className=\"text-justify\">\r\n                <strong>Dove mi trovo?</strong>\r\n                <p>In questa pagina potrai configurare il calendario dal quale verranno caricate le lezioni del corso.</p>\r\n                <strong>Come si configura il calendario?</strong>\r\n                <p>Per configurare il calendario avrai bisogno di un codice univoco, che ti permetterà di collegare il calendario al sito.</p>\r\n                <strong>ID del calendario</strong>\r\n                <p>Per trovare l'ID (identificativo) del calendario, basterà effettuare l'accesso su <a href=\"https://calendar.google.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Google Calendar <i className=\"far fa-external-link\"></i></a> con un account che abbia integrato il calendario del corso. Bisognerà poi premere sul simbolo <i className=\"far fa-cog\"></i> in alto a destra e successivamente su <strong>Impostazioni</strong> nel menu che comparirà. Scorrere quindi la lista a sinistra della pagina, e cliccare sul calendario che si desidera integrare. Recarsi sotto la voce <strong>Integra calendario</strong> e copiare (subito in basso) il codice identificativo del calendario (<strong>ID calendario</strong>), per poi incollarlo in questa pagina di configurazione.</p>\r\n                <p><u>Assicurati che il calndario sia <strong>pubblico</strong>, altrimenti non sarà possibile visualizzarlo.</u></p>\r\n                <strong className=\"d-block mb-2\">Galleria immagini</strong>\r\n                <ImageScale src=\"https://i.imgur.com/e3H0hXX.png\" height={100} scalable={true} />\r\n            </div>\r\n        })\r\n\r\n        setTimeout(() => document.getElementsByClassName(\"ant-modal-wrap\")[0].scrollTo(0, 0), 100)\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { TabPane } = Tabs\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">\r\n                Configurazione calendario\r\n                <Tooltip title=\"Informazioni\">\r\n                    <button type=\"button\" className=\"btn btn-info circle-btn float-right\" onClick={this.showHelp}>\r\n                        <i className=\"fa fa-question\"></i>\r\n                    </button>\r\n                </Tooltip>\r\n                <div className=\"clearfix\"></div>\r\n            </h3>\r\n\r\n            <Tabs>\r\n                <TabPane tab=\"Primo anno\" key=\"1\">\r\n                    <ConfigForm anno={1} corso={this.props.corso} />\r\n                </TabPane>\r\n                <TabPane tab=\"Secondo anno\" key=\"2\">\r\n                    <ConfigForm anno={2} corso={this.props.corso} />\r\n                </TabPane>\r\n            </Tabs>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { routerHistory } from \"..\"\r\n\r\nexport interface IProps{\r\n    readonly goTo: string\r\n}\r\nexport interface IState{}\r\n\r\nexport default class Page404 extends React.PureComponent<IProps, IState>{\r\n    render(): JSX.Element{\r\n        return <div id=\"mainBlock\" className=\"col\">\r\n            <div className=\"text-center text-grey w-100\">\r\n                <i className=\"fal fa-exclamation-triangle mb-2\" style={{ fontSize: 150}}></i>\r\n                <h1 className=\"mb-2 text-grey font-weight-normal\">Errore 404</h1>\r\n                <p style={{ fontSize: 20 }}>La pagina che stati cercando non esiste.</p>\r\n                <button onClick={() => routerHistory.push(this.props.goTo)} type=\"button\" className=\"btn btn-blue btn-lg text-uppercase\">\r\n                    <i className=\"fa fa-shield-check fa-lg fa-fw mr-2\"></i>\r\n                    Torna al sicuro\r\n                </button>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal } from \"antd\"\r\nimport { siteUrl } from \"../../utilities\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IProps{\r\n    readonly idCoordinatore: number\r\n}\r\nexport interface IState{}\r\n\r\nexport default class EditCodiceFirma extends React.PureComponent<IProps, IState>{\r\n    requestCodeChange = (anno: number) => {\r\n        const { idCoordinatore } = this.props\r\n\r\n        askPassword(siteUrl+\"/api/corsi/generacodiceanno\", \"post\", {\r\n            idCoordinatore: idCoordinatore,\r\n            anno: anno\r\n        }, (response: any) => {\r\n            let codice = response.data\r\n\r\n            Modal.info({\r\n                title: \"Codice generato\",\r\n                content: <span>\r\n                    Il nuovo codice è: <strong>{codice}</strong>\r\n                </span>\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-4 text-center\">Gestione firma da casa</h3>\r\n\r\n            <div className=\"py-4 px-3 text-justify border rounded shadow-sm mb-4\">\r\n                <div className=\"row mx-0\">\r\n                    <div className=\"col-1 text-left\">\r\n                        <i className=\"fal fa-question-circle fa-3x text-warning\"></i>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <p>Nel caso in cui ce ne fosse bisogno, è possibile dare agli studenti la possibilità di firmare le loro presenze da casa.</p>\r\n                        <p>Tramite <a href={siteUrl+\"/#/firmacasa\"} target=\"_blank\" rel=\"noopener noreferrer\">questo url</a> (da condividere con gli studenti) è possibile eseguire tale operazione, ma per farlo è necessario generare, tramite la pagina corrente, un codice univoco che permetta l'accesso alla schermata. Basterà quindi digitarlo nell'apposito campo di testo e si accederà alla lista degli studenti presenti nella classe.</p>\r\n                        <p>Lo studente sarà poi libero di scegliere il proprio nome nella lista e confermare l'operazione.</p>\r\n                        <p className=\"mb-0\">Il codice sarà differente in base all'anno di appartenenza.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <strong className=\"mr-2\">Genera codice:</strong>\r\n            <button className=\"btn btn-blue mr-2\" onClick={() => this.requestCodeChange(1)}>Primo anno</button>\r\n            <button className=\"btn btn-danger\" onClick={() => this.requestCodeChange(2)}>Secondo anno</button>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"../..\"\r\nimport LoginTutor from \"./LoginTutor\"\r\nimport StudentsList from \"./StudentsList\"\r\nimport AddNewStudent from \"./AddNewStudent\"\r\nimport StudentDetails from \"./StudentDetails\"\r\nimport DocentiList from \"./DocentiList\"\r\nimport AddNewDocente from \"./AddNewDocente\"\r\nimport DocenteDetails from \"./DocenteDetails\"\r\nimport EditDocente from \"./EditDocente\"\r\nimport EditStudente from \"./EditStudente\"\r\nimport StudentsImport from \"./StudentsImport\"\r\nimport MaterieList from \"./MaterieList\"\r\nimport ConfigCalendar from \"./ConfigCalendar\"\r\nimport { IAdmin } from \"../../models/IAdmin\"\r\nimport LogoCorso from \"../LogoCorso\"\r\nimport Page404 from \"../Page404\"\r\nimport { adminRoute } from \"../../utilities\"\r\nimport EditCodiceFirma from \"./EditCodiceFirma\"\r\n\r\nexport default class Dashboard extends React.Component{\r\n\r\n    componentWillUnmount = () => {\r\n        sessionStorage.removeItem(\"adminSession\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n\r\n        let session = sessionStorage.getItem(\"adminSession\")\r\n        \r\n        if(!session)\r\n            return <LoginTutor />\r\n\r\n        let admin = JSON.parse(session) as IAdmin\r\n\r\n        return <div className=\"container-fluid\">\r\n            <Router history={routerHistory}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3 bg-blue p-0 menu\">\r\n                        \r\n                        <LogoCorso idCorso={admin.idCorso} />\r\n\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/studenti\")} to={adminRoute+\"/studenti\"}>\r\n                            <span><i className=\"fal fa-users-class fa-fw mr-1\"></i> Studenti</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/docenti\")} to={adminRoute+\"/docenti\"}>\r\n                            <span><i className=\"fal fa-chalkboard-teacher fa-fw mr-1\"></i> Docenti</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/materie\")} to={adminRoute+\"/materie\"}>\r\n                            <span><i className=\"fal fa-list-alt fa-fw mr-1\"></i> Materie</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/config\")} to={adminRoute+\"/config\"}>\r\n                            <span><i className=\"fal fa-calendar-edit fa-fw mr-1\"></i> Configura calendario</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/codicefirma\")} to={adminRoute+\"/codicefirma\"}>\r\n                            <span><i className=\"fal fa-house-signal fa-fw mr-1\"></i> Firma da casa</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => {\r\n                            sessionStorage.removeItem(\"adminSession\")\r\n                            routerHistory.push(adminRoute)\r\n                        }} exact to={adminRoute+\"/login\"}>\r\n                            <span><i className=\"fal fa-power-off fa-fw mr-1\"></i> Esci</span>\r\n                        </NavLink>\r\n                    </div>\r\n  \r\n                    <Switch>\r\n                        <Route exact path={adminRoute} render={() => {\r\n                            routerHistory.push(adminRoute+\"/studenti\")\r\n\r\n                            return null\r\n                        }} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti\"} render={() => (\r\n                            <StudentsList corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti/new\"} render={() => (\r\n                            <AddNewStudent corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti/import\"} render={() => (\r\n                            <StudentsImport corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti/:id\"} render={(routeProps) => (\r\n                            <StudentDetails {...routeProps} corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti/edit/:id\"} render={(routeProps) => (\r\n                            <EditStudente {...routeProps} corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/docenti\"} render={() => (\r\n                            <DocentiList corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/docenti/new\"} render={() => (\r\n                            <AddNewDocente corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/docenti/:id\"} render={(routeProps) => (\r\n                            <DocenteDetails {...routeProps} corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/docenti/edit/:id\"} render={(routeProps) => (\r\n                            <EditDocente {...routeProps} corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/materie\"} render={() => (\r\n                            <MaterieList corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/config\"} render={() => (\r\n                            <ConfigCalendar corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/codicefirma\"} render={() => (\r\n                            <EditCodiceFirma idCoordinatore={admin.idCoordinatore} />\r\n                        )} />\r\n\r\n                        <Route render={() => <Page404 goTo={adminRoute} />} />\r\n\r\n                    </Switch>\r\n                        \r\n                </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport { Spin, Icon } from \"antd\"\r\nimport QRCode from \"qrcode.react\"\r\nimport Axios from \"axios\"\r\n\r\nexport interface IProps{\r\n    studentId: number\r\n}\r\nexport interface IState{\r\n    readonly code: string\r\n}\r\n\r\nexport default class QRCodeScreen extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            code: null\r\n        }\r\n\r\n        this.reloadCode()\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        setInterval(() => {\r\n            this.setState({\r\n                code: null\r\n            })\r\n\r\n            this.reloadCode()\r\n        }, 20000)\r\n    }\r\n\r\n    reloadCode = () => {\r\n        Axios.get(\"http://mygraphic.altervista.org/reg/api?codice&studente=\"+this.props.studentId).then((response) => {\r\n            this.setState({\r\n                code: response.data\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { code } = this.state\r\n\r\n        if(!code){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div>\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"text-center\">\r\n            <h5 className=\"mb-4 font-weight-normal text-black underline\">Scannerizza questo codice</h5>\r\n            <QRCode value={code} size={200} />\r\n        </div>\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport FullCalendar from \"@fullcalendar/react\"\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\"\r\nimport { Digits2 } from \"../../utilities\"\r\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\"\r\nimport { Modal, Icon, Spin } from \"antd\"\r\nimport { ICalendar } from \"../../models/ICalendar\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\n\r\nimport \"@fullcalendar/core/main.css\"\r\nimport \"@fullcalendar/timegrid/main.css\"\r\n\r\nexport interface IProps{\r\n    readonly student: IStudent\r\n}\r\nexport interface IState{\r\n    readonly calendar: ICalendar\r\n}\r\n\r\nexport default class UserCalendar extends React.PureComponent<IProps, IState> {\r\n    constructor(props: IProps){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            calendar: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        /*************************************/\r\n        /* CARICAMENTO CALENDARIO IN BASE A  */\r\n        /* this.props.student.idCorso        */\r\n        /* this.props.student.annoFrequentazione */\r\n        /*************************************/\r\n    }\r\n    \r\n    render(): JSX.Element{\r\n        const { calendar } = this.state\r\n    \r\n        if(!calendar){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n        \r\n        return <div>\r\n            <h5 className=\"text-center text-black w-100\">Calendario del mese</h5>\r\n            <FullCalendar\r\n            plugins={[ googleCalendarPlugin, dayGridPlugin ]}\r\n            events={ { googleCalendarId: calendar.idGoogleCalendar} }\r\n            googleCalendarApiKey={\"AIzaSyCEEaAbHOYhofQs-iLdHd_J8-KyD_IlRbE\"}\r\n            defaultView=\"dayGridMonth\"\r\n            fixedWeekCount={false}\r\n            header={false}\r\n            firstDay={1}\r\n            themeSystem={\"bootstrap\"}\r\n            eventTimeFormat={{\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n                meridiem: false\r\n            }}\r\n            locale={\"it\"}\r\n            eventClick={\r\n                function(info){\r\n                    info.jsEvent.preventDefault()\r\n                    let event = info.event\r\n                    \r\n                    Modal.info({\r\n                        maskClosable: true,\r\n                        centered: true,\r\n                        icon: null,\r\n                        title: event.title,\r\n                        content: <div className=\"mt-3\" style={{ fontSize: 20 }}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3 pr-0\">\r\n                                    <span className=\"label\">Inizio</span>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <span className=\"desc\">\r\n                                        { Digits2(event.start.getHours()) }:{ Digits2(event.start.getMinutes()) }\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3 pr-0\">\r\n                                    <span className=\"label\">Fine</span>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <span className=\"desc\">\r\n                                        { Digits2(event.end.getHours()) }:{ Digits2(event.end.getMinutes()) }\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            {  \r\n                                event.extendedProps.location && <div className=\"row\">\r\n                                    <div className=\"col-3 pr-0\">\r\n                                        <span className=\"label\">Luogo</span>\r\n                                    </div>\r\n                                    <div className=\"col-9\" style={{ fontSize: 15 }}>\r\n                                        {event.extendedProps.location}\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    })\r\n                }\r\n            } />\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"../..\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport QRCodeScreen from \"./QRCodeScreen\"\r\nimport UserCalendar from \"./UserCalendar\"\r\n\r\nexport default class UserApplication extends React.Component{\r\n\r\n    componentDidMount = () => {\r\n        localStorage.setItem(\"student\", JSON.stringify({\r\n            idStudente: 1,\r\n            idCorso: 1,\r\n            nome: \"Leonardo\",\r\n            cognome: \"Grandolfo\",\r\n            annoFrequentazione: 1,\r\n            cf: \"GRNLRD99D17L219L\",\r\n            dataNascita: \"17-04-1999\",\r\n            code: \"CIAO-GGG\"\r\n        }))\r\n    }\r\n    \r\n    render(): JSX.Element{\r\n        let session = localStorage.getItem(\"student\")\r\n        \r\n        // if(!session)\r\n        //     return <AppLogin />\r\n\r\n        let student = JSON.parse(session) as IStudent\r\n\r\n        return <div className=\"container-fluid px-0\">\r\n            <Router history={routerHistory}>\r\n                    <div className=\"main-screen overflow-auto\" id=\"mainBlock\">\r\n                        <Switch>\r\n                            <Route exact path=\"/userprofile\" render={() => {\r\n                                routerHistory.push(\"/userprofile/qrcode\")\r\n\r\n                                return null\r\n                            }} />\r\n\r\n                            <Route exact path=\"/userprofile/qrcode\" render={() => (\r\n                                <QRCodeScreen studentId={student.idStudente} />\r\n                            )} />\r\n\r\n                            <Route exact path=\"/userprofile/calendar\" render={() => (\r\n                                <UserCalendar student={student} />\r\n                            )} />\r\n\r\n                        </Switch>\r\n                    </div>\r\n\r\n                    <div className=\"bottom-menu\">\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/userprofile/presenze\")} to=\"/userprofile/presenze\">\r\n                            <span>\r\n                                <i className=\"far fa-exclamation-circle fa-fw fa-2x mb-2\"></i>\r\n                                Presenze\r\n                            </span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/userprofile/voti\")} to=\"/userprofile/voti\">\r\n                            <span>\r\n                                <i className=\"fa fa-stars fa-fw fa-2x mb-2\"></i>\r\n                                Voti\r\n                            </span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/userprofile/qrcode\")} to=\"/userprofile/qrcode\">\r\n                            <span>\r\n                                <i className=\"fal fa-qrcode fa-fw fa-2x mb-2\"></i>\r\n                                Codice QR\r\n                            </span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/userprofile/calendar\")} to=\"/userprofile/calendar\">\r\n                            <span>\r\n                                <i className=\"fal fa-calendar fa-fw fa-2x mb-2\"></i>\r\n                                Lezioni\r\n                            </span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/userprofile/account\")} to=\"/userprofile/account\">\r\n                            <span>\r\n                                <i className=\"far fa-user fa-fw fa-2x mb-2\"></i>\r\n                                Profilo\r\n                            </span>\r\n                        </NavLink>\r\n                    </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, superAdminRoute } from \"../../utilities\"\r\nimport { Icon, Spin, Tooltip } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly corsi: ICorso[]\r\n}\r\n\r\nexport default class CorsiList extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            corsi: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                corsi: corsi\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { corsi } = this.state\r\n        \r\n        if(!corsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Lista dei corsi</h3>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={() => routerHistory.push(superAdminRoute+\"/corsi/new\")}>\r\n                <i className=\"fal fa-plus\"></i> Aggiungi corso\r\n            </button>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                \r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th>Descrizione</th>\r\n                            <th>Luogo</th>\r\n                            <th style={{width: \"10%\"}}>Azioni</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            corsi.map(c => {        \r\n                                return <tr>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{c.nome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{c.descrizione}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{c.luogo}</td>\r\n                                    <td>\r\n                                        <Tooltip title=\"Modifica\">\r\n                                            <button type=\"button\" className=\"btn btn-warning text-white circle-btn\" onClick={() => routerHistory.push(superAdminRoute+\"/corsi/edit/\" + c.idCorso)}>\r\n                                                <i className=\"fa fa-pen\"></i>\r\n                                            </button>\r\n                                        </Tooltip>\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Upload, Icon, message } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { imageFileToBase64, superAdminRoute, siteUrl } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly descrizione: string\r\n    readonly luogo: string\r\n    readonly logo: string\r\n}\r\n\r\nexport default class AddNewCorso extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            descrizione: \"\",\r\n            luogo: \"\",\r\n            logo: null\r\n        }\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeDesc = (event: any) => {\r\n        let desc = event.target.value\r\n\r\n        this.setState({\r\n            descrizione: desc\r\n        })\r\n    }\r\n\r\n    changeLuogo = (event: any) => {\r\n        let luogo = event.target.value\r\n\r\n        this.setState({\r\n            luogo: luogo\r\n        })\r\n    }\r\n\r\n    aggiungiCorso = () => {\r\n        const { nome, descrizione, luogo, logo } = this.state\r\n\r\n        if(nome.trim() === \"\" || descrizione.trim() === \"\" || luogo.trim() === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.post(siteUrl+\"/api/corsi\", {\r\n            nome: nome.trim(),\r\n            descrizione: descrizione.trim(),\r\n            luogo: luogo.trim(),\r\n            logo: logo ? logo.trim() : \"\"\r\n        }).then(_ => {\r\n            message.success(\"Corso creato con successo!\")\r\n            routerHistory.push(superAdminRoute+\"/corsi\")\r\n        })\r\n\r\n    }\r\n\r\n    convertImage = (file: any) => {\r\n        imageFileToBase64(file).then(result => {\r\n            this.setState({\r\n                logo: String(result)\r\n            })\r\n        })\r\n\r\n        return false\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, descrizione, luogo, logo } = this.state,\r\n        uploadButton = (\r\n            <div>\r\n                <Icon type=\"plus\" style={{ fontSize: 30, marginBottom: 5 }} />\r\n                <div className=\"ant-upload-text\">Carica immagine</div>\r\n            </div>\r\n        )\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Aggiungi un nuovo corso</h3>\r\n\r\n            <form className=\"row\">\r\n\r\n                <div className=\"form-group mr-3\">\r\n                    <label className=\"text-secondary d-block\">Logo</label>\r\n                    <Upload listType=\"picture-card\" showUploadList={false} beforeUpload={(file) => this.convertImage(file)} className=\"logo-upload\" accept=\"image/*\">\r\n                        {logo ? <img src={logo} alt=\"logo\" style={{ width: \"100%\" }} /> : uploadButton}\r\n                    </Upload>\r\n                </div>\r\n                \r\n                <div className=\"col\">\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col\">\r\n                            <label className=\"text-secondary\">Nome</label>\r\n                            <input name=\"nomecorso\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                        </div>\r\n                        <div className=\"col pr-0\">\r\n                            <label className=\"text-secondary\">Luogo</label>\r\n                            <input name=\"luogo\" type=\"text\" className=\"form-control\" value={luogo} onChange={this.changeLuogo} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col pr-0\">\r\n                            <label className=\"text-secondary\">Breve descrizione</label>\r\n                            <textarea name=\"description\" className=\"form-control\" rows={2} onChange={this.changeDesc}>{descrizione}</textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.aggiungiCorso}>Aggiungi corso</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { routerHistory } from \"../..\"\r\nimport { message, Modal } from \"antd\"\r\nimport { mountLogin, unmountLogin, siteUrl, logoUrl, superAdminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\nimport { isSuperAdmin } from \"../../models/IAdmin\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly adminName: string\r\n    readonly adminPsw: string\r\n}\r\n\r\nexport default class LoginAdmin extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            adminName: \"\",\r\n            adminPsw: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    changeInputName = (event: any) => {\r\n        let name = event.target.value\r\n\r\n        this.setState({\r\n            adminName: name\r\n        })\r\n    }\r\n\r\n    changeInputPassword = (event: any) => {\r\n        let psw = event.target.value\r\n\r\n        this.setState({\r\n            adminPsw: psw\r\n        })\r\n    }\r\n\r\n    tryLogin = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { adminName, adminPsw } = this.state\r\n        let cipher = new Cipher(),\r\n        password = cipher.encode(adminPsw)\r\n\r\n        Axios.post(siteUrl+\"/api/amministratori/loginamministratori\", {\r\n            username: adminName.trim(),\r\n            password: password\r\n        }).then(response => {\r\n            let data = response.data\r\n\r\n            if(isSuperAdmin(data)){\r\n                sessionStorage.setItem(\"superSession\", JSON.stringify(data))\r\n                routerHistory.push(superAdminRoute)\r\n                message.success(\"Login effettuato con successo!\")\r\n            }\r\n            else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Username o Password errati!\",\r\n                    centered: true,\r\n                    maskClosable: true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { adminName, adminPsw } = this.state\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.tryLogin}>\r\n                <h3 className=\"d-inline-block\">Accesso amministratori</h3>\r\n                <img src={logoUrl} height=\"40\" className=\"float-right logo\" alt=\"logo\" />\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Utente di accesso</label>\r\n                    <input name=\"username\" type=\"text\" className=\"form-control\" value={adminName} onChange={this.changeInputName} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Password di accesso</label>\r\n                    <input name=\"password\" type=\"password\" className=\"form-control\" value={adminPsw} onChange={this.changeInputPassword} />\r\n                </div>\r\n\r\n                <input type=\"submit\" value=\"Accedi\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n            </form>\r\n        </div>\r\n    }\r\n\r\n}","import React from \"react\"\r\nimport { Modal, Icon, Spin, Upload, message } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, imageFileToBase64, superAdminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{}\r\nexport interface IState{\r\n    readonly corso: ICorso\r\n    readonly nome: string\r\n    readonly descrizione: string\r\n    readonly luogo: string\r\n    readonly logo: string\r\n}\r\n\r\nexport default class EditCorso extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            corso: null,\r\n            nome: \"\",\r\n            descrizione: \"\",\r\n            luogo: \"\",\r\n            logo: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(superAdminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/corsi/\" + id).then((response) => {\r\n            let corso = response.data as ICorso\r\n\r\n            this.setState({\r\n                corso: corso,\r\n                nome: corso.nome,\r\n                descrizione: corso.descrizione,\r\n                luogo: corso.luogo,\r\n                logo: corso.logo\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeDesc = (event: any) => {\r\n        let desc = event.target.value\r\n\r\n        this.setState({\r\n            descrizione: desc\r\n        })\r\n    }\r\n\r\n    changeLuogo = (event: any) => {\r\n        let luogo = event.target.value\r\n\r\n        this.setState({\r\n            luogo: luogo\r\n        })\r\n    }\r\n\r\n    modificaCorso = () => {\r\n        const { nome, descrizione, luogo, corso, logo } = this.state\r\n\r\n        if(nome.trim() === \"\" || descrizione.trim() === \"\" || luogo.trim() === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.put(siteUrl+\"/api/corsi/\"+corso.idCorso, {\r\n            idCorso: corso.idCorso,\r\n            nome: nome.trim(),\r\n            descrizione: descrizione.trim(),\r\n            luogo: luogo.trim(),\r\n            logo: logo ? logo.trim() : \"\"\r\n        }).then(_ => {\r\n            message.success(\"Corso modificato con successo!\")\r\n            routerHistory.push(superAdminRoute+\"/corsi\")\r\n        })\r\n\r\n    }\r\n\r\n    convertImage = (file: any) => {\r\n        imageFileToBase64(file).then(result => {\r\n            this.setState({\r\n                logo: String(result)\r\n            })\r\n        })\r\n\r\n        return false\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, descrizione, luogo, corso, logo } = this.state,\r\n        uploadButton = (\r\n            <div>\r\n                <Icon type=\"plus\" style={{ fontSize: 30, marginBottom: 5 }} />\r\n                <div className=\"ant-upload-text\">Carica immagine</div>\r\n            </div>\r\n        )\r\n\r\n        if(!corso){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Modifica di un corso</h3>\r\n\r\n            <form className=\"row\">\r\n                <div className=\"form-group mr-3\">\r\n                    <label className=\"text-secondary d-block\">Logo</label>\r\n                    <Upload listType=\"picture-card\" showUploadList={false} beforeUpload={(file) => this.convertImage(file)} className=\"logo-upload\" accept=\"image/*\">\r\n                        {logo ? <img src={logo} alt=\"logo\" style={{ width: \"100%\" }} /> : uploadButton}\r\n                    </Upload>\r\n                </div>\r\n\r\n                <div className=\"col\">\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col\">\r\n                            <label className=\"text-secondary\">Nome</label>\r\n                            <input name=\"nomecorso\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <label className=\"text-secondary\">Luogo</label>\r\n                            <input name=\"luogo\" type=\"text\" className=\"form-control\" value={luogo} onChange={this.changeLuogo} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col\">\r\n                            <label className=\"text-secondary\">Breve descrizione</label>\r\n                            <textarea name=\"description\" className=\"form-control\" rows={2} onChange={this.changeDesc}>{descrizione}</textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.modificaCorso}>Modifica corso</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, superAdminRoute } from \"../../utilities\"\r\nimport { Icon, Spin, Tooltip } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { ITutor } from \"../../models/ITutor\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly tutor: ITutor[]\r\n}\r\n\r\nexport default class TutorList extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            tutor: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/coordinatori\").then(response => {\r\n            let tutor = response.data as ITutor[]\r\n\r\n            this.setState({\r\n                tutor: tutor\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { tutor } = this.state\r\n        \r\n        if(!tutor){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Lista dei coordinatori</h3>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={() => routerHistory.push(superAdminRoute+\"/tutor/new\")}>\r\n                <i className=\"fal fa-plus\"></i> Aggiungi coordinatore\r\n            </button>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                \r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th>Cognome</th>\r\n                            <th style={{width: \"30%\"}}>Corso</th>\r\n                            <th style={{width: \"10%\"}}>Azioni</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            tutor.map(t => {        \r\n                                return <tr>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{t.nome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{t.cognome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{t.corso}</td>\r\n                                    <td>\r\n                                        <Tooltip title=\"Modifica\">\r\n                                            <button type=\"button\" className=\"btn btn-warning text-white circle-btn\" onClick={() => routerHistory.push(superAdminRoute+\"/tutor/edit/\" + t.idCoordinatore)}>\r\n                                                <i className=\"fa fa-pen\"></i>\r\n                                            </button>\r\n                                        </Tooltip>\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Icon, message, Spin } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, superAdminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly email: string\r\n    readonly listaCorsi: ICorso[]\r\n    readonly corso: number\r\n}\r\n\r\nexport default class AddNewTutor extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            email: \"\",\r\n            listaCorsi: null,\r\n            corso: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                listaCorsi: corsi,\r\n                corso: corsi.length ? corsi[0].idCorso : 0\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n\r\n    changeCorso = (event: any) => {\r\n        let corso = parseInt(event.target.value)\r\n\r\n        this.setState({\r\n            corso: corso\r\n        })\r\n    }\r\n\r\n    isExistingCorso = (corso: number) => {\r\n        return this.state.listaCorsi.find(c => c.idCorso === corso)\r\n    }\r\n\r\n    aggiungiTutor = () => {\r\n        const { nome, cognome, email, corso } = this.state\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!this.isExistingCorso(corso)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Corso non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.post(siteUrl+\"/api/coordinatori\", {\r\n            nome: nome.trim(),\r\n            cognome: cognome.trim(),\r\n            email: email,\r\n            idCorso: corso\r\n        }).then(_ => {\r\n            message.success(\"Tutor creato con successo!\")\r\n            routerHistory.push(superAdminRoute+\"/tutor\")\r\n        })\r\n\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, email, listaCorsi } = this.state\r\n\r\n        if(!listaCorsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        if(!listaCorsi.length){\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                È necessario creare almeno un corso per poter inserire un nuovo coordinatore.\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Aggiungi un nuovo coordinatore</h3>\r\n\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"text\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Corso gestito</label>\r\n                        <select name=\"anno\" onChange={this.changeCorso} className=\"custom-select\">\r\n                            {\r\n                                listaCorsi.map(c => {\r\n                                    return <option value={c.idCorso}>{c.nome}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.aggiungiTutor}>Aggiungi coordinatore</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Icon, message, Spin } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, superAdminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { ITutor } from \"../../models/ITutor\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly email: string\r\n    readonly listaCorsi: ICorso[]\r\n    readonly corso: number\r\n}\r\n\r\nexport default class EditTutor extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            email: \"\",\r\n            listaCorsi: null,\r\n            corso: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(superAdminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/coordinatori/\"+id).then(response => {\r\n            let tutor = response.data as ITutor\r\n\r\n            this.setState({\r\n                nome: tutor.nome,\r\n                cognome: tutor.cognome,\r\n                email: tutor.email,\r\n                corso: tutor.idCorso\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                listaCorsi: corsi\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n\r\n    changeCorso = (event: any) => {\r\n        let corso = parseInt(event.target.value)\r\n\r\n        this.setState({\r\n            corso: corso\r\n        })\r\n    }\r\n\r\n    isExistingCorso = (corso: number) => {\r\n        return this.state.listaCorsi.find(c => c.idCorso === corso)\r\n    }\r\n\r\n    aggiungiTutor = () => {\r\n        const { nome, cognome, email, corso } = this.state\r\n        const idCoordinatore = this.props.match.params.id\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!this.isExistingCorso(corso)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Corso non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.put(siteUrl+\"/api/coordinatori/\"+idCoordinatore, {\r\n            idCoordinatore: idCoordinatore,\r\n            nome: nome.trim(),\r\n            cognome: cognome.trim(),\r\n            email: email,\r\n            idCorso: corso\r\n        }).then(_ => {\r\n            message.success(\"Tutor modificato con successo!\")\r\n            routerHistory.push(superAdminRoute+\"/tutor\")\r\n        })\r\n\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, email, listaCorsi, corso } = this.state\r\n\r\n        if(!listaCorsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Modifica di un coordinatore</h3>\r\n\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"text\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Corso gestito</label>\r\n                        <select name=\"anno\" onChange={this.changeCorso} className=\"custom-select\">\r\n                            {\r\n                                listaCorsi.map(c => {\r\n                                    let selected = corso === c.idCorso\r\n\r\n                                    return <option value={c.idCorso} selected={selected}>{c.nome}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.aggiungiTutor}>Modifica coordinatore</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"../..\"\r\nimport LogoCorso from \"../LogoCorso\"\r\nimport Page404 from \"../Page404\"\r\nimport { superAdminRoute } from \"../../utilities\"\r\nimport CorsiList from \"./CorsiList\"\r\nimport AddNewCorso from \"./AddNewCorso\"\r\nimport LoginAdmin from \"./LoginAdmin\"\r\nimport EditCorso from \"./EditCorso\"\r\nimport TutorList from \"./TutorList\"\r\nimport AddNewTutor from \"./AddNewTutor\"\r\nimport EditTutor from \"./EditTutor\"\r\n\r\nexport default class SuperDashboard extends React.Component{\r\n\r\n    componentWillUnmount = () => {\r\n        sessionStorage.removeItem(\"superSession\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n\r\n        let session = sessionStorage.getItem(\"superSession\")\r\n        \r\n        if(!session)\r\n            return <LoginAdmin />\r\n\r\n        return <div className=\"container-fluid\">\r\n            <Router history={routerHistory}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3 bg-blue p-0 menu\">\r\n                        \r\n                        <LogoCorso idCorso={0} />\r\n\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(superAdminRoute+\"/studenti\")} to={superAdminRoute+\"/tutor\"}>\r\n                            <span><i className=\"fal fa-users-crown fa-fw mr-1\"></i> Coordinatori</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(superAdminRoute+\"/corsi\")} to={superAdminRoute+\"/corsi\"}>\r\n                            <span><i className=\"fal fa-list-alt fa-fw mr-1\"></i> Corsi</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => {\r\n                            sessionStorage.removeItem(\"superSession\")\r\n                            routerHistory.push(superAdminRoute)\r\n                        }} exact to={superAdminRoute+\"/login\"}>\r\n                            <span><i className=\"fal fa-power-off fa-fw mr-1\"></i> Esci</span>\r\n                        </NavLink>\r\n                    </div>\r\n  \r\n                    <Switch>\r\n                        <Route exact path={superAdminRoute} render={() => {\r\n                            routerHistory.push(superAdminRoute+\"/tutor\")\r\n\r\n                            return null\r\n                        }} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/tutor\"} render={() => (\r\n                            <TutorList />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/tutor/new\"} render={() => (\r\n                            <AddNewTutor />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/tutor/edit/:id\"} render={(routeProps) => (\r\n                            <EditTutor {...routeProps} />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/corsi\"} render={() => (\r\n                            <CorsiList />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/corsi/new\"} render={() => (\r\n                            <AddNewCorso />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/corsi/edit/:id\"} render={(routeProps) => (\r\n                            <EditCorso {...routeProps} />\r\n                        )} />\r\n\r\n                        <Route render={() => <Page404 goTo={superAdminRoute} />} />\r\n\r\n                    </Switch>\r\n                        \r\n                </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport { Modal } from \"antd\"\r\nimport { mountLogin, unmountLogin, siteUrl } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { routerHistory } from \"../..\"\r\nimport { areStudent } from \"../../models/IStudent\"\r\nimport LogoCorso from \"../LogoCorso\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly codice: string\r\n}\r\n\r\nexport default class CodiceSegreto extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            codice: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    changeCodice = (event: any) => {\r\n        let code = event.target.value\r\n\r\n        this.setState({\r\n            codice: code.trim()\r\n        })\r\n    }\r\n\r\n    inviaCodice = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { codice } = this.state\r\n\r\n        Axios.post(siteUrl+\"/api/firma/accessoremoto\", codice, {headers: {\"Content-Type\": \"application/json\"}}).then(response => {\r\n            let data = response.data\r\n\r\n            if(areStudent(data)){\r\n                sessionStorage.setItem(\"confermaCasa\", JSON.stringify(data))\r\n                routerHistory.push(\"/firmacasa\")\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Il codice non corrisponde a nessun corso/classe.\",\r\n                    centered: true,\r\n                    maskClosable: true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { codice } = this.state\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.inviaCodice}>\r\n                <h3 className=\"d-inline-block\">Accesso firma da casa</h3>\r\n                <LogoCorso forLogin={true} />\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Codice segreto</label>\r\n                    <input name=\"username\" type=\"text\" className=\"form-control\" value={codice} onChange={this.changeCodice} />\r\n                </div>\r\n\r\n                <p className=\"text-muted\">Chiedi al tuo coordinatore il codice segreto per accedere alla firma da casa.</p>\r\n\r\n                <input type=\"submit\" value=\"Prosegui\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n            </form>\r\n        </div>\r\n    }\r\n\r\n}","export interface IStudent{\r\n    readonly idStudente?: number\r\n    readonly email: string\r\n    readonly idCorso: number\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly annoFrequentazione: number\r\n    readonly cf: string\r\n    readonly password?: string\r\n    readonly dataNascita: string\r\n    readonly codice?: string\r\n    readonly ritirato?: boolean\r\n    readonly dataRitiro?: string\r\n    readonly giornate?: number\r\n    readonly frequenza?: number\r\n    readonly promosso?: boolean\r\n}\r\n\r\nexport const isStudent = (obj: any) => {\r\n    try{\r\n        return \"nome\" in obj && \"cognome\" in obj && \"idStudente\" in obj\r\n    }\r\n    catch{\r\n        return false\r\n    }\r\n}\r\n\r\nexport const areStudent = (obj: any) => {\r\n    try{\r\n        obj.forEach((s: any) => {\r\n            if(!isStudent(s))\r\n                return false\r\n        })\r\n\r\n        return true\r\n    }\r\n    catch{\r\n        return false\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Radio } from \"antd\"\r\nimport { mountLogin, unmountLogin, siteUrl } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport LogoCorso from \"../LogoCorso\"\r\nimport { IMessage } from \"../../models/IMessage\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly studenti: IStudent[]\r\n    readonly selectedStudente: IStudent\r\n}\r\n\r\nexport default class FirmaCasa extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            studenti: JSON.parse(sessionStorage.getItem(\"confermaCasa\")) as IStudent[],\r\n            selectedStudente: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    inviaFirma = (e: any) => {\r\n        e.preventDefault()\r\n        const { selectedStudente } = this.state\r\n\r\n        if(!selectedStudente){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Selezionare uno studente.\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.post(siteUrl+\"/api/firmadacasa/firma\", {\r\n            idStudente: selectedStudente.idStudente\r\n        }).then(response => {\r\n            let popup = response.data as IMessage\r\n\r\n            Modal.info({\r\n                title: popup.title,\r\n                content: <div style={{ marginLeft: 38 }}>{popup.message}</div>,\r\n                icon: <i className={\"float-left mr-3 far \"+popup.icon} style={{ color: popup.iconColor, fontSize: 22 }}/>\r\n            })\r\n        })\r\n    }\r\n\r\n    scegliStudente = (s: IStudent) => {\r\n        this.setState({\r\n            selectedStudente: s\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { studenti, selectedStudente } = this.state\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.inviaFirma}>\r\n                <h3 className=\"d-inline-block\">Firma da casa</h3>\r\n                <LogoCorso idCorso={studenti[0].idCorso} forLogin={true} />\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Scegli lo studente</label>\r\n                    <div className=\"multiselect form-control p-0\">\r\n                        {\r\n                            studenti.map(s => {\r\n                                let checked = selectedStudente === s,\r\n                                classname = checked ? \"checked\" : \"\"\r\n                                \r\n                                return <label className={\"option \"+classname}>\r\n                                    <Radio className=\"mr-2\" onChange={() => this.scegliStudente(s)} checked={checked} /> {s.nome} {s.cognome}\r\n                                </label>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <p className=\"text-muted\">Ricorda che non puoi firmare per altre persone!</p>\r\n\r\n                <input type=\"submit\" value=\"Firma\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n            </form>\r\n        </div>\r\n    }\r\n\r\n}","import React from \"react\"\r\nimport CodiceSegreto from \"./CodiceSegreto\"\r\nimport FirmaCasa from \"./FirmaCasa\"\r\n\r\nexport default class DashboardCasa extends React.Component{\r\n\r\n    componentWillUnmount = () => {\r\n        sessionStorage.removeItem(\"confermaCasa\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        let session = sessionStorage.getItem(\"confermaCasa\")\r\n        \r\n        if(!session)\r\n            return <CodiceSegreto />\r\n\r\n        return <FirmaCasa />\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { createHashHistory } from \"history\"\r\nimport \"./index.scss\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\nimport Main from \"./comp/Main\"\r\nimport { Router, Switch, Route } from \"react-router-dom\"\r\nimport Dashboard from \"./comp/admin/Dashboard\"\r\nimport UserApplication from \"./comp/mobile/UserApplication\"\r\nimport Page404 from \"./comp/Page404\"\r\nimport moment from \"moment\"\r\nimport \"moment/locale/it\"\r\nimport SuperDashboard from \"./comp/superadmin/SuperDashboard\"\r\nimport { superAdminRoute, adminRoute } from \"./utilities\"\r\nimport DashboardCasa from \"./comp/firmacasa/DashboardCasa\"\r\n\r\nmoment.locale(\"it\")\r\n\r\nexport const routerHistory = createHashHistory()\r\n\r\nReactDOM.render(<Router history={routerHistory}>\r\n    <Switch>\r\n        <Route exact path=\"/\" render={() => {\r\n            routerHistory.push(\"/firme/\")\r\n\r\n            return null\r\n        }} />\r\n\r\n        <Route path=\"/firme/\" render={() => (\r\n            <Main />\r\n        )} />\r\n\r\n        <Route path={adminRoute} render={() => (\r\n            <Dashboard />\r\n        )} />\r\n\r\n        <Route path=\"/userprofile\" render={() => (\r\n            <UserApplication />\r\n        )} />\r\n\r\n        <Route path={superAdminRoute} render={() => (\r\n            <SuperDashboard />\r\n        )} />\r\n\r\n        <Route path=\"/firmacasa\" render={() => (\r\n            <DashboardCasa />\r\n        )} />\r\n\r\n        <Route render={() => <Page404 goTo=\"/\" />} />\r\n    </Switch>\r\n</Router>, document.getElementById(\"root\"))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}