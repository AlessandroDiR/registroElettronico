{"version":3,"sources":["utilities.ts","serviceWorker.ts","models/IMessage.ts","comp/Firma.tsx","comp/LessonsCalendar.tsx","comp/SceltaCorso.tsx","comp/SceltaClasse.tsx","comp/LogoCorso.tsx","comp/CodiceAccesso.tsx","comp/Main.tsx","models/Cipher.ts","comp/admin/LoginTutor.tsx","models/IAdmin.ts","comp/admin/StudentsList.tsx","comp/admin/AddNewStudent.tsx","comp/admin/PresenzeTable.tsx","comp/admin/StudentDetails.tsx","comp/admin/DocentiList.tsx","comp/admin/AddNewDocente.tsx","comp/admin/LezioniDocenteTable.tsx","comp/admin/DocenteDetails.tsx","comp/admin/EditDocente.tsx","comp/admin/EditStudente.tsx","comp/admin/StudentsImport.tsx","comp/admin/MaterieList.tsx","comp/ImageScale.tsx","comp/admin/ConfigForm.tsx","comp/admin/ConfigCalendar.tsx","comp/Page404.tsx","comp/admin/Dashboard.tsx","comp/mobile/QRCodeScreen.tsx","comp/mobile/UserCalendar.tsx","comp/mobile/UserApplication.tsx","comp/docenti/LoginDocenti.tsx","models/IAdminDocente.ts","comp/docenti/LezioniDocente.tsx","comp/docenti/LezioneDetails.tsx","comp/docenti/DocentiDashboard.tsx","comp/superadmin/CorsiList.tsx","comp/superadmin/AddNewCorso.tsx","comp/superadmin/LoginAdmin.tsx","comp/superadmin/EditCorso.tsx","comp/superadmin/TutorList.tsx","comp/superadmin/AddNewTutor.tsx","comp/superadmin/EditTutor.tsx","comp/superadmin/SuperDashboard.tsx","index.tsx"],"names":["siteUrl","logoUrl","adminRoute","superAdminRoute","docentiRoute","Digits2","n","validateTime","time","test","startEdit","id","entrataInput","document","getElementById","uscitaInput","entrataSpan","uscitaSpan","editBtn","confirmBtn","hideAll","style","display","entrataInputs","querySelectorAll","uscitaInputs","entrataSpans","uscitaSpans","confirmBtns","editBtns","forEach","e","formattaData","d","convert","from","split","date","Date","Number","getFullYear","getMonth","getDate","formatItalian","capitalizeFirst","name","splitStr","capitalizeQuote","toLowerCase","i","length","charAt","toUpperCase","substring","join","mountLogin","getElementsByTagName","classList","add","unmountLogin","remove","imageFileToBase64","file","readImageFile","a","Promise","resolve","reject","reader","FileReader","onload","base64Img","Buffer","target","result","toString","onerror","readAsArrayBuffer","resizePopup","mainBlock","popup","width","clientWidth","window","addEventListener","Boolean","location","hostname","match","genericError","title","icon","iconColor","message","Firma","props","maxLength","componentDidMount","parseInt","sessionStorage","getItem","Axios","get","then","response","corso","data","setState","changeCode","event","code","value","tryToLog","switchInput","idCorso","anno","axios","post","showMessagePopup","catch","_","disable","input","setAttribute","removeAttribute","focus","setTimeout","state","cambiaCorso","removeItem","routerHistory","push","this","type","spin","className","autoFocus","onChange","nome","indicator","height","placement","onClick","color","React","PureComponent","LessonsCalendar","classe","calendar","fontSize","plugins","googleCalendarPlugin","dayGridPlugin","events","googleCalendarId","idGoogleCalendar","googleCalendarApiKey","defaultView","fixedWeekCount","firstDay","themeSystem","eventTimeFormat","hour","minute","meridiem","buttonText","today","header","right","locale","eventClick","info","jsEvent","preventDefault","Modal","maskClosable","centered","content","start","getHours","getMinutes","end","extendedProps","SceltaCorso","corsi","componentWillUnmount","chooseCorso","setItem","map","c","SceltaClasse","chooseClasse","Component","LogoCorso","catchNull","logo","src","alt","CodiceAccesso","cambiaCodice","codice","inviaCodice","onSubmit","Main","focusInput","confermaTutor","history","activeClassName","exact","to","path","render","Cipher","maximum","msg","shift","finalMessage","letter","charInt","charCodeAt","newInt","String","fromCharCode","LoginTutor","changeInputName","adminName","changeInputPassword","psw","adminPsw","tryLogin","password","encode","username","trim","obj","isAdmin","error","JSON","stringify","success","StudentsList","students","showConfirm","student","confirm","cognome","marginLeft","d2","format","okText","okType","cancelText","onOk","dataRitiro","studente","ritirato","put","idStudente","stu","currentList","indexOf","changeSelection","newList","selection","find","s","filter","concat","selectAll","selectionList","checked","annoFrequentazione","showHideModal","confirmModal","moveStudents","select","studenti","allRetired","group","sortbyId","b","promuoviStudent","delete","Panel","Collapse","TabPane","Tabs","groups","promosso","sort","ritirati","defaultActiveKey","tab","key","g","checkedAll","tabTitle","element","bg","disabled","maxWidth","cf","frequenza","visible","onCancel","bordered","AddNewStudent","changeNome","changeCognome","changeEmail","email","changeData","dataNascita","changeAnnoScolastico","annoS","annoScolastico","changeCF","CF","aggiungiStudente","PresenzeTable","presenze","changeEntrata","entrata","entrataEdit","changeUscita","uscita","uscitaEdit","startTimeEdit","presenza","p","idPresenza","ingresso","animateSpans","span1","span2","node1","parentNode","node2","confirmEdit","idLezione","output","newPresenze","newP","reloadTotali","getCategorie","categorie","lezione","changeFilter","Option","Select","presences","defaultValue","showSearch","l","StudentDetails","params","isNaN","oreTotali","roundToTwo","loadTotali","totPresenze","toggleModal","modal","downloadQR","pngUrl","toDataURL","replace","downloadLink","createElement","href","download","body","appendChild","click","removeChild","getQRCode","total","Math","round","perc","percent","strokeColor","suffix","decimalSeparator","groupSeparator","footer","size","DocentiList","docenti","switchList","showAll","showDeleteConfirm","docente","context","idDocente","backRetire","doc","isInCorso","docs","transform","monteOre","orePrimo","oreSecondo","AddNewDocente","materie","aggiungiDocente","corsiSel","materieSel","tenere","insegnare","m","idMateria","switchMateria","materiaId","switchCorso","corsoId","f","classname","LezioniDocenteTable","canEdit","DocenteDetails","alignItems","justifyContent","EditDocente","modificaDocente","EditStudente","modificaStudente","moment","fields","label","field","StudentsImport","splitCSV","renderOptions","rows","fileContent","changeVarPos","varName","readFile","showImportPreview","readAsText","list","r","cells","addList","hidePopup","confirmImport","flexDirection","accept","beforeUpload","MaterieList","showModal","nomeMateria","descMateria","hideEditModal","showEditModal","nomeEdit","materiaEdit","materia","descEdit","descrizione","aggiungiMateria","modificaMateria","changeNomeEdit","changeDesc","desc","changeDescEdit","ImageScale","scaleImage","scalable","scaled","coords","firstclass","ConfigForm","calendarId","changeID","saveConfig","IdCalendario","idCalendario","IdCorso","Anno","IdGoogleCalendar","ConfigCalendar","showHelp","top","marginTop","rel","getElementsByClassName","scrollTo","Page404","goTo","Dashboard","session","admin","parse","routeProps","QRCodeScreen","setInterval","reloadCode","studentId","UserCalendar","UserApplication","localStorage","LoginDocenti","isAdminDocente","LezioniDocente","lezioni","inizio","fine","LezioneDetails","frequentata","presente","DocentiDashboard","CorsiList","luogo","AddNewCorso","changeLuogo","aggiungiCorso","convertImage","uploadButton","marginBottom","listType","showUploadList","LoginAdmin","isSuperAdmin","EditCorso","modificaCorso","TutorList","tutor","t","idCoordinatore","AddNewTutor","listaCorsi","changeCorso","isExistingCorso","aggiungiTutor","EditTutor","selected","SuperDashboard","createHashHistory","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.331a6638.chunk.js","sourcesContent":["//export const siteUrl = \"http://localhost:5000\" \r\nexport const siteUrl = \"https://avocadoapi.azurewebsites.net\"\r\nexport const logoUrl = \"fitstic_logo.png\"\r\n\r\nexport const adminRoute = \"/adminpanel\"\r\nexport const superAdminRoute = \"/superpanel\"\r\nexport const docentiRoute = \"/docentipanel\"\r\n\r\nexport const Digits2 = (n: number) => {\r\n    return n < 10 ? \"0\" + n : n\r\n}\r\n\r\nexport const validateTime = (time: string) => {\r\n    return /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])$/.test(time)\r\n}\r\n\r\nexport const startEdit = (id: number) => {\r\n    let entrataInput = document.getElementById(\"entrataInput_\" + id),\r\n    uscitaInput = document.getElementById(\"uscitaInput_\" + id),\r\n    entrataSpan = document.getElementById(\"entrataSpan_\" + id),\r\n    uscitaSpan = document.getElementById(\"uscitaSpan_\" + id),\r\n    editBtn = document.getElementById(\"editBtn_\" + id),\r\n    confirmBtn = document.getElementById(\"confirmBtn_\" + id)\r\n\r\n    hideAll()\r\n\r\n    entrataInput.style.display = \"block\"\r\n    uscitaInput.style.display = \"block\"\r\n    confirmBtn.style.display = \"inline-block\"\r\n    entrataSpan.style.display = \"none\"\r\n    uscitaSpan.style.display = \"none\"\r\n    editBtn.style.display = \"none\"\r\n}\r\n\r\nexport const hideAll = () => {\r\n    let entrataInputs = document.querySelectorAll(\"input[id^='entrataInput_']\"),\r\n    uscitaInputs = document.querySelectorAll(\"input[id^='uscitaInput_']\"),\r\n    entrataSpans = document.querySelectorAll(\"span[id^='entrataSpan_']\"),\r\n    uscitaSpans = document.querySelectorAll(\"span[id^='uscitaSpan_']\"),\r\n    confirmBtns = document.querySelectorAll(\"button[id^='confirmBtn_']\"),\r\n    editBtns = document.querySelectorAll(\"button[id^='editBtn_']\")\r\n    \r\n    entrataInputs.forEach(e => {\r\n        (e as HTMLElement).style.display = \"none\"\r\n    })\r\n    uscitaInputs.forEach(e => {\r\n        (e as HTMLElement).style.display = \"none\"\r\n    })\r\n    confirmBtns.forEach(e => {\r\n        (e as HTMLElement).style.display = \"none\"\r\n    })\r\n    entrataSpans.forEach(e => {\r\n        (e as HTMLElement).style.display = \"block\"\r\n    })\r\n    uscitaSpans.forEach(e => {\r\n        (e as HTMLElement).style.display = \"block\"\r\n    })\r\n    editBtns.forEach(e => {\r\n        (e as HTMLElement).style.display = \"inline-block\"\r\n    })\r\n}\r\n\r\nexport const formattaData = (d: string, convert?: boolean) => {\r\n    let from = d.split(/[/-]/g),\r\n    date = convert ? new Date(Number(from[2]), Number(from[1]) - 1, Number(from[0])) : new Date(d)\r\n\r\n    return `${date.getFullYear()}-${Digits2(date.getMonth() + 1)}-${Digits2(date.getDate())}`\r\n}\r\n\r\nexport const formatItalian = (d: string) => {\r\n    let date = new Date(d)\r\n\r\n    return `${Digits2(date.getDate())}-${Digits2(date.getMonth() + 1)}-${date.getFullYear()}` \r\n}\r\n\r\nexport const getDateDay = (d: string) => {\r\n    let date = new Date(d)\r\n\r\n    return Digits2(date.getDate()).toString()\r\n}\r\n\r\nexport const getDateMonth = (d: string) => {\r\n    let date = new Date(d)\r\n\r\n    return Digits2(date.getMonth() + 1).toString()\r\n}\r\n\r\nexport const getDateYear = (d: string) => {\r\n    let date = new Date(d)\r\n\r\n    return date.getFullYear().toString()\r\n}\r\n\r\nexport const capitalizeFirst = (name: string) => {\r\n    let splitStr = capitalizeQuote(name.toLowerCase()).split(\" \")\r\n\r\n    for (let i = 0; i < splitStr.length; i++) {\r\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1) \r\n    }\r\n   \r\n    return splitStr.join(\" \")\r\n}\r\n\r\nexport const capitalizeQuote = (name: string) => {\r\n    let splitStr = name.toLowerCase().split(\"'\")\r\n\r\n    for (let i = 0; i < splitStr.length; i++) {\r\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1)\r\n    }\r\n   \r\n    return splitStr.join(\"'\")\r\n}\r\n\r\nexport const mountLogin = () => {\r\n    let body = document.getElementsByTagName(\"body\")[0]\r\n\r\n    body.classList.add(\"login\")\r\n}\r\nexport const unmountLogin = () => {\r\n    let body = document.getElementsByTagName(\"body\")[0]\r\n\r\n    body.classList.remove(\"login\")\r\n}\r\n\r\nexport const imageFileToBase64 = async (file: any) => {\r\n    function readImageFile(file: any){\r\n        return new Promise((resolve, reject) => {\r\n            let reader = new FileReader()\r\n        \r\n            reader.onload = e => {\r\n                let base64Img = new Buffer(e.target.result as any, \"binary\").toString(\"base64\"),\r\n                src = \"data:image/png;base64,\" + base64Img\r\n\r\n                resolve(src)\r\n            }\r\n        \r\n            reader.onerror = reject\r\n        \r\n            reader.readAsArrayBuffer(file)\r\n        })     \r\n    }\r\n\r\n    return readImageFile(file)\r\n}\r\n\r\nexport const resizePopup = () => {\r\n    let mainBlock = document.getElementById(\"mainBlock\"),\r\n    popup = document.getElementById(\"popup\"),\r\n    width = mainBlock ? mainBlock.clientWidth : 0\r\n\r\n    if(mainBlock && popup)\r\n        popup.style.width = width + \"px\"\r\n}\r\n\r\nwindow.addEventListener(\"load\", resizePopup)\r\nwindow.addEventListener(\"resize\", resizePopup)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export interface IMessage{\r\n    readonly title: string\r\n    readonly icon: string\r\n    readonly iconColor: string\r\n    readonly message: string\r\n    readonly time: number\r\n}\r\n\r\nexport const genericError = {\r\n    title: \"Ops!\",\r\n    icon: \"fa-times-circle\",\r\n    iconColor: \"#de1e30\",\r\n    message: \"È stato riscontrato un errore durante l'accesso.\",\r\n    time: 3000\r\n}","import React from \"react\"\r\nimport axios from \"axios\"\r\nimport { IMessage, genericError } from \"../models/IMessage\"\r\nimport { siteUrl, resizePopup } from \"../utilities\"\r\nimport { routerHistory } from \"..\"\r\nimport { Divider, Tooltip, Spin, Icon } from \"antd\"\r\nimport { ICorso } from \"../models/ICorso\"\r\nimport Axios from \"axios\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly code: string\r\n    readonly popup: IMessage\r\n    readonly corso: ICorso\r\n}\r\n\r\nexport default class Firma extends React.PureComponent<IProps, IState>{\r\n    maxLength = 16\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            code: \"\",\r\n            popup: genericError,\r\n            corso: null\r\n        }\r\n    }\r\n    \r\n    componentDidMount = () => {\r\n        let id = parseInt(sessionStorage.getItem(\"corso\"))\r\n\r\n        Axios.get(siteUrl+\"/api/corsi/\"+id).then(response => {\r\n            let corso = response.data as ICorso\r\n\r\n            this.setState({\r\n                corso: corso\r\n            })\r\n        })\r\n\r\n        resizePopup()\r\n    }\r\n\r\n    changeCode = (event: any) => {\r\n        let code = event.target.value\r\n\r\n        this.setState({\r\n            code: code\r\n        })\r\n\r\n        this.tryToLog(code)\r\n    }\r\n\r\n    tryToLog = (code: string) => {\r\n        if(code.length < this.maxLength) return false\r\n\r\n        this.switchInput(true)\r\n\r\n        let idCorso = parseInt(sessionStorage.getItem(\"corso\")),\r\n        anno = parseInt(sessionStorage.getItem(\"classe\"))\r\n        \r\n        axios.post(siteUrl + \"/api/firma\", {\r\n            code: code,\r\n            idCorso: idCorso,\r\n            anno: anno\r\n        }).then((response) => {\r\n            this.setState({\r\n                popup: response.data as IMessage\r\n            })\r\n\r\n            this.showMessagePopup()\r\n        }).catch((_) => {\r\n            this.setState({\r\n                popup: genericError\r\n            })\r\n\r\n            this.showMessagePopup()\r\n        })\r\n    }\r\n\r\n    switchInput = (disable: boolean) => {\r\n        let input = document.getElementById(\"mainInput\") as HTMLInputElement\r\n\r\n        if(!input) return\r\n\r\n        if(disable)\r\n            input.setAttribute(\"disabled\", \"disabled\")\r\n        else{\r\n            input.value = \"\"\r\n            input.removeAttribute(\"disabled\")\r\n            input.focus()\r\n        }\r\n    }\r\n\r\n    showMessagePopup = () => {\r\n        let popup = document.getElementById(\"popup\")\r\n\r\n        if(!popup) return\r\n\r\n        popup.classList.add(\"show\")\r\n\r\n        setTimeout(() => {\r\n            popup.classList.remove(\"show\")\r\n            this.switchInput(false)\r\n        }, this.state.popup.time)\r\n    }\r\n\r\n    cambiaCorso = () => {\r\n        sessionStorage.removeItem(\"corso\")\r\n        sessionStorage.removeItem(\"classe\")\r\n\r\n        routerHistory.push(\"/\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { popup, corso } = this.state\r\n        let icon = <Icon type=\"loading\" spin />\r\n\r\n        return <div className=\"col\" id=\"mainBlock\">\r\n            <div className=\"text-center w-100\">\r\n                <h2 className=\"text-center my-3 font-weight-normal\">Scannerizza il codice</h2>\r\n                <input autoFocus type=\"password\" className=\"form-control text-center mx-auto shadow-sm font-weight-normal\" value={this.state.code} onChange={this.changeCode} maxLength={this.maxLength} id=\"mainInput\" />\r\n\r\n                <div className=\"top-info\">\r\n                    {\r\n                        corso ? corso.nome : <Spin indicator={icon} />\r\n                    }\r\n                        <Divider type=\"vertical\" style={{ height: 20 }} />\r\n                    {\r\n                        parseInt(sessionStorage.getItem(\"classe\")) === 1 ? \"Primo anno\" : \"Secondo anno\"\r\n                    }\r\n                        <Divider type=\"vertical\" style={{ height: 20 }} />\r\n                    <Tooltip placement=\"bottomRight\" title=\"Cambia il corso o la classe per firmare\">\r\n                        <button type=\"button\" className=\"btn btn-sm btn-blue\" onClick={this.cambiaCorso}>\r\n                            <i className=\"far fa-repeat-alt fa-fw mr-1\"></i>\r\n                            Cambia\r\n                        </button>\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"popup\">\r\n                <div className=\"w-100\">\r\n                    <i className={\"fal fa-fw fa-lg fa-6x \" + popup.icon} style={{ color: popup.iconColor}}></i>\r\n                    <h2 className=\"mt-5\">{popup.title}</h2>\r\n                    <div className=\"mt-2\">{popup.message}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport FullCalendar from \"@fullcalendar/react\"\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\"\r\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\"\r\nimport { Digits2, siteUrl } from \"../utilities\"\r\nimport { Modal, Icon, Spin } from \"antd\"\r\nimport { ICalendar } from \"../models/ICalendar\"\r\nimport Axios from \"axios\"\r\n\r\nimport \"@fullcalendar/core/main.css\"\r\nimport \"@fullcalendar/timegrid/main.css\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly calendar: ICalendar\r\n}\r\n\r\nexport default class LessonsCalendar extends React.PureComponent<IProps, IState> {\r\n    constructor(props: IProps){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            calendar: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let idCorso = parseInt(sessionStorage.getItem(\"corso\")),\r\n        classe = parseInt(sessionStorage.getItem(\"classe\"))\r\n        \r\n        Axios.get(siteUrl+\"/api/calendari/\"+idCorso+\"/\"+classe).then(response => {\r\n            let calendar = response.data as ICalendar\r\n\r\n            this.setState({\r\n                calendar: calendar\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { calendar } = this.state\r\n    \r\n        if(!calendar){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-3\" id=\"mainBlock\">\r\n            \r\n            <FullCalendar\r\n                plugins={[ googleCalendarPlugin, dayGridPlugin ]}\r\n                events={ { googleCalendarId: calendar.idGoogleCalendar} }\r\n                googleCalendarApiKey={\"AIzaSyCEEaAbHOYhofQs-iLdHd_J8-KyD_IlRbE\"}\r\n                defaultView=\"dayGridMonth\"\r\n                fixedWeekCount={false}\r\n                firstDay={1}\r\n                themeSystem={\"bootstrap\"}\r\n                eventTimeFormat={{\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                    meridiem: false\r\n                }}\r\n                buttonText={{\r\n                    today: \"Mese corrente\"\r\n                }}\r\n                header={{\r\n                    right: \"prev, next\"\r\n                }}\r\n                locale={\"it\"}\r\n                eventClick={\r\n                    function(info){\r\n                        info.jsEvent.preventDefault()\r\n                        let event = info.event\r\n                        \r\n                        Modal.info({\r\n                            maskClosable: true,\r\n                            centered: true,\r\n                            icon: null,\r\n                            title: event.title,\r\n                            content: <div className=\"mt-3\" style={{ fontSize: 20 }}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-3 pr-0\">\r\n                                        <span className=\"label\">Inizio</span>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <span className=\"desc\">\r\n                                            { Digits2(event.start.getHours()) }:{ Digits2(event.start.getMinutes()) }\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-3 pr-0\">\r\n                                        <span className=\"label\">Fine</span>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <span className=\"desc\">\r\n                                            { Digits2(event.end.getHours()) }:{ Digits2(event.end.getMinutes()) }\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                {  \r\n                                    event.extendedProps.location && <div className=\"row\">\r\n                                        <div className=\"col-3 pr-0\">\r\n                                            <span className=\"label\">Luogo</span>\r\n                                        </div>\r\n                                        <div className=\"col-9\" style={{ fontSize: 15 }}>\r\n                                            {event.extendedProps.location}\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        })\r\n                    }\r\n                }\r\n            />\r\n        </div>\r\n    }\r\n  \r\n  }","import React from \"react\"\r\nimport { siteUrl, mountLogin, unmountLogin } from \"../utilities\"\r\nimport { ICorso } from \"../models/ICorso\"\r\nimport Axios from \"axios\"\r\nimport { Spin, Icon } from \"antd\"\r\nimport { routerHistory } from \"..\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly corsi: ICorso[]\r\n}\r\n\r\nexport default class SceltaCorso extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            corsi: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                corsi: corsi\r\n            })\r\n        })\r\n\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    chooseCorso = (id: number) => {\r\n        sessionStorage.setItem(\"corso\", id.toString())\r\n        routerHistory.push(\"/\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { corsi } = this.state\r\n\r\n        if(!corsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50, color: \"#fff\" }} spin />\r\n\r\n            return <div className=\"col-12 px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100 bg-white py-3 rounded shadow\">\r\n                <h3 className=\"text-center\">Scegli il corso</h3>\r\n\r\n                {\r\n                    corsi.map(c => {\r\n                        return <div className=\"py-2 text-center pointer corso-item\" onClick={() => this.chooseCorso(c.idCorso)}>\r\n                            {/* <img src={c.logo} alt=\"logo\" height=\"28\" className=\"mr-2\" /> */}\r\n                            <span className=\"align-middle\">{c.nome}</span>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}","import React from \"react\"\r\nimport { mountLogin, unmountLogin } from \"../utilities\"\r\nimport { routerHistory } from \"..\"\r\n\r\nexport default class SceltaClasse extends React.Component{\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    chooseClasse = (id: number) => {\r\n        sessionStorage.setItem(\"classe\", id.toString())\r\n        routerHistory.push(\"/\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100 bg-white py-3 rounded shadow\">\r\n                <h3 className=\"text-center\">Scegli la classe</h3>\r\n\r\n                <div className=\"py-2 text-center pointer corso-item\" onClick={() => this.chooseClasse(1)}>\r\n                    Primo anno\r\n                </div>\r\n                <div className=\"py-2 text-center pointer corso-item\" onClick={() => this.chooseClasse(2)}>\r\n                    Secondo anno\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}","import React from \"react\"\r\nimport { Icon, Spin } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, logoUrl } from \"../utilities\"\r\nimport { ICorso } from \"../models/ICorso\"\r\n\r\nexport interface IProps{\r\n    readonly idCorso?: string | number\r\n}\r\nexport interface IState{\r\n    readonly logo: string\r\n}\r\n\r\nexport default class LogoCorso extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            logo: null\r\n        }\r\n    }\r\n\r\n    catchNull = () => {\r\n        this.setState({\r\n            logo: logoUrl\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.idCorso){\r\n            this.catchNull()\r\n            return\r\n        }\r\n        \r\n        Axios.get(siteUrl+\"/api/corsi/\"+this.props.idCorso).then(response => {\r\n            let corso = response.data as ICorso\r\n\r\n            if(!corso.logo){\r\n                this.catchNull()\r\n                return\r\n            }\r\n\r\n            this.setState({\r\n                logo: corso.logo\r\n            })\r\n        }).catch(_ =>{\r\n            this.catchNull()\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { logo } = this.state\r\n        \r\n        if(!logo){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50, color: \"#fff\" }} spin />\r\n\r\n            return <div className=\"text-center py-4\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"logo-block px-3 py-4\">\r\n            <img src={logo} height=\"100\" className=\"mx-auto d-block logo\" alt=\"logo\" />\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { mountLogin, unmountLogin } from \"../utilities\"\r\nimport { routerHistory } from \"..\"\r\n\r\nexport interface IProps{\r\n    readonly idCorso: number\r\n}\r\nexport interface IState{\r\n    readonly codice: string\r\n}\r\nexport default class CodiceAccesso extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            codice: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    cambiaCodice = (e: any) => {\r\n        let codice = e.target.value\r\n\r\n        this.setState({\r\n            codice: codice\r\n        })\r\n    }\r\n\r\n    inviaCodice = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        sessionStorage.setItem(\"confermaTutor\", \"true\")\r\n        routerHistory.push(\"/\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.inviaCodice}>\r\n                <h3 className=\"text-center\">Conferma coordinatore</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Codice di conferma</label>\r\n                    <input name=\"codice\" type=\"password\" className=\"form-control\" value={this.state.codice} onChange={this.cambiaCodice} />\r\n                </div>\r\n\r\n                <input type=\"submit\" value=\"Prosegui\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n            </form>\r\n        </div>\r\n\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"..\"\r\nimport Firma from \"./Firma\"\r\nimport LessonsCalendar from \"./LessonsCalendar\"\r\nimport SceltaCorso from \"./SceltaCorso\"\r\nimport SceltaClasse from \"./SceltaClasse\"\r\nimport LogoCorso from \"./LogoCorso\"\r\nimport CodiceAccesso from \"./CodiceAccesso\"\r\n\r\nexport default class Main extends React.Component{\r\n\r\n    focusInput = () => {\r\n        let input = document.getElementById(\"mainInput\") as HTMLInputElement\r\n\r\n        if(input)\r\n            input.focus()\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        let idCorso = sessionStorage.getItem(\"corso\"),\r\n        classe = sessionStorage.getItem(\"classe\"),\r\n        confermaTutor = sessionStorage.getItem(\"confermaTutor\")\r\n\r\n        if(!idCorso)\r\n            return <SceltaCorso />\r\n\r\n        if(!classe)\r\n            return <SceltaClasse />\r\n\r\n        if(!confermaTutor)\r\n            return <CodiceAccesso idCorso={parseInt(idCorso)} />\r\n\r\n        return <div className=\"container-fluid\" onClick={this.focusInput}>\r\n\r\n            <Router history={routerHistory}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3 bg-blue p-0 menu\">\r\n                        \r\n                        <LogoCorso idCorso={sessionStorage.getItem(\"corso\")} />\r\n\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/\")} exact to=\"/firme/\">\r\n                            <span>Home</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/calendar\")} exact to=\"/firme/calendar\">\r\n                            <span>Calendario</span>\r\n                        </NavLink>\r\n                    </div>\r\n\r\n                    <Switch>\r\n                        <Route exact path=\"/firme/\" render={() => (\r\n                            <Firma />\r\n                        )} />\r\n\r\n                        <Route exact path=\"/firme/calendar\" render={() => (\r\n                            <LessonsCalendar />\r\n                        )} />\r\n                    </Switch>\r\n                        \r\n                </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}","export class Cipher{\r\n    private maximum = 65535\r\n\r\n    public encode(msg: string, shift: number = -4){\r\n        let finalMessage = \"\"\r\n    \r\n        if(shift < 0)\r\n            shift = -shift\r\n    \r\n        for(let i = 0; i < msg.length; i++){\r\n            let letter = msg[i],\r\n            charInt = letter.charCodeAt(0),\r\n            newInt = charInt + shift\r\n\r\n            if(newInt > this.maximum)\r\n                newInt = newInt - (this.maximum + 1)\r\n\r\n            letter = String.fromCharCode(newInt)\r\n\r\n            finalMessage += letter\r\n        }\r\n        \r\n        return finalMessage\r\n    }\r\n\r\n    public decode(msg: string, shift: number = -4){\r\n        let finalMessage = \"\"\r\n    \r\n        if(shift < 0)\r\n            shift = -shift\r\n    \r\n        for(let i = 0; i < msg.length; i++){\r\n            let letter = msg[i],\r\n            charInt = letter.charCodeAt(0),\r\n            newInt = charInt - shift\r\n\r\n            if(newInt < 0)\r\n                newInt = this.maximum + (newInt + 1)\r\n\r\n            letter = String.fromCharCode(newInt)\r\n\r\n            finalMessage += letter\r\n        }\r\n        \r\n        return finalMessage\r\n    }\r\n}","import React from \"react\"\r\nimport { routerHistory } from \"../..\"\r\nimport { message, Modal } from \"antd\"\r\nimport { mountLogin, unmountLogin, siteUrl, logoUrl, adminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\nimport { isAdmin } from \"../../models/IAdmin\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly adminName: string\r\n    readonly adminPsw: string\r\n}\r\n\r\nexport default class LoginTutor extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            adminName: \"\",\r\n            adminPsw: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    changeInputName = (event: any) => {\r\n        let name = event.target.value\r\n\r\n        this.setState({\r\n            adminName: name\r\n        })\r\n    }\r\n\r\n    changeInputPassword = (event: any) => {\r\n        let psw = event.target.value\r\n\r\n        this.setState({\r\n            adminPsw: psw\r\n        })\r\n    }\r\n\r\n    tryLogin = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { adminName, adminPsw } = this.state\r\n        let cipher = new Cipher(),\r\n        password = cipher.encode(adminPsw)\r\n\r\n        Axios.post(siteUrl+\"/api/coordinatori/logincoordinatore\", {\r\n            username: adminName.trim(),\r\n            password: password\r\n        }).then(response => {\r\n            let data = response.data\r\n\r\n            if(isAdmin(data)){\r\n                sessionStorage.setItem(\"adminSession\", JSON.stringify(data))\r\n                routerHistory.push(adminRoute)\r\n                message.success(\"Login effettuato con successo!\")\r\n            }\r\n            else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Username o Password errati!\",\r\n                    centered: true,\r\n                    maskClosable: true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { adminName, adminPsw } = this.state\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.tryLogin}>\r\n                <h3 className=\"d-inline-block\">Accesso coordinatori</h3>\r\n                <img src={logoUrl} height=\"40\" className=\"float-right logo\" alt=\"logo\" />\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Utente di accesso</label>\r\n                    <input name=\"username\" type=\"text\" className=\"form-control\" value={adminName} onChange={this.changeInputName} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Password di accesso</label>\r\n                    <input name=\"password\" type=\"password\" className=\"form-control\" value={adminPsw} onChange={this.changeInputPassword} />\r\n                </div>\r\n\r\n                <input type=\"submit\" value=\"Accedi\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n            </form>\r\n        </div>\r\n    }\r\n\r\n}","export interface IAdmin{\r\n    readonly idCorso: number\r\n    readonly nome: string\r\n    readonly cognome: string\r\n}\r\nexport const isAdmin = (obj: any) => {\r\n    try{\r\n        return \"idCorso\" in obj && \"nome\" in obj && \"cognome\" in obj\r\n    }catch{\r\n        return false\r\n    }\r\n}\r\nexport const isSuperAdmin = (obj: any) => {\r\n    try{\r\n        return \"nome\" in obj && \"cognome\" in obj\r\n    }catch{\r\n        return false\r\n    }\r\n}","import React from \"react\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport { routerHistory } from \"../..\"\r\nimport { Modal, Tooltip, Spin, Icon, Checkbox, Collapse, DatePicker, message, Tabs } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, formattaData, adminRoute } from \"../../utilities\"\r\nimport locale from \"antd/es/date-picker/locale/it_IT\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly students: IStudent[]\r\n    readonly selection: IStudent[]\r\n    readonly confirmModal: boolean\r\n}\r\n\r\nexport default class StudentsList extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            students: null,\r\n            selection: [],\r\n            confirmModal: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/studenti/\"+this.props.corso).then((response) => {\r\n            this.setState({\r\n                students: response.data as IStudent[]\r\n            })\r\n        })\r\n    }\r\n\r\n    showConfirm = (student: IStudent) => {\r\n        const { students } = this.state\r\n        let date: string = \"\"\r\n\r\n        Modal.confirm({\r\n            title: `ATTENZIONE: si sta per ritirare uno studente (${student.nome} ${student.cognome})`,\r\n            content: <div style={{ marginLeft: -38 }}>\r\n                <p>I dati identificativi dello studente e le sue frequenze verranno comunque mantenuti.</p>\r\n                <label className=\"text-secondary\">Data di ritiro</label>\r\n                \r\n                <DatePicker locale={locale} className=\"w-100\" onChange={(_, d2) => date = d2} format=\"DD-MM-YYYY\" />\r\n            </div>,\r\n            okText: \"Conferma ritiro\",\r\n            okType: \"danger\",\r\n            cancelText: \"Annulla\",\r\n            onOk: () => {\r\n                if(date === \"\"){\r\n                    Modal.error({\r\n                        title: \"Errore!\",\r\n                        content: \"Seleziona una data valida.\"\r\n                    })\r\n\r\n                    return true\r\n                }\r\n\r\n                let dataRitiro = formattaData(date, true),\r\n                studente = student as any\r\n                studente.ritirato = \"true\"\r\n                studente.dataRitiro = dataRitiro\r\n                \r\n                this.setState({\r\n                    students: null\r\n                })\r\n                \r\n                Axios.put(siteUrl+\"/api/studenti/\"+student.idStudente, {...studente}).then(response => {\r\n\r\n                    let stu = response.data as IStudent,\r\n                    currentList = students as any,\r\n                    editingStudent = students.indexOf(student)\r\n                    \r\n                    currentList[editingStudent] = stu\r\n\r\n                    this.setState({\r\n                        students: currentList as IStudent[]\r\n                    })\r\n\r\n                    message.success(\"Studente ritirato con successo!\")\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    changeSelection = (student: IStudent) => {\r\n        let find = this.state.selection.find(s => s === student),\r\n        newList = find ? this.state.selection.filter(s => s.idStudente !== student.idStudente) : this.state.selection.concat(student)\r\n\r\n        this.setState({\r\n            selection: newList\r\n        })\r\n    }\r\n\r\n    selectAll = (anno: number, event: any) => {\r\n        let selectionList = event.target.checked ? this.state.students.filter(s => s.annoFrequentazione === anno && !s.ritirato) : this.state.selection.filter(s => s.annoFrequentazione !== anno)\r\n\r\n        this.setState({\r\n            selection: selectionList\r\n        })\r\n    }\r\n\r\n    showHideModal = () => {\r\n        if(!this.state.selection.length){\r\n            Modal.info({\r\n                title: \"Attenzione!\",\r\n                content: \"Devi selezionare almeno uno studente.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            confirmModal: !this.state.confirmModal\r\n        })\r\n    }\r\n\r\n    moveStudents = () => {\r\n        let select = document.getElementById(\"moveToClass\") as HTMLSelectElement,\r\n        value = parseInt(select.value),\r\n        studenti = this.state.selection.map(s => {\r\n            let stu = s as any\r\n            stu.idCorso = this.props.corso\r\n            stu.annoFrequentazione = value\r\n\r\n            return stu\r\n        })\r\n\r\n        if(value !== 1 && value !== 2){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"L'anno selezionato non è valido.\"\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            students: null,\r\n            selection: []\r\n        })\r\n\r\n        Axios.put(siteUrl+\"/api/studenti\", studenti).then(response => {\r\n            this.setState({\r\n                students: response.data as IStudent[]\r\n            })\r\n\r\n            message.success(\"Studenti spostati con successo!\")\r\n        })\r\n\r\n\r\n        this.showHideModal()\r\n    }\r\n\r\n    allRetired = (group: IStudent[]) => {\r\n        let allRetired = true\r\n\r\n        group.forEach(s => {\r\n            if(!s.ritirato)\r\n                allRetired = false\r\n        })\r\n\r\n        return !allRetired\r\n    }\r\n\r\n    sortbyId = (a: IStudent, b: IStudent) => { \r\n        if(a.idStudente > b.idStudente)\r\n            return-1\r\n        if(a.idStudente < b.idStudente)\r\n            return 1\r\n\r\n        return 0\r\n    }\r\n\r\n    promuoviStudent = (s: IStudent) => {\r\n        Modal.confirm({\r\n            title: `${s.nome} ${s.cognome}`,\r\n            content: \"Confermi di voler segnare questo studente come promosso?\",\r\n            okText: \"Conferma\",\r\n            okType: \"primary\",\r\n            cancelText: \"Annulla\",\r\n            onOk: () => {\r\n                this.setState({\r\n                    students: null\r\n                })\r\n        \r\n                Axios.delete(siteUrl+\"/api/studenti/\" + s.idStudente).then(response => {\r\n                    let studenti = response.data as IStudent[]\r\n        \r\n                    this.setState({\r\n                        students: studenti\r\n                    })\r\n        \r\n                    message.success(\"Studente promosso con successo!\")\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { students, selection } = this.state,\r\n        { Panel } = Collapse,\r\n        { TabPane } = Tabs\r\n        \r\n        if(!students){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n        \r\n        let firstYear = students.filter(s => s.annoFrequentazione === 1 && !s.promosso).sort(this.sortbyId).sort((a, _) => a.ritirato ? 0 : -1),\r\n        secondYear = students.filter(s => s.annoFrequentazione === 2 && !s.promosso).sort(this.sortbyId).sort((a, _) => a.ritirato ? 0 : -1),\r\n        groups = [firstYear, secondYear],\r\n        ritirati = students.filter(s => s.promosso).sort(this.sortbyId)\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Studenti del corso</h3>\r\n\r\n            <Tabs defaultActiveKey=\"1\">\r\n                <TabPane tab=\"Studenti attivi\" key=\"1\">\r\n                    <button className=\"btn btn-success float-right\" type=\"button\" onClick={() => routerHistory.push(adminRoute+\"/studenti/new\")}>\r\n                        <i className=\"fal fa-plus\"></i> Aggiungi studente\r\n                    </button>\r\n\r\n                    <button className=\"btn btn-orange float-right mr-2\" type=\"button\" onClick={this.showHideModal}>\r\n                        <i className=\"fa fa-arrows-alt\"></i> Sposta studenti\r\n                    </button>\r\n\r\n                    <button className=\"btn btn-blue float-right mr-2\" type=\"button\" onClick={() => routerHistory.push(adminRoute+\"/studenti/import\")}>\r\n                        <i className=\"fa fa-file-csv\"></i> Importa da CSV\r\n                    </button>\r\n\r\n                    <div className=\"clearfix\"></div>\r\n\r\n                    <Tabs defaultActiveKey=\"0\">\r\n                        \r\n                        {\r\n                            groups.map((g, i) => {\r\n                                if(!g[0])\r\n                                    return false\r\n                                    \r\n                                let checkedAll = this.allRetired(g),\r\n                                tabTitle = g[0].annoFrequentazione === 1 ? \"Primo\" : \"Secondo\"\r\n\r\n                                g.forEach(element => {\r\n                                    if(selection.indexOf(element) === -1 && !element.ritirato)\r\n                                        checkedAll = false\r\n                                })\r\n\r\n                                return <TabPane tab={tabTitle + \" anno\"} key={i.toString()}>\r\n                                    <table className=\"table table-bordered text-center\">\r\n\r\n                                        <tbody className=\"border-top-0\">\r\n                                            <tr>\r\n                                                <th style={{width: \"5%\"}}>\r\n                                                    <Tooltip title=\"Seleziona tutti\">\r\n                                                        <Checkbox onChange={(e) => this.selectAll(g[0].annoFrequentazione, e)} checked={checkedAll} />\r\n                                                    </Tooltip>\r\n                                                </th>\r\n                                                <th>Nome</th>\r\n                                                <th>Cognome</th>\r\n                                                <th>Codice Fiscale</th>\r\n                                                <th style={{width: \"15%\"}}>Frequenza</th>\r\n                                                <th style={{width: \"26%\"}}>Azioni</th>\r\n                                            </tr>\r\n                                \r\n                                            {\r\n                                                g.map(s => {\r\n                                                    let checked = this.state.selection.find(n => n === s) ? true : false,\r\n                                                    bg = s.ritirato ? \"light font-italic\" : \"white\"\r\n                            \r\n                                                    return <tr className={\"bg-\"+bg}>\r\n                                                        <td>\r\n                                                            {\r\n                                                                s.ritirato ? <Checkbox disabled={true} /> : <Checkbox onChange={() => this.changeSelection(s)} checked={checked} />\r\n                                                            }\r\n                                                        </td>\r\n                                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.nome}</td>\r\n                                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cognome}</td>\r\n                                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cf}</td>\r\n                                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.frequenza}%</td>\r\n                                                        \r\n                                                        <td>\r\n                                                            <Tooltip title=\"Dettagli\">\r\n                                                                <button type=\"button\" className=\"btn btn-info circle-btn\" onClick={() => routerHistory.push(adminRoute+\"/studenti/\" + s.idStudente)}>\r\n                                                                    <i className=\"fa fa-info\"></i>\r\n                                                                </button>\r\n                                                            </Tooltip>\r\n                                                            \r\n                                                            {\r\n                                                                !s.ritirato && <Tooltip title=\"Modifica\">\r\n                                                                    <button type=\"button\" className=\"btn btn-warning text-white circle-btn ml-2\" onClick={() => routerHistory.push(adminRoute+\"/studenti/edit/\" + s.idStudente)}>\r\n                                                                        <i className=\"fa fa-pen\"></i>\r\n                                                                    </button>\r\n                                                                </Tooltip>\r\n                                                            }\r\n                                                            {\r\n                                                                !s.ritirato && <Tooltip title=\"Segna come ritirato\">\r\n                                                                    <button type=\"button\" className=\"btn btn-danger circle-btn ml-2\" onClick={() => this.showConfirm(s)}>\r\n                                                                        <i className=\"fa fa-user-times\"></i>\r\n                                                                    </button>\r\n                                                                </Tooltip>\r\n                                                            }\r\n\r\n                                                            {\r\n                                                                s.ritirato && <Tooltip title=\"Studente ritirato\">\r\n                                                                    <button type=\"button\" className=\"circle-btn ml-2 border-0\">\r\n                                                                        <i className=\"fa fa-user-slash\"></i>\r\n                                                                    </button>\r\n                                                                </Tooltip>\r\n                                                            }\r\n                                                            \r\n                                                            <Tooltip title=\"Segna come promosso\">\r\n                                                                <button type=\"button\" className=\"btn btn-success circle-btn ml-2\" onClick={() => this.promuoviStudent(s)}>\r\n                                                                    <i className=\"fa fa-user-check\"></i>\r\n                                                                </button>\r\n                                                            </Tooltip>\r\n                                                            \r\n                                                        </td>\r\n                                                    </tr>\r\n                                                })\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </TabPane>\r\n                            })\r\n                        }\r\n                    </Tabs>\r\n                </TabPane>\r\n\r\n                <TabPane tab=\"Studenti archiviati\" key=\"2\">\r\n                    <table className=\"table table-bordered text-center\">\r\n                        <tbody className=\"border-top-0\">\r\n\r\n                            <tr>\r\n                                <th><i className=\"fa fa-check-circle fa-lg text-success\"></i></th>\r\n                                <th>Nome</th>\r\n                                <th>Cognome</th>\r\n                                <th>Codice Fiscale</th>\r\n                                <th style={{width: \"15%\"}}>Frequenza</th>\r\n                                <th style={{width: \"20%\"}}>Azioni</th>\r\n                            </tr>\r\n                            \r\n                            {\r\n                                ritirati.map(s => {\r\n\r\n                                    return <tr>\r\n                                        <td><i className=\"fa fa-check-circle fa-lg text-success\"></i></td>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.nome}</td>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cognome}</td>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cf}</td>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.frequenza}%</td>\r\n                                        \r\n                                        <td>\r\n                                            <Tooltip title=\"Dettagli\">\r\n                                                <button type=\"button\" className=\"btn btn-info circle-btn\" onClick={() => routerHistory.push(adminRoute+\"/studenti/\" + s.idStudente)}>\r\n                                                    <i className=\"fa fa-info\"></i>\r\n                                                </button>\r\n                                            </Tooltip>                                            \r\n                                        </td>\r\n                                    </tr>\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </TabPane>\r\n            </Tabs>\r\n\r\n            <Modal title=\"Sposta studenti\" visible={this.state.confirmModal} onCancel={this.showHideModal} cancelText=\"Annulla\" okText=\"Conferma\" onOk={this.moveStudents}>\r\n                <label className=\"text-secondary\">Scegliere l'anno in cui spostare gli studenti</label>\r\n                <select className=\"custom-select\" id=\"moveToClass\">\r\n                    <option value=\"1\">Primo anno</option>\r\n                    <option value=\"2\">Secondo anno</option>\r\n                </select>\r\n\r\n                <Collapse bordered={false}>\r\n                    <Panel header=\"Mostra studenti selezionati\" key={1}>\r\n                        { \r\n                            selection.map(s => {\r\n                                return <span className=\"d-block\">\r\n                                    <strong>{s.nome} {s.cognome}</strong> ({s.annoFrequentazione}° anno)\r\n                                </span>\r\n                            })\r\n                        }\r\n                    </Panel>\r\n                </Collapse>\r\n            </Modal>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, message, DatePicker } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, formattaData, adminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport locale from \"antd/es/date-picker/locale/it_IT\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly dataNascita: string\r\n    readonly cf: string\r\n    readonly email: string\r\n    readonly annoScolastico: number\r\n}\r\n\r\nexport default class AddNewStudent extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            cf: \"\",\r\n            annoScolastico: 1,\r\n            email: \"\",\r\n            dataNascita: \"\"\r\n        }\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n    \r\n    changeData = (data: string) => {\r\n        this.setState({\r\n            dataNascita: data\r\n        })\r\n    }\r\n\r\n    changeAnnoScolastico = (event: any) => {\r\n        let annoS = event.target.value\r\n\r\n        this.setState({\r\n            annoScolastico: Number(annoS)\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let CF = event.target.value.trim()\r\n\r\n        this.setState({\r\n            cf: CF\r\n        })\r\n    }\r\n\r\n    aggiungiStudente = () => {\r\n        const { nome, cognome, dataNascita, cf, annoScolastico, email } = this.state\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || dataNascita === \"\" || cf === \"\" || !annoScolastico || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(cf.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        let students = [{\r\n            nome: nome.trim(),\r\n            cognome: cognome.trim(),\r\n            cf: cf,\r\n            password: cf,\r\n            email: email,\r\n            annoFrequentazione: annoScolastico,\r\n            dataNascita: formattaData(dataNascita, true),\r\n            idCorso: this.props.corso\r\n        }]\r\n\r\n        Axios.post(siteUrl+\"/api/studenti\", students).then(response => {\r\n            message.success(\"Studente creato con successo!\")\r\n            routerHistory.push(adminRoute+\"/studenti\")\r\n        })\r\n\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, cf, email } = this.state\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Aggiungi un nuovo studente</h3>\r\n\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Anno frequentato</label>\r\n                        <select name=\"anno\" onChange={this.changeAnnoScolastico} className=\"custom-select\">\r\n                            <option value={1}>Primo anno</option>\r\n                            <option value={2}>Secondo anno</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Data di nascita</label>\r\n                        <DatePicker locale={locale} className=\"w-100 select-date\" onChange={(_, d2) => this.changeData(d2)} format=\"DD-MM-YYYY\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={cf} onChange={this.changeCF} />\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.aggiungiStudente}>Aggiungi studente</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { IPresenze } from \"../../models/IPresenze\"\r\nimport { Tooltip, Icon, Spin, Modal, Select } from \"antd\"\r\nimport { hideAll, siteUrl, formatItalian, startEdit, validateTime } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\n\r\nexport interface IProps{\r\n    readonly studente: number\r\n    reloadTotali(): void\r\n}\r\nexport interface IState{\r\n    readonly presenze: IPresenze[]\r\n    readonly entrataEdit: string\r\n    readonly uscitaEdit: string\r\n    readonly filter: string\r\n}\r\n\r\nexport default class PresenzeTable extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            presenze: null,\r\n            entrataEdit: \"\",\r\n            uscitaEdit: \"\",\r\n            filter: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/studenti/getdetailedpresences/\"+this.props.studente).then((response) => {\r\n\r\n            let presenze = response.data as IPresenze[]\r\n\r\n            this.setState({\r\n                presenze: presenze\r\n            })\r\n        })\r\n    }\r\n\r\n    changeEntrata = (event: any) => {\r\n        let entrata = event.target.value.trim()\r\n\r\n        this.setState({\r\n            entrataEdit: entrata\r\n        })\r\n    }\r\n\r\n    changeUscita = (event: any) => {\r\n        let uscita = event.target.value.trim()\r\n\r\n        this.setState({\r\n            uscitaEdit: uscita\r\n        })\r\n    }\r\n\r\n    startTimeEdit = (id: number) => {\r\n        let presenza = this.state.presenze.find(p => p.idPresenza === id)\r\n\r\n        startEdit(id)\r\n\r\n        this.setState({\r\n            entrataEdit: presenza.ingresso,\r\n            uscitaEdit: presenza.uscita\r\n        })\r\n    }\r\n\r\n    animateSpans = (span1: HTMLElement, span2: HTMLElement) => {\r\n        let node1 = span1.parentNode as HTMLElement,\r\n        node2 = span2.parentNode as HTMLElement\r\n\r\n        node1.classList.add(\"edited\")\r\n        node2.classList.add(\"edited\")\r\n\r\n        setTimeout(() => {\r\n            node1.classList.remove(\"edited\")\r\n            node2.classList.remove(\"edited\")\r\n        }, 1000)\r\n    }\r\n\r\n    confirmEdit = (id: number) => {\r\n        const { entrataEdit, uscitaEdit, presenze } = this.state\r\n\r\n        if(!validateTime(entrataEdit) || !validateTime(uscitaEdit)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Orari non validi! (ore:minuti:secondi)\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        let entrataSpan = document.getElementById(\"entrataSpan_\" + id),\r\n        uscitaSpan = document.getElementById(\"uscitaSpan_\" + id),\r\n        presenza = presenze.find(p => p.idPresenza === id)\r\n\r\n        Axios.put(siteUrl+\"/api/presenze/\" + id, {\r\n            idPresenza: presenza.idPresenza,\r\n            idStudente: presenza.idStudente,\r\n            ingresso: entrataEdit,\r\n            uscita: uscitaEdit,\r\n            idLezione: presenza.idLezione\r\n        }).then(response => {\r\n            let output = response.data\r\n\r\n            if(output === \"success\"){\r\n                let newPresenze = presenze.map(p => {\r\n                    if(p.idPresenza === id){\r\n                        let newP = p as any\r\n                        newP.ingresso = entrataEdit\r\n                        newP.uscita = uscitaEdit\r\n\r\n                        return newP as IPresenze\r\n                    }\r\n\r\n                    return p\r\n                })\r\n\r\n                this.setState({\r\n                    presenze: newPresenze\r\n                })\r\n\r\n                hideAll()\r\n                \r\n                this.animateSpans(entrataSpan, uscitaSpan)\r\n\r\n                this.props.reloadTotali()\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: output\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    getCategorie = () => {\r\n        const { presenze } = this.state \r\n        let categorie: string[] = []\r\n\r\n        presenze.forEach(p => {\r\n            if(categorie.indexOf(p.lezione) === -1)\r\n                categorie.push(p.lezione)\r\n        })\r\n\r\n        return categorie\r\n    }\r\n\r\n    changeFilter = (filter: string) => {\r\n        this.setState({\r\n            filter: filter === \"\" ? null : filter\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { presenze, entrataEdit, uscitaEdit, filter } = this.state,\r\n        { Option } = Select\r\n\r\n        if(!presenze){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div>\r\n                <Spin indicator={icon} className=\"mt-3\" />\r\n            </div>\r\n        }\r\n\r\n        let presences = filter ? presenze.filter(p => p.lezione.toLowerCase() === filter.toLowerCase()) : presenze\r\n\r\n        return <div className=\"mt-3\">\r\n\r\n            <h3 className=\"d-inline-block\">Presenze dello studente</h3>\r\n\r\n            <div className=\"float-right\">\r\n                <label className=\"d-inline-block text-secondary mr-2\">Filtra per materia: </label>\r\n                <Select defaultValue=\"\" style={{ width: 150 }} onChange={this.changeFilter} showSearch>\r\n                    <Option value=\"\">Nessuna</Option>\r\n                    {\r\n                        this.getCategorie().map(l =>{\r\n                            return <Option value={l}>{l}</Option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            </div>\r\n            \r\n            <div className=\"clearfix\"></div>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Giorno</th>\r\n                        <th>Entrata</th>\r\n                        <th>Uscita</th>\r\n                        <th>Lezione</th>\r\n                        <th>Azioni</th>\r\n                    </tr>\r\n\r\n                    {\r\n                        presences.map(p => {\r\n                            return <tr>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\">{formatItalian(p.data)}</td>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\">\r\n                                    <span id={\"entrataSpan_\"+p.idPresenza}>{p.ingresso}</span>\r\n                                    <input type=\"text\" className=\"form-control edit-time\" value={entrataEdit} style={{display: \"none\"}} onChange={this.changeEntrata} id={\"entrataInput_\"+p.idPresenza} />\r\n                                </td>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\">\r\n                                    <span id={\"uscitaSpan_\"+p.idPresenza}>{p.uscita}</span>\r\n                                    <input type=\"text\" className=\"form-control edit-time\" value={uscitaEdit} style={{display: \"none\"}} onChange={this.changeUscita} id={\"uscitaInput_\"+p.idPresenza} />\r\n                                </td>\r\n                                <Tooltip title={p.lezione}>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{p.lezione}</td>\r\n                                </Tooltip>\r\n                                <td>\r\n                                    <Tooltip title=\"Modifica orari\">\r\n                                        <button type=\"button\" className=\"btn btn-orange circle-btn\" onClick={() => this.startTimeEdit(p.idPresenza)} id={\"editBtn_\"+p.idPresenza}>\r\n                                            <i className=\"fa fa-user-edit\"></i>\r\n                                        </button>\r\n                                    </Tooltip>\r\n                                    <Tooltip title=\"Conferma modifiche\">\r\n                                        <button type=\"button\" className=\"btn btn-success circle-btn\" onClick={() => this.confirmEdit(p.idPresenza)} id={\"confirmBtn_\"+p.idPresenza} style={{display: \"none\"}}>\r\n                                            <i className=\"fa fa-check\"></i>\r\n                                        </button>\r\n                                    </Tooltip>\r\n                                </td>\r\n                            </tr>\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { RouteComponentProps } from \"react-router\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport { routerHistory } from \"../..\"\r\nimport { Icon, Spin, Progress, Statistic, Modal, Button } from \"antd\"\r\nimport PresenzeTable from \"./PresenzeTable\"\r\nimport Axios from \"axios\"\r\nimport { formatItalian, siteUrl, adminRoute } from \"../../utilities\"\r\nimport QRCode from \"qrcode.react\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly student: IStudent\r\n    readonly totPresenze: number\r\n    readonly oreTotali: number\r\n    readonly modal: boolean\r\n}\r\n\r\nexport default class StudentDetails extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            student: null,\r\n            totPresenze: null,\r\n            oreTotali: null,\r\n            modal: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(adminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/getstudentibyid/\" + id).then((response) => {\r\n            this.setState({\r\n                student: response.data as IStudent\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/gettotaleorelezioni/\" + id).then((response) => {\r\n            this.setState({\r\n                oreTotali: this.roundToTwo(response.data as number)\r\n            })\r\n        })\r\n\r\n        this.loadTotali()\r\n    }\r\n\r\n    loadTotali = () => {\r\n        this.setState({\r\n            totPresenze: null\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/gethoursamount/\" + this.props.match.params.id).then((response) => {\r\n            this.setState({\r\n                totPresenze: this.roundToTwo(response.data as number)\r\n            })\r\n        })\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    downloadQR = () => {\r\n        const { student } = this.state,\r\n        canvas = document.getElementById(\"qr-code-image\") as any\r\n        const pngUrl = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\")\r\n        let downloadLink = document.createElement(\"a\")\r\n        downloadLink.href = pngUrl\r\n        downloadLink.download = `qrcode${student.nome}${student.cognome}.png`\r\n        document.body.appendChild(downloadLink)\r\n        downloadLink.click()\r\n        document.body.removeChild(downloadLink)\r\n    }\r\n\r\n    getQRCode = () => {\r\n        const { student } = this.state\r\n\r\n        return student.codice\r\n    }\r\n\r\n    roundToTwo = (total: number) => {    \r\n        return Math.round(total)\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { student, totPresenze, oreTotali, modal } = this.state\r\n        \r\n        if(!student){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        let perc = student.frequenza !== null ? this.roundToTwo(100 * totPresenze / oreTotali) : null,\r\n        color = perc >= 80 ? \"var(--success)\" : \"var(--danger)\"\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <div className=\"row mx-0\">\r\n                <div className=\"col-12 col-md-6 pl-md-0 mb-2 mb-md-0\">\r\n                    <div className=\"p-3 bg-white border rounded\">\r\n                        <span className=\"border-text\">\r\n                            {\r\n                                student.ritirato ? \"Ritirato: \"+student.dataRitiro : student.annoFrequentazione === 1 ? \"Primo anno\" : \"Secondo anno\"\r\n                            }\r\n                        </span>\r\n                        <h4 className=\"text-uppercase mb-2 text-truncate\">{student.nome} {student.cognome}</h4>\r\n                        <p className=\"mb-0\"><strong>Data di nascita</strong>: {formatItalian(student.dataNascita)}</p>\r\n                        <p className=\"mb-0\"><strong>E-mail</strong>: {student.email}</p>\r\n                        <Button onClick={this.toggleModal} className=\"float-right\" type=\"link\">\r\n                            Mostra codice QR\r\n                        </Button>\r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 pr-md-0\">\r\n                    <div className=\"p-3 bg-white border rounded\">\r\n                        {\r\n                            perc !== null ? <Progress type=\"circle\" percent={perc} width={80} className=\"float-left mr-3\" strokeColor={color} format={percent => `${percent}%`}  /> : <Spin indicator={<Icon type=\"loading\" spin />} />\r\n                        }\r\n\r\n                        {\r\n                            oreTotali !== null && totPresenze !== null ? <Statistic title=\"Presenze totali (ore)\" value={totPresenze} suffix={\"/ \"+oreTotali} decimalSeparator=\",\" groupSeparator=\".\" /> : <Spin indicator={<Icon type=\"loading\" spin />} />\r\n                        }\r\n                        \r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <PresenzeTable studente={student.idStudente} reloadTotali={this.loadTotali} />\r\n            \r\n            <Modal visible={modal} maskClosable={true} centered title={\r\n                <span>\r\n                    <i className=\"far fa-qrcode fa-fw fa-lg text-primary mr-2\"></i>Codice QR dello studente\r\n                </span>\r\n            } onCancel={this.toggleModal} width={350} onOk={this.downloadQR}\r\n            footer={[\r\n                <Button type=\"primary\" onClick={this.downloadQR}>\r\n                    <i className=\"far fa-arrow-to-bottom mr-2\"></i> Salva codice\r\n                </Button>,\r\n                <Button type=\"default\" onClick={this.toggleModal}>Chiudi</Button>\r\n            ]}>\r\n                <div className=\"text-center\">\r\n                    <p>Salva il codice sottostante e condividilo con <strong>{student.nome} {student.cognome}.</strong></p>\r\n                    <div className=\"my-2\">\r\n                        <QRCode id=\"qr-code-image\" value={this.getQRCode()} size={200} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { IDocente } from \"../../models/IDocente\"\r\nimport { routerHistory } from \"../..\"\r\nimport { Modal, Tooltip, Spin, Icon, Switch, message } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, adminRoute } from \"../../utilities\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly docenti: IDocente[]\r\n    readonly showAll: boolean\r\n}\r\n\r\nexport default class DocentiList extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            docenti: null,\r\n            showAll: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/docenti\").then((response) => {\r\n            this.setState({\r\n                docenti: response.data as IDocente[]\r\n            })\r\n        })\r\n    }\r\n\r\n    switchList = () => {\r\n        this.setState({\r\n            showAll: !this.state.showAll\r\n        })\r\n    }\r\n\r\n    showDeleteConfirm = (docente: IDocente) => {\r\n        let context = this\r\n\r\n        Modal.confirm({\r\n            title: `ATTENZIONE: si sta per ritirare un docente (${docente.nome} ${docente.cognome})`,\r\n            content: \"I dati identificativi del docente, le lezioni e le presenze verranno comunque mantenuti, ma il docente verrà ritirato da tutti i corsi in cui insegna. In seguito sarà possibile reintegrarlo nel corso se necessario.\",\r\n            okText: \"Confermo\",\r\n            okType: \"danger\",\r\n            cancelText: \"Annulla\",\r\n            onOk: () => {\r\n                context.setState({\r\n                    docenti: null\r\n                })\r\n                \r\n                Axios.delete(siteUrl+\"/api/docenti/\"+docente.idDocente).then(response => {\r\n\r\n                    let docenti = response.data as IDocente[]\r\n\r\n                    context.setState({\r\n                        docenti: docenti\r\n                    })\r\n\r\n                    message.success(\"Docente ritirato con successo!\")\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    sortbyId = (a: IDocente, b: IDocente) => { \r\n        if(a.idDocente > b.idDocente)\r\n            return 1\r\n        if(a.idDocente < b.idDocente)\r\n            return -1\r\n\r\n        return 0\r\n    }\r\n\r\n    backRetire = (doc: IDocente) => {\r\n        let context = this\r\n\r\n        Modal.confirm({\r\n            title: `${doc.nome} ${doc.cognome}`,\r\n            content: \"Questo docente verrà reintegrato all'interno del corso.\",\r\n            okText: \"Confermo\",\r\n            okType: \"danger\",\r\n            cancelText: \"Annulla\",\r\n            onOk: () => {\r\n                context.setState({\r\n                    docenti: null\r\n                })\r\n\r\n                Axios.delete(siteUrl+\"/api/docenti/\"+doc.idDocente).then(response => {\r\n\r\n                    let docenti = response.data as IDocente[]\r\n\r\n                    context.setState({\r\n                        docenti: docenti\r\n                    })\r\n\r\n                    message.success(\"Docente reintegrato con successo!\")\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    isInCorso = (doc: IDocente) => {\r\n        return doc.corsi.indexOf(this.props.corso) !== -1\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { docenti, showAll } = this.state\r\n\r\n        if(!docenti){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        let lista = showAll ? docenti : docenti.filter(d => this.isInCorso(d)),\r\n        docs = lista.sort(this.sortbyId).sort((a, _) => a.ritirato ? 0 : -1)\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Docenti del corso</h3>\r\n\r\n            <label className=\"pointer\" style={{ transform: \"translateY(50%)\" }}>\r\n                <Switch checked={!showAll} onChange={this.switchList} className=\"mr-1 align-top\" /> Mostra solo i docenti del mio corso\r\n            </label>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={() => routerHistory.push(adminRoute+\"/docenti/new\")}>\r\n                <i className=\"fal fa-plus\"></i> Aggiungi docente\r\n            </button>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                \r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th>Cognome</th>\r\n                            <th style={{width: \"15%\"}}>Ore 1° anno</th>\r\n                            <th style={{width: \"15%\"}}>Ore 2° anno</th>\r\n                            <th style={{width: \"20%\"}}>Azioni</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            docs.map(d => {   \r\n                                let bg = d.ritirato ? \"light font-italic\" : !this.isInCorso(d) ? \"transblue\" :\"white\"\r\n\r\n                                return <tr className={\"bg-\"+bg}>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{d.nome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{d.cognome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{d.monteOre.orePrimo}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{d.monteOre.oreSecondo}</td>\r\n                                    <td>\r\n                                        <Tooltip title=\"Dettagli\">\r\n                                            <button type=\"button\" className=\"btn btn-info circle-btn\" onClick={() => routerHistory.push(adminRoute+\"/docenti/\" + d.idDocente)}>\r\n                                                <i className=\"fa fa-info\"></i>\r\n                                            </button>\r\n                                        </Tooltip>\r\n\r\n                                        {\r\n                                            !d.ritirato && <Tooltip title=\"Modifica\">\r\n                                                <button type=\"button\" className=\"btn btn-warning text-white circle-btn ml-2\" onClick={() => routerHistory.push(adminRoute+\"/docenti/edit/\" + d.idDocente)}>\r\n                                                    <i className=\"fa fa-pen\"></i>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            !d.ritirato && <Tooltip title=\"Segna come ritirato\">\r\n                                                <button type=\"button\" className=\"btn btn-danger circle-btn ml-2\" onClick={() => this.showDeleteConfirm(d)}>\r\n                                                    <i className=\"fa fa-user-times\"></i>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                        }\r\n\r\n                                        {\r\n                                            d.ritirato && <Tooltip title=\"Reintegra nel corso\">\r\n                                                <button type=\"button\" className=\"btn btn-danger circle-btn ml-2\" onClick={() => this.backRetire(d)}>\r\n                                                    <i className=\"fa fa-reply\"></i>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, message, Icon, Spin, Checkbox } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, adminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { IMateria } from \"../../models/IMateria\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly CF: string\r\n    readonly email: string\r\n    readonly materie: IMateria[]\r\n    readonly corsi: ICorso[]\r\n    readonly materieSel: number[]\r\n    readonly corsiSel: number[] \r\n}\r\n\r\nexport default class AddNewDocente extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            CF: \"\",\r\n            email: \"\",\r\n            corsi: null,\r\n            materie: null,\r\n            corsiSel: [],\r\n            materieSel: []\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                corsi: corsi\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/materie/getmateriebycorso/\"+this.props.corso).then(response => {\r\n            let materie = response.data as IMateria[]\r\n\r\n            this.setState({\r\n                materie: materie\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let CF = event.target.value.trim()\r\n\r\n        this.setState({\r\n            CF: CF\r\n        })\r\n    }\r\n\r\n    aggiungiDocente = () => {\r\n        const { nome, cognome,CF, email, corsiSel, materieSel } = this.state\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || CF === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(CF.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!materieSel.length){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Scegliere almeno una materia.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!corsiSel.length){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Scegliere almeno un corso.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        let cipher = new Cipher(),\r\n        password = cipher.encode(CF)\r\n\r\n        Axios.post(siteUrl+\"/api/docenti\", {\r\n            nome: nome.trim(),\r\n            cognome: cognome.trim(),\r\n            cf: CF,\r\n            password: password,\r\n            email: email,\r\n            tenere: corsiSel.map(c => { return { idCorso: c, idDocente: 0 } }),\r\n            insegnare: materieSel.map(m => { return { idMateria: m, idDocente: 0 } }),\r\n        }).then(_ => {\r\n            message.success(\"Docente creato con successo!\")\r\n            routerHistory.push(adminRoute+\"/docenti\")\r\n        })\r\n\r\n    }\r\n\r\n    switchMateria = (materiaId: number) => {\r\n        let find = this.state.materieSel.find(m => m === materiaId),\r\n        newList = find ? this.state.materieSel.filter(m => m !== materiaId) : this.state.materieSel.concat(materiaId)\r\n\r\n        this.setState({\r\n            materieSel: newList\r\n        })\r\n    }\r\n\r\n    switchCorso = (corsoId: number) => {\r\n        let find = this.state.corsiSel.find(m => m === corsoId),\r\n        newList = find ? this.state.corsiSel.filter(m => m !== corsoId) : this.state.corsiSel.concat(corsoId)\r\n\r\n        this.setState({\r\n            corsiSel: newList\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, CF, email, materie, materieSel, corsi, corsiSel } = this.state\r\n\r\n        if(!materie || !corsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Aggiungi un nuovo docente</h3>\r\n\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={CF} onChange={this.changeCF} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Materie insegnate dal docente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                materie.map(m => {\r\n                                    let find = materieSel.find(f => f === m.idMateria),\r\n                                    checked = find ? true : false,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n\r\n                                    return <label className={\"option \" + classname}>\r\n                                        <Checkbox className=\"mr-2\" onChange={() => this.switchMateria(m.idMateria)} checked={checked} /> {m.nome}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Corsi del docente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                corsi.map(m => {\r\n                                    let find = corsiSel.find(f => f === m.idCorso),\r\n                                    checked = find ? true : false,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n\r\n                                    return <label className={\"option \" + classname}>\r\n                                        <Checkbox className=\"mr-2\" onChange={() => this.switchCorso(m.idCorso)} checked={checked} /> {m.nome}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.aggiungiDocente}>Aggiungi docente</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Tooltip, Icon, Spin, Modal, Select } from \"antd\"\r\nimport { hideAll, siteUrl, formatItalian, startEdit, validateTime } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { IPresenzaDocente } from \"../../models/IPresenzaDocente\"\r\n\r\nexport interface IProps{\r\n    readonly idDocente: string\r\n    readonly canEdit: boolean\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly presenze: IPresenzaDocente[]\r\n    readonly entrataEdit: string\r\n    readonly uscitaEdit: string\r\n    readonly filter: string\r\n}\r\n\r\nexport default class LezioniDocenteTable extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            presenze: null,\r\n            entrataEdit: \"\",\r\n            uscitaEdit: \"\",\r\n            filter: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { corso, idDocente } = this.props\r\n\r\n        Axios.get(siteUrl+\"/api/lezioni/getlezionidocente/\"+idDocente+\"/\"+corso).then(response => {\r\n            let presenze = response.data as IPresenzaDocente[]\r\n\r\n            this.setState({\r\n                presenze: presenze\r\n            })\r\n        })\r\n    }\r\n\r\n    changeEntrata = (event: any) => {\r\n        let entrata = event.target.value.trim()\r\n\r\n        this.setState({\r\n            entrataEdit: entrata\r\n        })\r\n    }\r\n\r\n    changeUscita = (event: any) => {\r\n        let uscita = event.target.value.trim()\r\n\r\n        this.setState({\r\n            uscitaEdit: uscita\r\n        })\r\n    }\r\n\r\n    startTimeEdit = (id: number) => {\r\n        let presenza = this.state.presenze.find(p => p.idPresenza === id)\r\n\r\n        startEdit(id)\r\n\r\n        this.setState({\r\n            entrataEdit: presenza.ingresso,\r\n            uscitaEdit: presenza.uscita\r\n        })\r\n    }\r\n\r\n    animateSpans = (span1: HTMLElement, span2: HTMLElement) => {\r\n        let node1 = span1.parentNode as HTMLElement,\r\n        node2 = span2.parentNode as HTMLElement\r\n\r\n        node1.classList.add(\"edited\")\r\n        node2.classList.add(\"edited\")\r\n\r\n        setTimeout(() => {\r\n            node1.classList.remove(\"edited\")\r\n            node2.classList.remove(\"edited\")\r\n        }, 1000)\r\n    }\r\n\r\n    confirmEdit = (id: number) => {\r\n        const { entrataEdit, uscitaEdit, presenze } = this.state\r\n        \r\n        if(!validateTime(entrataEdit) || !validateTime(uscitaEdit)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Orari non validi! (ore:minuti:secondi)\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        let entrataSpan = document.getElementById(\"entrataSpan_\" + id),\r\n        uscitaSpan = document.getElementById(\"uscitaSpan_\" + id),\r\n        presenza = presenze.find(p => p.idPresenza === id)\r\n\r\n        Axios.put(siteUrl+\"/api/presenzedocente/\"+id, {\r\n            idPresenza: id,\r\n            ingresso: entrataEdit,\r\n            uscita: uscitaEdit,\r\n            idDocente: presenza.idDocente,\r\n            idLezione: presenza.idLezione\r\n        }).then(response => {\r\n            let output = response.data\r\n\r\n            if(output === \"success\"){\r\n                let newPresenze = presenze.map(p => {\r\n                    if(p.idPresenza === id){\r\n                        let newP = p as any\r\n                        newP.ingresso = entrataEdit\r\n                        newP.uscita = uscitaEdit\r\n\r\n                        return newP as IPresenzaDocente\r\n                    }\r\n\r\n                    return p\r\n                })\r\n\r\n                this.setState({\r\n                    presenze: newPresenze\r\n                })\r\n\r\n                hideAll()\r\n                \r\n                this.animateSpans(entrataSpan, uscitaSpan)\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: output\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    getCategorie = () => {\r\n        const { presenze } = this.state \r\n        let categorie: string[] = []\r\n\r\n        presenze.forEach(p => {\r\n            if(categorie.indexOf(p.lezione) === -1)\r\n                categorie.push(p.lezione)\r\n        })\r\n\r\n        return categorie\r\n    }\r\n\r\n    changeFilter = (filter: string) => {\r\n        this.setState({\r\n            filter: filter === \"\" ? null : filter\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { presenze, entrataEdit, uscitaEdit, filter } = this.state,\r\n        { canEdit } = this.props,\r\n        { Option } = Select\r\n\r\n        if(!presenze){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div>\r\n                <Spin indicator={icon} className=\"mt-3\" />\r\n            </div>\r\n        }\r\n\r\n        let presences = filter ? presenze.filter(p => p.lezione.toLowerCase() === filter.toLowerCase()) : presenze\r\n\r\n        return <div className=\"mt-3\">\r\n            <h3 className=\"d-inline-block\">Lezioni tenute dal docente</h3>\r\n\r\n            <div className=\"float-right\">\r\n                <label className=\"d-inline-block text-secondary mr-2\">Filtra per materia: </label>\r\n                <Select defaultValue=\"\" style={{ width: 150 }} onChange={this.changeFilter} showSearch>\r\n                    <Option value=\"\">Nessuna</Option>\r\n                    {\r\n                        this.getCategorie().map(l =>{\r\n                            return <Option value={l}>{l}</Option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            </div>\r\n\r\n            <div className=\"clearfix\"></div>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                <tbody>\r\n                    <tr className=\"thead-light\">\r\n                        <th>Giorno</th>\r\n                        <th>Entrata</th>\r\n                        <th>Uscita</th>\r\n                        <th>Lezione</th>\r\n                        {\r\n                            canEdit && <th>Azioni</th>\r\n                        }\r\n                    </tr>\r\n\r\n                    {\r\n                        presences.map(p => {\r\n                            return <tr>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\">{formatItalian(p.data)}</td>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\">\r\n                                    <span id={\"entrataSpan_\"+p.idPresenza}>{p.ingresso}</span>\r\n                                    <input type=\"text\" className=\"form-control edit-time\" value={entrataEdit} style={{display: \"none\"}} onChange={this.changeEntrata} id={\"entrataInput_\"+p.idPresenza} />\r\n                                </td>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\">\r\n                                    <span id={\"uscitaSpan_\"+p.idPresenza}>{p.uscita}</span>\r\n                                    <input type=\"text\" className=\"form-control edit-time\" value={uscitaEdit} style={{display: \"none\"}} onChange={this.changeUscita} id={\"uscitaInput_\"+p.idPresenza} />\r\n                                </td>\r\n                                <Tooltip title={p.lezione}>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{p.lezione}</td>\r\n                                </Tooltip>\r\n                                {\r\n                                    canEdit && <td>\r\n                                        <Tooltip title=\"Modifica orari\">\r\n                                            <button type=\"button\" className=\"btn btn-orange circle-btn\" onClick={() => this.startTimeEdit(p.idPresenza)} id={\"editBtn_\"+p.idPresenza}>\r\n                                                <i className=\"fa fa-user-edit\"></i>\r\n                                            </button>\r\n                                        </Tooltip>\r\n                                        <Tooltip title=\"Conferma modifiche\">\r\n                                            <button type=\"button\" className=\"btn btn-success circle-btn\" onClick={() => this.confirmEdit(p.idPresenza)} id={\"confirmBtn_\"+p.idPresenza} style={{display: \"none\"}}>\r\n                                                <i className=\"fa fa-check\"></i>\r\n                                            </button>\r\n                                        </Tooltip>\r\n                                    </td>\r\n                                }\r\n                            </tr>\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { RouteComponentProps } from \"react-router\"\r\nimport { routerHistory } from \"../..\"\r\nimport { Icon, Spin, Modal, Button, Statistic } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { IDocente } from \"../../models/IDocente\"\r\nimport LezioniDocenteTable from \"./LezioniDocenteTable\"\r\nimport { siteUrl, adminRoute } from \"../../utilities\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\nimport QRCode from \"qrcode.react\"\r\n\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly docente: IDocente\r\n    readonly modal: boolean\r\n}\r\n\r\nexport default class DocenteDetails extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            docente: null,\r\n            modal: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(adminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/docenti/getdocentibyid/\" + id).then((response) => {\r\n            this.setState({\r\n                docente: response.data as IDocente\r\n            })\r\n        })\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    downloadQR = () => {\r\n        const { docente } = this.state,\r\n        canvas = document.getElementById(\"qr-code-image\") as any\r\n        const pngUrl = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\")\r\n        let downloadLink = document.createElement(\"a\")\r\n        downloadLink.href = pngUrl\r\n        downloadLink.download = `qrcode${docente.nome}${docente.cognome}.png`\r\n        document.body.appendChild(downloadLink)\r\n        downloadLink.click()\r\n        document.body.removeChild(downloadLink)\r\n    }\r\n\r\n    getQRCode = () => {\r\n        const { docente } = this.state\r\n        let cipher = new Cipher(),\r\n        code = cipher.encode(docente.cf)\r\n\r\n        return code\r\n    }\r\n\r\n    isInCorso = (doc: IDocente) => {\r\n        return doc.corsi.indexOf(this.props.corso) !== -1\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { docente, modal } = this.state\r\n\r\n        if(!docente){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <div className=\"row mx-0\">\r\n                <div className=\"col-12 col-md-6 pl-md-0 mb-2 mb-md-0\">\r\n\r\n                    <div className=\"p-3 bg-white border\">\r\n                        {\r\n                            docente.ritirato && <span className=\"border-text\">Ritirato</span>\r\n                        }\r\n\r\n                        <h4 className=\"text-uppercase mb-2 text-truncate\">{docente.nome} {docente.cognome}</h4>\r\n                        <p className=\"mb-0\"><strong>E-mail</strong>: {docente.email}</p>\r\n                        <Button onClick={this.toggleModal} className=\"float-right\" type=\"link\">\r\n                            Mostra codice QR\r\n                        </Button>\r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3 pr-md-0\">\r\n                    <div className=\"p-3 bg-white border rounded text-center\" style={{ display: \"flex\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                        <Statistic title=\"Ore svolte\" value={docente.monteOre} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <LezioniDocenteTable idDocente={docente.idDocente} canEdit={this.isInCorso(docente)} corso={this.props.corso} />\r\n\r\n            <Modal visible={modal} maskClosable={true} centered title={\r\n                <span>\r\n                    <i className=\"far fa-qrcode fa-fw fa-lg text-primary mr-2\"></i>Codice QR del docente\r\n                </span>\r\n            } onCancel={this.toggleModal} width={350} onOk={this.downloadQR}\r\n            footer={[\r\n                <Button type=\"primary\" onClick={this.downloadQR}>\r\n                    <i className=\"far fa-arrow-to-bottom mr-2\"></i> Salva codice\r\n                </Button>,\r\n                <Button type=\"default\" onClick={this.toggleModal}>Chiudi</Button>\r\n            ]}>\r\n                <div className=\"text-center\">\r\n                    <p>Salva il codice sottostante e condividilo con <strong>{docente.nome} {docente.cognome}.</strong></p>\r\n                    <div className=\"my-2\">\r\n                        <QRCode id=\"qr-code-image\" value={this.getQRCode()} size={200} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Icon, Spin, Checkbox, message } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, adminRoute } from \"../../utilities\"\r\nimport { IDocente } from \"../../models/IDocente\"\r\nimport Axios from \"axios\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { IMateria } from \"../../models/IMateria\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly docente: IDocente\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly CF: string\r\n    readonly email: string\r\n    readonly materie: IMateria[]\r\n    readonly corsi: ICorso[]\r\n    readonly materieSel: number[]\r\n    readonly corsiSel: number[] \r\n}\r\n\r\nexport default class EditDocente extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            docente: null,\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            CF: \"\",\r\n            email: \"\",\r\n            materie: [],\r\n            materieSel: [],\r\n            corsi: [],\r\n            corsiSel: []\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(adminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/docenti/getdocentibyid/\" + id).then((response) => {\r\n            let doc = response.data as IDocente\r\n\r\n            this.setState({\r\n                docente: doc,\r\n                nome: doc.nome,\r\n                cognome: doc.cognome,\r\n                CF: doc.cf,\r\n                email: doc.email,\r\n                materieSel: doc.materie && doc.materie.length ? doc.materie : [],\r\n                corsiSel: doc.corsi && doc.corsi.length ? doc.corsi : []\r\n            })\r\n        })\r\n        \r\n        Axios.get(siteUrl+\"/api/materie/getmateriebycorso/\"+this.props.corso).then((response) => {\r\n            let materie = response.data as IMateria[]\r\n            \r\n            this.setState({\r\n                materie: materie\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/corsi\").then((response) => {\r\n            let corsi = response.data as ICorso[]\r\n            \r\n            this.setState({\r\n                corsi: corsi\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let CF = event.target.value.trim()\r\n\r\n        this.setState({\r\n            CF: CF\r\n        })\r\n    }\r\n\r\n    modificaDocente = () => {\r\n        const { docente, nome, cognome, CF, email, corsiSel, materieSel } = this.state\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || CF === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!materieSel.length){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Scegliere almeno una materia.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!corsiSel.length){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Scegliere almeno un corso.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(CF.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.put(siteUrl+\"/api/docenti/\" + this.props.match.params.id, {\r\n            idDocente: parseInt(this.props.match.params.id),\r\n            nome: nome.trim(),\r\n            cognome: cognome.trim(),\r\n            email: email,\r\n            cf: CF,\r\n            tenere: corsiSel.map(c => { return { idCorso: c, idDocente: docente.idDocente } }),\r\n            insegnare: materieSel.map(m => { return { idMateria: m, idDocente: docente.idDocente } }),\r\n            ritirato: docente.ritirato\r\n        }).then(_ => {\r\n            message.success(\"Docente modificato con successo!\")\r\n            routerHistory.push(adminRoute+\"/docenti\")\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    switchMateria = (materiaId: number) => {\r\n        let find = this.state.materieSel.find(m => m === materiaId),\r\n        newList = find ? this.state.materieSel.filter(m => m !== materiaId) : this.state.materieSel.concat(materiaId)\r\n\r\n        this.setState({\r\n            materieSel: newList\r\n        })\r\n    }\r\n\r\n    switchCorso = (corsoId: number) => {\r\n        let find = this.state.corsiSel.find(m => m === corsoId),\r\n        newList = find ? this.state.corsiSel.filter(m => m !== corsoId) : this.state.corsiSel.concat(corsoId)\r\n\r\n        this.setState({\r\n            corsiSel: newList\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, CF, docente, email, materie, materieSel, corsi, corsiSel } = this.state\r\n\r\n        if(!docente || !materie.length || !corsi.length){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Modifica di un docente</h3>\r\n\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={CF} onChange={this.changeCF} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Materie insegnate dal docente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                materie.map(m => {\r\n                                    let find = materieSel.find(f => f === m.idMateria),\r\n                                    checked = find ? true : false,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n\r\n                                    return <label className={\"option \" + classname}>\r\n                                        <Checkbox className=\"mr-2\" onChange={() => this.switchMateria(m.idMateria)} checked={checked} /> {m.nome}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Corsi del docente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                corsi.map(m => {\r\n                                    let find = corsiSel.find(f => f === m.idCorso),\r\n                                    checked = find ? true : false,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n\r\n                                    return <label className={\"option \" + classname}>\r\n                                        <Checkbox className=\"mr-2\" onChange={() => this.switchCorso(m.idCorso)} checked={checked} /> {m.nome}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.modificaDocente}>Modifica docente</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Icon, Spin, message, DatePicker } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, formattaData, formatItalian, adminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport locale from \"antd/es/date-picker/locale/it_IT\"\r\nimport moment from \"moment\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly studente: IStudent\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly dataNascita: string\r\n    readonly CF: string\r\n    readonly email: string\r\n}\r\n\r\nexport default class EditStudente extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            studente: null,\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            dataNascita: \"\",\r\n            CF: \"\",\r\n            email: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(adminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/getstudentibyid/\" + id).then((response) => {\r\n            let stu = response.data as IStudent\r\n\r\n            this.setState({\r\n                studente: stu,\r\n                nome: stu.nome,\r\n                cognome: stu.cognome,\r\n                CF: stu.cf,\r\n                dataNascita: formatItalian(stu.dataNascita),\r\n                email: stu.email\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeData = (data: string) => {\r\n        this.setState({\r\n            dataNascita: data\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let CF = event.target.value.trim()\r\n\r\n        this.setState({\r\n            CF: CF\r\n        })\r\n    }\r\n\r\n    modificaStudente = () => {\r\n        const { nome, cognome, dataNascita, CF, email, studente } = this.state\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || dataNascita === \"\" || CF === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(CF.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.put(siteUrl+\"/api/studenti/\" + studente.idStudente, {\r\n            idStudente: studente.idStudente,\r\n            nome: nome.trim(),\r\n            cognome: cognome.trim(),\r\n            email: email,\r\n            cf: CF,\r\n            idCorso: this.props.corso,\r\n            annoFrequentazione: studente.annoFrequentazione,\r\n            dataNascita: formattaData(dataNascita, true),\r\n            ritirato: studente.ritirato\r\n        }).then(_ => {\r\n            message.success(\"Studente modificato con successo!\")\r\n            routerHistory.push(adminRoute+\"/studenti\")\r\n        })\r\n        \r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, dataNascita, CF, studente, email } = this.state\r\n\r\n        if(!studente){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Modifica di uno studente</h3>\r\n\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Data di nascita</label>\r\n                        <DatePicker locale={locale} className=\"w-100 select-date\" onChange={(_, d2) => this.changeData(d2)} format=\"DD-MM-YYYY\" defaultValue={moment(dataNascita, \"DD-MM-YYYY\")} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={CF} onChange={this.changeCF} />\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.modificaStudente}>Modifica studente</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport Dragger from \"antd/lib/upload/Dragger\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport { Modal, Tooltip, Icon, message } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { formattaData, capitalizeFirst, siteUrl, resizePopup, formatItalian, adminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly addList: IStudent[]\r\n    readonly fileContent: string\r\n    readonly fields: any\r\n}\r\n\r\nconst fields = [{\r\n    label: \"Nome\",\r\n    field: \"nome\"\r\n},{\r\n    label: \"Cognome\",\r\n    field: \"cognome\"\r\n},{\r\n    label: \"Codice Fiscale\",\r\n    field: \"cf\"\r\n},{\r\n    label: \"Data di nascita\",\r\n    field: \"dataNascita\"\r\n},{\r\n    label: \"E-mail\",\r\n    field: \"email\"\r\n}]\r\n\r\nexport default class StudentsImport extends React.PureComponent<IProps, IState>{\r\n    \r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            addList: [],\r\n            fileContent: \"\",\r\n            fields: {\r\n                nome: 0,\r\n                cognome: 0,\r\n                cf: 0,\r\n                dataNascita: 0,\r\n                email: 0,\r\n                annoFrequentazione: 1\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        resizePopup()\r\n    }\r\n\r\n    splitCSV = (data: string) => {\r\n        let regex = /([\"'])(?:(?=(\\\\?))\\2.)*?\\1/g,\r\n        pieces = data.match(regex)\r\n\r\n        return pieces.map(p => { return p.replace(/[\"]/g, '') })\r\n    }\r\n\r\n    renderOptions = () => {\r\n        let rows = this.state.fileContent.split(\"\\n\"),\r\n        cells = this.splitCSV(rows[0]),\r\n        options = cells.map((c, i) => {\r\n            if(c === \"\")\r\n                return null\r\n\r\n            return <option value={i}>{c}</option>\r\n        })\r\n\r\n        return options\r\n    }\r\n\r\n    changeVarPos = (e: any, varName: string) => {\r\n        let value = e.target.value,\r\n        obj = this.state.fields\r\n\r\n        obj[varName] = value\r\n\r\n        this.setState({\r\n            fields: obj\r\n        })\r\n    }\r\n\r\n    readFile = (file: any) => {\r\n        const reader = new FileReader()\r\n\r\n        reader.onload = e => {\r\n            this.setState({\r\n                fileContent: String(e.target.result).trim()\r\n            })\r\n\r\n            Modal.info({\r\n                width: 500,\r\n                centered: true,\r\n                title: \"Selezionare i campi da abbinare\",\r\n                icon: <Icon type=\"api\" style={{ color: \"var(--success)\" }} />,\r\n                maskClosable: true,\r\n                content: <div style={{ marginLeft: -38 }}>\r\n                    <div className=\"row mt-3 px-0\">\r\n                        <div className=\"col-4\">\r\n                            <label className=\"mt-2\">Classe: </label>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <select className=\"custom-select pointer\" style={{ height: 35 }} onChange={(e) => this.changeVarPos(e, \"annoFrequentazione\")}>\r\n                                <option value=\"1\">Primo anno</option>\r\n                                <option value=\"2\">Secondo anno</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        fields.map(f => {\r\n                            return <div className=\"row mt-3 px-0\">\r\n                                <div className=\"col-4\">\r\n                                    <label className=\"mt-2\">{f.label}: </label>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <select className=\"custom-select pointer\" style={{ height: 35 }} onChange={(e) => this.changeVarPos(e, f.field)}>\r\n                                        {this.renderOptions()}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>,\r\n                onOk: this.showImportPreview,\r\n                okText: \"Prosegui\"\r\n            })\r\n        }\r\n\r\n        reader.readAsText(file, \"ISO-8859-1\")\r\n\r\n        return false\r\n    }\r\n\r\n    showImportPreview = () => {\r\n        const { fileContent, fields} = this.state\r\n\r\n        let rows = fileContent.split(\"\\n\"),\r\n        list: IStudent[] = [],\r\n        popup = document.getElementById(\"popup\")\r\n\r\n        rows.forEach(r => {\r\n            let cells = this.splitCSV(r)\r\n\r\n            let student: IStudent = {\r\n                idCorso: this.props.corso,\r\n                nome: capitalizeFirst(cells[fields['nome']]),\r\n                cognome: capitalizeFirst(cells[fields['cognome']]),\r\n                annoFrequentazione: parseInt(fields['annoFrequentazione']),\r\n                cf: cells[fields['cf']],\r\n                dataNascita: formattaData(cells[fields['dataNascita']], true),\r\n                email: cells[fields['email']],\r\n                password: cells[fields['cf']]\r\n            }\r\n\r\n            list.push(student)\r\n        })\r\n\r\n        this.setState({\r\n            addList: list\r\n        })\r\n\r\n        popup.classList.add(\"show\")\r\n    }\r\n\r\n    hidePopup = () => {\r\n        let popup = document.getElementById(\"popup\")\r\n\r\n        this.setState({\r\n            addList: [],\r\n            fields: {\r\n                nome: 0,\r\n                cognome: 0,\r\n                cf: 0,\r\n                dataNascita: 0,\r\n                email: 0,\r\n                annoFrequentazione: 0\r\n            }\r\n        })\r\n\r\n        popup.classList.remove(\"show\")\r\n    }\r\n\r\n    confirmImport = () => {\r\n        Axios.post(siteUrl+\"/api/studenti\", this.state.addList).then(_ => {\r\n            message.success(\"Importazione eseguita con successo!\")\r\n            routerHistory.push(adminRoute+\"/studenti\")\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { addList } = this.state\r\n\r\n        return <div className=\"col p-5 right-block\" id=\"mainBlock\" style={{flexDirection: \"column\"}}>\r\n            <h3 className=\"text-center w-100\">Importa studenti da CSV</h3>\r\n\r\n            <label>\r\n                Prima di proseguire, esportare il CSV da <strong>Sifer</strong>.\r\n            </label>\r\n\r\n            <div className=\"uploader mt-2 w-100\">\r\n                <Dragger accept=\".csv\" beforeUpload={file => this.readFile(file)}>\r\n                    <p className=\"ant-upload-drag-icon\">\r\n                        <i className=\"fa fa-file-csv fa-5x\"></i>\r\n                    </p>\r\n                    <p className=\"ant-upload-text\">Clicca o trascina un file su quest'aerea</p>\r\n                    <p className=\"ant-upload-hint\">\r\n                        Assicurati che il file abbia l'estensione <strong>.csv</strong>.\r\n                    </p>\r\n                </Dragger>\r\n            </div>\r\n\r\n            <div id=\"popup\" className=\"preview px-0\">\r\n                <div className=\"w-100 h-100 inner overflow-auto px-5 py-4\">\r\n                    <h3 className=\"mb-3 text-center\">Anteprima dati da importare</h3>\r\n                    {\r\n                        addList.length && <table className=\"table table-bordered text-center\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th>Nome</th>\r\n                                    <th>Cognome</th>\r\n                                    <th>Anno</th>\r\n                                    <th>Codice Fiscale</th>\r\n                                    <th>Data di Nascita</th>\r\n                                    <th style={{width: \"25%\"}}>E-mail</th>\r\n                                </tr>\r\n\r\n                                {\r\n                                    addList.map(s => {                \r\n                                        return <tr>\r\n                                            <Tooltip title={s.nome}>\r\n                                                <td style={{maxWidth: 0}} className=\"text-truncate\">{s.nome}</td>\r\n                                            </Tooltip>\r\n                                            <Tooltip title={s.cognome}>\r\n                                                <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cognome}</td>\r\n                                            </Tooltip>\r\n                                            <td style={{maxWidth: 0}} className=\"text-truncate\">{s.annoFrequentazione}</td>\r\n                                            <Tooltip title={s.cf}>\r\n                                                <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cf}</td>\r\n                                            </Tooltip>\r\n                                            <td style={{maxWidth: 0}} className=\"text-truncate\">{formatItalian(s.dataNascita)}</td>\r\n                                            <Tooltip title={s.email}>\r\n                                                <td style={{maxWidth: 0}} className=\"text-truncate\">{s.email}</td>\r\n                                            </Tooltip>\r\n                                        </tr>\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"bottom-side p-3 text-right\">\r\n                    <button className=\"btn btn-danger mr-2\" onClick={this.hidePopup}>Annulla</button>\r\n                    <button className=\"btn btn-success\" onClick={this.confirmImport}>Conferma importazione</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Tooltip, Spin, Icon, Modal, message, Button } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl } from \"../../utilities\"\r\nimport { IMateria } from \"../../models/IMateria\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly materie: IMateria[]\r\n    readonly showModal: boolean\r\n    readonly nomeMateria: string\r\n    readonly showEditModal: boolean\r\n    readonly materiaEdit: IMateria\r\n    readonly nomeEdit: string\r\n    readonly descEdit: string\r\n    readonly descMateria: string\r\n}\r\n\r\nexport default class MaterieList extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            materie: null,\r\n            showModal: false,\r\n            nomeMateria: \"\",\r\n            descMateria: \"\",\r\n            showEditModal: false,\r\n            materiaEdit: null,\r\n            nomeEdit: \"\",\r\n            descEdit: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/materie/getmateriebycorso/\" + this.props.corso).then((response) => {\r\n            this.setState({\r\n                materie: response.data as IMateria[]\r\n            })\r\n        })\r\n    }\r\n\r\n    showHideModal = () => {\r\n        this.setState({\r\n            showModal: !this.state.showModal,\r\n            nomeMateria: \"\",\r\n            descMateria: \"\"\r\n        })\r\n    }\r\n\r\n    hideEditModal = () => {\r\n        this.setState({\r\n            showEditModal: false,\r\n            nomeEdit: \"\",\r\n            materiaEdit: null\r\n        })\r\n    }\r\n\r\n    showEditModal = (materia: IMateria) => {\r\n        this.setState({\r\n            showEditModal: true,\r\n            nomeEdit: materia.nome,\r\n            descEdit: materia.descrizione,\r\n            materiaEdit: materia\r\n        })\r\n    }\r\n\r\n    aggiungiMateria = () => {\r\n        const { nomeMateria, descMateria } = this.state\r\n\r\n        if(nomeMateria.trim() === \"\" || descMateria.trim() === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n           return\r\n        }\r\n        \r\n        this.setState({\r\n            materie: null,\r\n            showModal: false\r\n        })\r\n\r\n        Axios.post(siteUrl+\"/api/materie/\"+this.props.corso, {\r\n            nome: nomeMateria.trim(),\r\n            descrizione: descMateria.trim()\r\n        }).then(response => {\r\n            let materie = response.data as IMateria[]\r\n\r\n            this.setState({\r\n                materie: materie\r\n            })\r\n\r\n            message.success(\"Materia aggiunta con successo!\")\r\n        })\r\n\r\n    }\r\n\r\n    modificaMateria = () => {\r\n        const { nomeEdit, materiaEdit, descEdit } = this.state\r\n\r\n        if(nomeEdit === \"\" || descEdit === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n           return\r\n        }\r\n        \r\n        this.setState({\r\n            materie: null,\r\n            showEditModal: false\r\n        })\r\n\r\n        Axios.put(siteUrl+\"/api/materie/\"+materiaEdit.idMateria, {\r\n            idMateria: materiaEdit.idMateria,\r\n            nome: nomeEdit.trim(),\r\n            descrizione: descEdit.trim()\r\n        }).then(response => {\r\n            let materie = response.data as IMateria[]\r\n\r\n            this.setState({\r\n                materie: materie,\r\n                materiaEdit: null,\r\n                nomeEdit: \"\",\r\n                descEdit: \"\"\r\n            })\r\n\r\n            message.success(\"Materia modificata con successo!\")\r\n        })\r\n\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nomeMateria: nome\r\n        })\r\n    }\r\n\r\n    changeNomeEdit = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nomeEdit: nome\r\n        })\r\n    }\r\n\r\n    changeDesc = (event: any) => {\r\n        let desc = event.target.value\r\n\r\n        this.setState({\r\n            descMateria: desc\r\n        })\r\n    }\r\n\r\n    changeDescEdit = (event: any) => {\r\n        let desc = event.target.value\r\n\r\n        this.setState({\r\n            descEdit: desc\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { materie, nomeMateria, showModal, showEditModal, materiaEdit, nomeEdit, descMateria, descEdit } = this.state\r\n        \r\n        if(!materie){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Lista delle materie</h3>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={this.showHideModal}>\r\n                <i className=\"fal fa-plus\"></i> Aggiungi materia\r\n            </button>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                \r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th>Descrizione</th>\r\n                            <th style={{width: \"10%\"}}>Azioni</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            materie.map(m => {        \r\n                                return <tr>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{m.nome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{m.descrizione}</td>\r\n                                    <td>\r\n                                        <Tooltip title=\"Modifica\">\r\n                                            <button type=\"button\" className=\"btn btn-warning text-white circle-btn\" onClick={() => this.showEditModal(m)}>\r\n                                                <i className=\"fa fa-pen\"></i>\r\n                                            </button>\r\n                                        </Tooltip>\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n\r\n            <Modal title=\"Aggiungi una materia\" visible={showModal} footer={[\r\n                <Button type=\"primary\" onClick={this.aggiungiMateria}>Aggiungi</Button>,\r\n                <Button type=\"default\" onClick={this.showHideModal}>Annulla</Button>\r\n            ]} onCancel={this.showHideModal}>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Nome della materia</label>\r\n                        <input type=\"text\" value={nomeMateria} onChange={this.changeNome} className=\"form-control\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Descrizione della materia</label>\r\n                        <input type=\"text\" value={descMateria} onChange={this.changeDesc} className=\"form-control\" />\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n\r\n            {\r\n                materiaEdit && <Modal title=\"Modifica di una materia\" visible={showEditModal} footer={[\r\n                    <Button type=\"primary\" onClick={this.modificaMateria}>Modifica</Button>,\r\n                    <Button type=\"default\" onClick={this.hideEditModal}>Annulla</Button>\r\n                ]} onCancel={this.hideEditModal}>\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-secondary\">Nome della materia</label>\r\n                            <input type=\"text\" value={nomeEdit} onChange={this.changeNomeEdit} className=\"form-control\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-secondary\">Descrizione della materia</label>\r\n                            <input type=\"text\" value={descEdit} onChange={this.changeDescEdit} className=\"form-control\" />\r\n                        </div>\r\n                    </form>\r\n                </Modal>\r\n            }\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Tooltip } from \"antd\"\r\n\r\nexport interface IProps{\r\n    readonly src: string\r\n    readonly width?: number | string\r\n    readonly height?: number | string\r\n    readonly scalable?: boolean\r\n    readonly style?: React.CSSProperties\r\n}\r\nexport interface IState{\r\n    readonly scaled: boolean\r\n    readonly coords: number[]\r\n}\r\n\r\nexport default class ImageScale extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            scaled: false,\r\n            coords: [0, 0]\r\n        }\r\n    }\r\n\r\n    scaleImage = () => {\r\n        if(!this.props.scalable) return\r\n\r\n        this.setState({\r\n            scaled: !this.state.scaled\r\n        })\r\n        \r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { src, width, height, scalable, style } = this.props\r\n        const { scaled } = this.state\r\n        let firstclass = scalable ? \"scalable \" : \"\",\r\n        classname = scaled ? \"scaled\" : \"\",\r\n        title = scalable ? \"Cliccare per \" + (scaled ? \"rimpicciolire\" : \"ingrandire\") : null\r\n\r\n        return <Tooltip title={title}>\r\n            <img alt=\"scale\" style={style} className={\"imagescale \"+firstclass+classname} src={src} width={width} height={height} onClick={this.scaleImage} />\r\n        </Tooltip>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, message, Icon, Spin } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl } from \"../../utilities\"\r\nimport { ICalendar } from \"../../models/ICalendar\"\r\n\r\nexport interface IProps{\r\n    readonly anno: number\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly calendarId: string\r\n    readonly calendar: ICalendar\r\n}\r\n\r\nexport default class ConfigForm extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            calendarId: null,\r\n            calendar: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { corso, anno } = this.props\r\n\r\n        Axios.get(siteUrl+\"/api/calendari/\"+corso+\"/\"+anno).then(response => {\r\n            let calendar = response.data as ICalendar\r\n\r\n            this.setState({\r\n                calendarId: calendar.idGoogleCalendar,\r\n                calendar: calendar\r\n            })\r\n        })\r\n    }\r\n\r\n    changeID = (e: any) => {\r\n        let calendarId = e.target.value\r\n\r\n        this.setState({\r\n            calendarId: calendarId\r\n        })\r\n    }\r\n\r\n    saveConfig = () => {\r\n        const { corso, anno } = this.props\r\n        const { calendarId, calendar } = this.state\r\n\r\n        if(calendarId === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.post(siteUrl+\"/api/calendari\", {\r\n            IdCalendario: calendar ? calendar.idCalendario : \"0\",\r\n            IdCorso: corso,\r\n            Anno: anno,\r\n            IdGoogleCalendar: calendarId\r\n        }).then(_ => {\r\n            message.success(\"Configurazione calendario salvata!\")\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { calendarId } = this.state\r\n\r\n        if(calendarId === null){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"text-center\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <form>\r\n            <div className=\"form-group row\">\r\n                <div className=\"col\">\r\n                    <label className=\"text-secondary\">ID Calendario</label>\r\n                    <input name=\"calendarID\" type=\"text\" className=\"form-control\" value={calendarId} onChange={this.changeID} />\r\n                </div>\r\n            </div>\r\n\r\n            <button type=\"button\" className=\"btn btn-success float-right mr-1 mb-1\" onClick={this.saveConfig}>Salva configurazione</button>\r\n        </form>\r\n    }\r\n}","import React from \"react\"\r\nimport { Icon, Modal, Tooltip, Tabs } from \"antd\"\r\nimport ImageScale from \"../ImageScale\"\r\nimport ConfigForm from \"./ConfigForm\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{}\r\n\r\nexport default class ConfigCalendar extends React.PureComponent<IProps, IState>{\r\n    showHelp = () => {\r\n        Modal.info({\r\n            width: 700,\r\n            style: { top: 24 },\r\n            centered: false,\r\n            maskClosable: true,\r\n            icon: <Icon type=\"question-circle\" style={{ marginTop: 6, fontSize: 28, color: \"orange\" }} />,\r\n            okText: \"Ho capito\",\r\n            content: <div className=\"text-justify\">\r\n                <strong>Dove mi trovo?</strong>\r\n                <p>In questa pagina potrai configurare il calendario dal quale verranno caricate le lezioni del corso.</p>\r\n                <strong>Come si configura il calendario?</strong>\r\n                <p>Per configurare il calendario avrai bisogno di un codice univoco, che ti permetterà di collegare il calendario al sito.</p>\r\n                <strong>ID del calendario</strong>\r\n                <p>Per trovare l'ID (identificativo) del calendario, basterà effettuare l'accesso su <a href=\"https://calendar.google.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Google Calendar <i className=\"far fa-external-link\"></i></a> con un account che abbia integrato il calendario del corso. Bisognerà poi premere sul simbolo <i className=\"far fa-cog\"></i> in alto a destra e successivamente su <strong>Impostazioni</strong> nel menu che comparirà. Scorrere quindi la lista a sinistra della pagina, e cliccare sul calendario che si desidera integrare. Recarsi sotto la voce <strong>Integra calendario</strong> e copiare (subito in basso) il codice identificativo del calendario (<strong>ID calendario</strong>), per poi incollarlo in questa pagina di configurazione.</p>\r\n                <p><u>Assicurati che il calndario sia <strong>pubblico</strong>, altrimenti non sarà possibile visualizzarlo.</u></p>\r\n                <strong className=\"d-block mb-2\">Galleria immagini</strong>\r\n                <ImageScale src=\"https://i.imgur.com/e3H0hXX.png\" height={100} scalable={true} />\r\n            </div>\r\n        })\r\n\r\n        setTimeout(() => document.getElementsByClassName(\"ant-modal-wrap\")[0].scrollTo(0, 0), 100)\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { TabPane } = Tabs\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">\r\n                Configurazione calendario\r\n                <Tooltip title=\"Informazioni\">\r\n                    <button type=\"button\" className=\"btn btn-info circle-btn float-right\" onClick={this.showHelp}>\r\n                        <i className=\"fa fa-question\"></i>\r\n                    </button>\r\n                </Tooltip>\r\n                <div className=\"clearfix\"></div>\r\n            </h3>\r\n\r\n            <Tabs>\r\n                <TabPane tab=\"Primo anno\" key=\"1\">\r\n                    <ConfigForm anno={1} corso={this.props.corso} />\r\n                </TabPane>\r\n                <TabPane tab=\"Secondo anno\" key=\"2\">\r\n                    <ConfigForm anno={2} corso={this.props.corso} />\r\n                </TabPane>\r\n            </Tabs>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { routerHistory } from \"..\"\r\n\r\nexport interface IProps{\r\n    readonly goTo: string\r\n}\r\nexport interface IState{}\r\n\r\nexport default class Page404 extends React.PureComponent<IProps, IState>{\r\n    render(): JSX.Element{\r\n        return <div id=\"mainBlock\" className=\"col\">\r\n            <div className=\"text-center text-grey w-100\">\r\n                <i className=\"fal fa-exclamation-triangle mb-2\" style={{ fontSize: 150}}></i>\r\n                <h1 className=\"mb-2 text-grey font-weight-normal\">Errore 404</h1>\r\n                <p style={{ fontSize: 20 }}>La pagina che stati cercando non esiste.</p>\r\n                <button onClick={() => routerHistory.push(this.props.goTo)} type=\"button\" className=\"btn btn-blue btn-lg text-uppercase\">\r\n                    <i className=\"fa fa-shield-check fa-lg fa-fw mr-2\"></i>\r\n                    Torna al sicuro\r\n                </button>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"../..\"\r\nimport LoginTutor from \"./LoginTutor\"\r\nimport StudentsList from \"./StudentsList\"\r\nimport AddNewStudent from \"./AddNewStudent\"\r\nimport StudentDetails from \"./StudentDetails\"\r\nimport DocentiList from \"./DocentiList\"\r\nimport AddNewDocente from \"./AddNewDocente\"\r\nimport DocenteDetails from \"./DocenteDetails\"\r\nimport EditDocente from \"./EditDocente\"\r\nimport EditStudente from \"./EditStudente\"\r\nimport StudentsImport from \"./StudentsImport\"\r\nimport MaterieList from \"./MaterieList\"\r\nimport ConfigCalendar from \"./ConfigCalendar\"\r\nimport { IAdmin } from \"../../models/IAdmin\"\r\nimport LogoCorso from \"../LogoCorso\"\r\nimport Page404 from \"../Page404\"\r\nimport { adminRoute } from \"../../utilities\"\r\n\r\nexport default class Dashboard extends React.Component{\r\n\r\n    componentWillUnmount = () => {\r\n        sessionStorage.removeItem(\"adminSession\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n\r\n        let session = sessionStorage.getItem(\"adminSession\")\r\n        \r\n        if(!session)\r\n            return <LoginTutor />\r\n\r\n        let admin = JSON.parse(session) as IAdmin\r\n\r\n        return <div className=\"container-fluid\">\r\n            <Router history={routerHistory}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3 bg-blue p-0 menu\">\r\n                        \r\n                        <LogoCorso idCorso={admin.idCorso} />\r\n\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/studenti\")} to={adminRoute+\"/studenti\"}>\r\n                            <span>Studenti</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/docenti\")} to={adminRoute+\"/docenti\"}>\r\n                            <span>Docenti</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/materie\")} to={adminRoute+\"/materie\"}>\r\n                            <span>Materie</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/config\")} to={adminRoute+\"/config\"}>\r\n                            <span>Configura calendario</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => {\r\n                            sessionStorage.removeItem(\"adminSession\")\r\n                            routerHistory.push(adminRoute)\r\n                        }} exact to={adminRoute+\"/login\"}>\r\n                            <span>Esci</span>\r\n                        </NavLink>\r\n                    </div>\r\n  \r\n                    <Switch>\r\n                        <Route exact path={adminRoute} render={() => {\r\n                            routerHistory.push(adminRoute+\"/studenti\")\r\n\r\n                            return null\r\n                        }} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti\"} render={() => (\r\n                            <StudentsList corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti/new\"} render={() => (\r\n                            <AddNewStudent corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti/import\"} render={() => (\r\n                            <StudentsImport corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti/:id\"} render={(routeProps) => (\r\n                            <StudentDetails {...routeProps} corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti/edit/:id\"} render={(routeProps) => (\r\n                            <EditStudente {...routeProps} corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/docenti\"} render={() => (\r\n                            <DocentiList corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/docenti/new\"} render={() => (\r\n                            <AddNewDocente corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/docenti/:id\"} render={(routeProps) => (\r\n                            <DocenteDetails {...routeProps} corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/docenti/edit/:id\"} render={(routeProps) => (\r\n                            <EditDocente {...routeProps} corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/materie\"} render={() => (\r\n                            <MaterieList corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/config\"} render={() => (\r\n                            <ConfigCalendar corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route render={() => <Page404 goTo={adminRoute} />} />\r\n\r\n                    </Switch>\r\n                        \r\n                </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport { Spin, Icon } from \"antd\"\r\nimport QRCode from \"qrcode.react\"\r\nimport Axios from \"axios\"\r\n\r\nexport interface IProps{\r\n    studentId: number\r\n}\r\nexport interface IState{\r\n    readonly code: string\r\n}\r\n\r\nexport default class QRCodeScreen extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            code: null\r\n        }\r\n\r\n        this.reloadCode()\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        setInterval(() => {\r\n            this.setState({\r\n                code: null\r\n            })\r\n\r\n            this.reloadCode()\r\n        }, 20000)\r\n    }\r\n\r\n    reloadCode = () => {\r\n        Axios.get(\"http://mygraphic.altervista.org/reg/api?codice&studente=\"+this.props.studentId).then((response) => {\r\n            this.setState({\r\n                code: response.data\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { code } = this.state\r\n\r\n        if(!code){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div>\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"text-center\">\r\n            <h5 className=\"mb-4 font-weight-normal text-black underline\">Scannerizza questo codice</h5>\r\n            <QRCode value={code} size={200} />\r\n        </div>\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport FullCalendar from \"@fullcalendar/react\"\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\"\r\nimport { Digits2 } from \"../../utilities\"\r\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\"\r\nimport { Modal, Icon, Spin } from \"antd\"\r\nimport { ICalendar } from \"../../models/ICalendar\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\n\r\nimport \"@fullcalendar/core/main.css\"\r\nimport \"@fullcalendar/timegrid/main.css\"\r\n\r\nexport interface IProps{\r\n    readonly student: IStudent\r\n}\r\nexport interface IState{\r\n    readonly calendar: ICalendar\r\n}\r\n\r\nexport default class UserCalendar extends React.PureComponent<IProps, IState> {\r\n    constructor(props: IProps){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            calendar: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        /*************************************/\r\n        /* CARICAMENTO CALENDARIO IN BASE A  */\r\n        /* this.props.student.idCorso        */\r\n        /* this.props.student.annoFrequentazione */\r\n        /*************************************/\r\n    }\r\n    \r\n    render(): JSX.Element{\r\n        const { calendar } = this.state\r\n    \r\n        if(!calendar){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n        \r\n        return <div>\r\n            <h5 className=\"text-center text-black w-100\">Calendario del mese</h5>\r\n            <FullCalendar\r\n            plugins={[ googleCalendarPlugin, dayGridPlugin ]}\r\n            events={ { googleCalendarId: calendar.idGoogleCalendar} }\r\n            googleCalendarApiKey={\"AIzaSyCEEaAbHOYhofQs-iLdHd_J8-KyD_IlRbE\"}\r\n            defaultView=\"dayGridMonth\"\r\n            fixedWeekCount={false}\r\n            header={false}\r\n            firstDay={1}\r\n            themeSystem={\"bootstrap\"}\r\n            eventTimeFormat={{\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n                meridiem: false\r\n            }}\r\n            locale={\"it\"}\r\n            eventClick={\r\n                function(info){\r\n                    info.jsEvent.preventDefault()\r\n                    let event = info.event\r\n                    \r\n                    Modal.info({\r\n                        maskClosable: true,\r\n                        centered: true,\r\n                        icon: null,\r\n                        title: event.title,\r\n                        content: <div className=\"mt-3\" style={{ fontSize: 20 }}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3 pr-0\">\r\n                                    <span className=\"label\">Inizio</span>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <span className=\"desc\">\r\n                                        { Digits2(event.start.getHours()) }:{ Digits2(event.start.getMinutes()) }\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3 pr-0\">\r\n                                    <span className=\"label\">Fine</span>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <span className=\"desc\">\r\n                                        { Digits2(event.end.getHours()) }:{ Digits2(event.end.getMinutes()) }\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            {  \r\n                                event.extendedProps.location && <div className=\"row\">\r\n                                    <div className=\"col-3 pr-0\">\r\n                                        <span className=\"label\">Luogo</span>\r\n                                    </div>\r\n                                    <div className=\"col-9\" style={{ fontSize: 15 }}>\r\n                                        {event.extendedProps.location}\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    })\r\n                }\r\n            } />\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"../..\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport QRCodeScreen from \"./QRCodeScreen\"\r\nimport UserCalendar from \"./UserCalendar\"\r\n\r\nexport default class UserApplication extends React.Component{\r\n\r\n    componentDidMount = () => {\r\n        localStorage.setItem(\"student\", JSON.stringify({\r\n            idStudente: 1,\r\n            idCorso: 1,\r\n            nome: \"Leonardo\",\r\n            cognome: \"Grandolfo\",\r\n            annoFrequentazione: 1,\r\n            cf: \"GRNLRD99D17L219L\",\r\n            dataNascita: \"17-04-1999\",\r\n            code: \"CIAO-GGG\"\r\n        }))\r\n    }\r\n    \r\n    render(): JSX.Element{\r\n        let session = localStorage.getItem(\"student\")\r\n        \r\n        // if(!session)\r\n        //     return <AppLogin />\r\n\r\n        let student = JSON.parse(session) as IStudent\r\n\r\n        return <div className=\"container-fluid px-0\">\r\n            <Router history={routerHistory}>\r\n                    <div className=\"main-screen overflow-auto\" id=\"mainBlock\">\r\n                        <Switch>\r\n                            <Route exact path=\"/userprofile\" render={() => {\r\n                                routerHistory.push(\"/userprofile/qrcode\")\r\n\r\n                                return null\r\n                            }} />\r\n\r\n                            <Route exact path=\"/userprofile/qrcode\" render={() => (\r\n                                <QRCodeScreen studentId={student.idStudente} />\r\n                            )} />\r\n\r\n                            <Route exact path=\"/userprofile/calendar\" render={() => (\r\n                                <UserCalendar student={student} />\r\n                            )} />\r\n\r\n                        </Switch>\r\n                    </div>\r\n\r\n                    <div className=\"bottom-menu\">\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/userprofile/presenze\")} to=\"/userprofile/presenze\">\r\n                            <span>\r\n                                <i className=\"far fa-exclamation-circle fa-fw fa-2x mb-2\"></i>\r\n                                Presenze\r\n                            </span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/userprofile/voti\")} to=\"/userprofile/voti\">\r\n                            <span>\r\n                                <i className=\"fa fa-stars fa-fw fa-2x mb-2\"></i>\r\n                                Voti\r\n                            </span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/userprofile/qrcode\")} to=\"/userprofile/qrcode\">\r\n                            <span>\r\n                                <i className=\"fal fa-qrcode fa-fw fa-2x mb-2\"></i>\r\n                                Codice QR\r\n                            </span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/userprofile/calendar\")} to=\"/userprofile/calendar\">\r\n                            <span>\r\n                                <i className=\"fal fa-calendar fa-fw fa-2x mb-2\"></i>\r\n                                Lezioni\r\n                            </span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/userprofile/account\")} to=\"/userprofile/account\">\r\n                            <span>\r\n                                <i className=\"far fa-user fa-fw fa-2x mb-2\"></i>\r\n                                Profilo\r\n                            </span>\r\n                        </NavLink>\r\n                    </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { routerHistory } from \"../..\"\r\nimport { message, Modal } from \"antd\"\r\nimport { mountLogin, unmountLogin, siteUrl, logoUrl } from \"../../utilities\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\nimport Axios from \"axios\"\r\nimport { isAdminDocente } from \"../../models/IAdminDocente\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly adminName: string\r\n    readonly adminPsw: string\r\n}\r\n\r\nexport default class LoginDocenti extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            adminName: \"\",\r\n            adminPsw: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    changeInputName = (event: any) => {\r\n        let name = event.target.value\r\n\r\n        this.setState({\r\n            adminName: name\r\n        })\r\n    }\r\n\r\n    changeInputPassword = (event: any) => {\r\n        let psw = event.target.value\r\n\r\n        this.setState({\r\n            adminPsw: psw\r\n        })\r\n    }\r\n\r\n    tryLogin = (e: any) => {\r\n        e.preventDefault()\r\n        \r\n        const { adminName, adminPsw } = this.state\r\n        let cipher = new Cipher(),\r\n        password = cipher.encode(adminPsw)\r\n\r\n        Axios.post(siteUrl+\"/api/logindocente\", {\r\n            username: adminName.trim(),\r\n            password: password\r\n        }).then(response => {\r\n            let data = response.data\r\n\r\n            if(isAdminDocente(data)){\r\n                sessionStorage.setItem(\"docenteSession\", JSON.stringify(data))\r\n                routerHistory.push(\"/docentipanel/\")\r\n                message.success(\"Login effettuato con successo!\")\r\n            }\r\n            else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Username o Password errati!\"\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { adminName, adminPsw } = this.state\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.tryLogin}>\r\n                <h3 className=\"d-inline-block\">Accesso docenti</h3>\r\n                <img src={logoUrl} height=\"40\" className=\"float-right logo\" alt=\"logo\" />\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Utente di accesso</label>\r\n                    <input name=\"username\" type=\"text\" className=\"form-control\" value={adminName} onChange={this.changeInputName} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Password di accesso</label>\r\n                    <input name=\"password\" type=\"password\" className=\"form-control\" value={adminPsw} onChange={this.changeInputPassword} />\r\n                </div>\r\n\r\n                <input type=\"submit\" value=\"Accedi\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n            </form>\r\n        </div>\r\n    }\r\n\r\n}","export interface IAdminDocente{\r\n    readonly idDocente: number\r\n    readonly nome: string\r\n    readonly cognome: string\r\n}\r\nexport const isAdminDocente = (obj: any) => {\r\n    try{\r\n        return \"idDocente\" in obj && \"nome\" in obj && \"cognome\" in obj\r\n    }catch{\r\n        return false\r\n    }\r\n}","import React from \"react\"\r\nimport { ILezione } from \"../../models/ILezione\"\r\nimport { Icon, Spin, Tooltip } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, formatItalian } from \"../../utilities\"\r\n\r\nexport interface IProps{\r\n    readonly idDocente: number\r\n}\r\nexport interface IState{\r\n    readonly lezioni: ILezione[]\r\n}\r\n\r\nexport default class LezioniDocente extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            lezioni: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { idDocente } = this.props\r\n\r\n        //LEZIONI VANNO PRESE TUTTE QUELLE TENUTE E DIVISE IN BASE AI CORSI\r\n\r\n        Axios.get(siteUrl+\"/api/lezioni/\"+idDocente).then(response => {\r\n            let lezioni = response.data as ILezione[]\r\n\r\n            this.setState({\r\n                lezioni: lezioni\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { lezioni } = this.state\r\n        \r\n        if(!lezioni){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Lezioni tenute</h3>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                \r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Data</th>\r\n                            <th>Orario inizio</th>\r\n                            <th>Orario fine</th>\r\n                            <th style={{width: \"20%\"}}>Azioni</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            lezioni.map(l => {        \r\n                                return <tr>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{formatItalian(l.data)}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{l.inizio}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{l.fine}</td>\r\n                                    <td>\r\n                                        <Tooltip title=\"Dettagli\">\r\n                                            <button type=\"button\" className=\"btn btn-info circle-btn\" onClick={() => routerHistory.push(\"/docentipanel/lezioni/\" + l.idLezione)}>\r\n                                                <i className=\"fa fa-info\"></i>\r\n                                            </button>\r\n                                        </Tooltip>\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { ILezione } from \"../../models/ILezione\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl } from \"../../utilities\"\r\nimport { Icon, Spin } from \"antd\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{}\r\nexport interface IState{\r\n    readonly lezione: ILezione\r\n    readonly studenti: IStudent[]\r\n}\r\n\r\nexport default class LezioneDetails extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            lezione: null,\r\n            studenti: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/lezioni/\"+this.props.match.params.id).then(response => {\r\n            let lezione = response.data as ILezione\r\n\r\n            this.setState({\r\n                lezione: lezione\r\n            })\r\n\r\n            Axios.get(siteUrl+\"/api/studenti/\"+lezione.idCorso).then(response => {\r\n                let studenti = response.data as IStudent[]\r\n    \r\n                this.setState({\r\n                    studenti: studenti\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { lezione, studenti } = this.state\r\n\r\n        if(!lezione || !studenti){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Lezione del {lezione.data}</h3>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                \r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th>Cognome</th>\r\n                            <th>Presenza</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            studenti.map(s => {      \r\n                                let find = lezione.frequentata.find(stu => stu.idStudente === s.idStudente),\r\n                                presente = find ? \"Presente\" : \"Assente\",\r\n                                color = find ? \"success\" : \"danger\"\r\n                                  \r\n                                return <tr>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{s.nome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cognome}</td>\r\n                                    <td style={{maxWidth: 0}} className={\"text-truncate text-white bg-\"+color}>{presente}</td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"../..\"\r\nimport LoginDocenti from \"./LoginDocenti\"\r\nimport LezioniDocente from \"./LezioniDocente\"\r\nimport LezioneDetails from \"./LezioneDetails\"\r\nimport { IAdminDocente } from \"../../models/IAdminDocente\"\r\nimport LogoCorso from \"../LogoCorso\"\r\nimport Page404 from \"../Page404\"\r\nimport { docentiRoute } from \"../../utilities\"\r\n\r\nexport default class DocentiDashboard extends React.Component{\r\n\r\n    componentWillUnmount = () => {\r\n        sessionStorage.removeItem(\"docenteSession\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n\r\n        let session = sessionStorage.getItem(\"docenteSession\")\r\n        \r\n        if(!session)\r\n            return <LoginDocenti />\r\n\r\n        let admin = JSON.parse(session) as IAdminDocente\r\n\r\n        return <div className=\"container-fluid\">\r\n            <Router history={routerHistory}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3 bg-blue p-0 menu\">\r\n                        \r\n                        <LogoCorso />\r\n\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/docentipanel/lezioni\")} to=\"/docentipanel/lezioni\">\r\n                            <span>Lezioni tenute</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => {\r\n                            sessionStorage.removeItem(\"docenteSession\")\r\n                            routerHistory.push(\"/docentipanel\")\r\n                        }} exact to=\"/docentipanel/login\">\r\n                            <span>Esci</span>\r\n                        </NavLink>\r\n                    </div>\r\n\r\n                    <Switch>\r\n                        <Route exact path=\"/docentipanel/\" render={() => {\r\n                            routerHistory.push(\"/docentipanel/lezioni\")\r\n\r\n                            return null\r\n                        }} />\r\n\r\n                        <Route exact path=\"/docentipanel/lezioni/:id\" render={(routeProps) => (\r\n                            <LezioneDetails {...routeProps} />\r\n                        )} />\r\n\r\n                        <Route exact path=\"/docentipanel/lezioni\" render={() => \r\n                            <LezioniDocente idDocente={admin.idDocente}/>\r\n                        } />\r\n\r\n                        <Route render={() => <Page404 goTo={docentiRoute} />} />\r\n\r\n                    </Switch>\r\n                        \r\n                </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, superAdminRoute } from \"../../utilities\"\r\nimport { Icon, Spin, Tooltip } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly corsi: ICorso[]\r\n}\r\n\r\nexport default class CorsiList extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            corsi: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                corsi: corsi\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { corsi } = this.state\r\n        \r\n        if(!corsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Lista dei corsi</h3>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={() => routerHistory.push(superAdminRoute+\"/corsi/new\")}>\r\n                <i className=\"fal fa-plus\"></i> Aggiungi corso\r\n            </button>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                \r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th>Descrizione</th>\r\n                            <th>Luogo</th>\r\n                            <th style={{width: \"10%\"}}>Azioni</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            corsi.map(c => {        \r\n                                return <tr>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{c.nome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{c.descrizione}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{c.luogo}</td>\r\n                                    <td>\r\n                                        <Tooltip title=\"Modifica\">\r\n                                            <button type=\"button\" className=\"btn btn-warning text-white circle-btn\" onClick={() => routerHistory.push(superAdminRoute+\"/corsi/edit/\" + c.idCorso)}>\r\n                                                <i className=\"fa fa-pen\"></i>\r\n                                            </button>\r\n                                        </Tooltip>\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Upload, Icon, message } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { imageFileToBase64, superAdminRoute, siteUrl } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly descrizione: string\r\n    readonly luogo: string\r\n    readonly logo: string\r\n}\r\n\r\nexport default class AddNewCorso extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            descrizione: \"\",\r\n            luogo: \"\",\r\n            logo: null\r\n        }\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeDesc = (event: any) => {\r\n        let desc = event.target.value\r\n\r\n        this.setState({\r\n            descrizione: desc\r\n        })\r\n    }\r\n\r\n    changeLuogo = (event: any) => {\r\n        let luogo = event.target.value\r\n\r\n        this.setState({\r\n            luogo: luogo\r\n        })\r\n    }\r\n\r\n    aggiungiCorso = () => {\r\n        const { nome, descrizione, luogo, logo } = this.state\r\n\r\n        if(nome.trim() === \"\" || descrizione.trim() === \"\" || luogo.trim() === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.post(siteUrl+\"/api/corsi\", {\r\n            nome: nome.trim(),\r\n            descrizione: descrizione.trim(),\r\n            luogo: luogo.trim(),\r\n            logo: logo\r\n        }).then(_ => {\r\n            message.success(\"Corso creato con successo!\")\r\n            routerHistory.push(superAdminRoute+\"/corsi\")\r\n        })\r\n\r\n    }\r\n\r\n    convertImage = (file: any) => {\r\n        imageFileToBase64(file).then(result => {\r\n            this.setState({\r\n                logo: String(result)\r\n            })\r\n        })\r\n\r\n        return false\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, descrizione, luogo, logo } = this.state,\r\n        uploadButton = (\r\n            <div>\r\n                <Icon type=\"plus\" style={{ fontSize: 30, marginBottom: 5 }} />\r\n                <div className=\"ant-upload-text\">Carica immagine</div>\r\n            </div>\r\n        )\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Aggiungi un nuovo corso</h3>\r\n\r\n            <form className=\"row\">\r\n\r\n                <div className=\"form-group mr-3\">\r\n                    <label className=\"text-secondary d-block\">Logo</label>\r\n                    <Upload listType=\"picture-card\" showUploadList={false} beforeUpload={(file) => this.convertImage(file)} className=\"logo-upload\" accept=\"image/*\">\r\n                        {logo ? <img src={logo} alt=\"logo\" style={{ width: \"100%\" }} /> : uploadButton}\r\n                    </Upload>\r\n                </div>\r\n                \r\n                <div className=\"col\">\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col\">\r\n                            <label className=\"text-secondary\">Nome</label>\r\n                            <input name=\"nomecorso\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                        </div>\r\n                        <div className=\"col pr-0\">\r\n                            <label className=\"text-secondary\">Luogo</label>\r\n                            <input name=\"luogo\" type=\"text\" className=\"form-control\" value={luogo} onChange={this.changeLuogo} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col pr-0\">\r\n                            <label className=\"text-secondary\">Breve descrizione</label>\r\n                            <textarea name=\"description\" className=\"form-control\" rows={2} onChange={this.changeDesc}>{descrizione}</textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.aggiungiCorso}>Aggiungi corso</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { routerHistory } from \"../..\"\r\nimport { message, Modal } from \"antd\"\r\nimport { mountLogin, unmountLogin, siteUrl, logoUrl, superAdminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\nimport { isSuperAdmin } from \"../../models/IAdmin\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly adminName: string\r\n    readonly adminPsw: string\r\n}\r\n\r\nexport default class LoginAdmin extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            adminName: \"\",\r\n            adminPsw: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    changeInputName = (event: any) => {\r\n        let name = event.target.value\r\n\r\n        this.setState({\r\n            adminName: name\r\n        })\r\n    }\r\n\r\n    changeInputPassword = (event: any) => {\r\n        let psw = event.target.value\r\n\r\n        this.setState({\r\n            adminPsw: psw\r\n        })\r\n    }\r\n\r\n    tryLogin = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { adminName, adminPsw } = this.state\r\n        let cipher = new Cipher(),\r\n        password = cipher.encode(adminPsw)\r\n\r\n        Axios.post(siteUrl+\"/api/amministratori/loginamministratori\", {\r\n            username: adminName.trim(),\r\n            password: password\r\n        }).then(response => {\r\n            let data = response.data\r\n\r\n            if(isSuperAdmin(data)){\r\n                sessionStorage.setItem(\"superSession\", JSON.stringify(data))\r\n                routerHistory.push(superAdminRoute)\r\n                message.success(\"Login effettuato con successo!\")\r\n            }\r\n            else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Username o Password errati!\",\r\n                    centered: true,\r\n                    maskClosable: true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { adminName, adminPsw } = this.state\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.tryLogin}>\r\n                <h3 className=\"d-inline-block\">Accesso amministratori</h3>\r\n                <img src={logoUrl} height=\"40\" className=\"float-right logo\" alt=\"logo\" />\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Utente di accesso</label>\r\n                    <input name=\"username\" type=\"text\" className=\"form-control\" value={adminName} onChange={this.changeInputName} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Password di accesso</label>\r\n                    <input name=\"password\" type=\"password\" className=\"form-control\" value={adminPsw} onChange={this.changeInputPassword} />\r\n                </div>\r\n\r\n                <input type=\"submit\" value=\"Accedi\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n            </form>\r\n        </div>\r\n    }\r\n\r\n}","import React from \"react\"\r\nimport { Modal, Icon, Spin, Upload, message } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, imageFileToBase64, superAdminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{}\r\nexport interface IState{\r\n    readonly corso: ICorso\r\n    readonly nome: string\r\n    readonly descrizione: string\r\n    readonly luogo: string\r\n    readonly logo: string\r\n}\r\n\r\nexport default class EditCorso extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            corso: null,\r\n            nome: \"\",\r\n            descrizione: \"\",\r\n            luogo: \"\",\r\n            logo: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(superAdminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/corsi/\" + id).then((response) => {\r\n            let corso = response.data as ICorso\r\n\r\n            this.setState({\r\n                corso: corso,\r\n                nome: corso.nome,\r\n                descrizione: corso.descrizione,\r\n                luogo: corso.luogo,\r\n                logo: corso.logo\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeDesc = (event: any) => {\r\n        let desc = event.target.value\r\n\r\n        this.setState({\r\n            descrizione: desc\r\n        })\r\n    }\r\n\r\n    changeLuogo = (event: any) => {\r\n        let luogo = event.target.value\r\n\r\n        this.setState({\r\n            luogo: luogo\r\n        })\r\n    }\r\n\r\n    modificaCorso = () => {\r\n        const { nome, descrizione, luogo, corso, logo } = this.state\r\n\r\n        if(nome.trim() === \"\" || descrizione.trim() === \"\" || luogo.trim() === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.put(siteUrl+\"/api/corsi/\"+corso.idCorso, {\r\n            idCorso: corso.idCorso,\r\n            nome: nome.trim(),\r\n            descrizione: descrizione.trim(),\r\n            luogo: luogo.trim(),\r\n            logo: logo\r\n        }).then(_ => {\r\n            message.success(\"Corso modificato con successo!\")\r\n            routerHistory.push(superAdminRoute+\"/corsi\")\r\n        })\r\n\r\n    }\r\n\r\n    convertImage = (file: any) => {\r\n        imageFileToBase64(file).then(result => {\r\n            this.setState({\r\n                logo: String(result)\r\n            })\r\n        })\r\n\r\n        return false\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, descrizione, luogo, corso, logo } = this.state,\r\n        uploadButton = (\r\n            <div>\r\n                <Icon type=\"plus\" style={{ fontSize: 30, marginBottom: 5 }} />\r\n                <div className=\"ant-upload-text\">Carica immagine</div>\r\n            </div>\r\n        )\r\n\r\n        if(!corso){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Modifica di un corso</h3>\r\n\r\n            <form className=\"row\">\r\n                <div className=\"form-group mr-3\">\r\n                    <label className=\"text-secondary d-block\">Logo</label>\r\n                    <Upload listType=\"picture-card\" showUploadList={false} beforeUpload={(file) => this.convertImage(file)} className=\"logo-upload\" accept=\"image/*\">\r\n                        {logo ? <img src={logo} alt=\"logo\" style={{ width: \"100%\" }} /> : uploadButton}\r\n                    </Upload>\r\n                </div>\r\n\r\n                <div className=\"col\">\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col\">\r\n                            <label className=\"text-secondary\">Nome</label>\r\n                            <input name=\"nomecorso\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <label className=\"text-secondary\">Luogo</label>\r\n                            <input name=\"luogo\" type=\"text\" className=\"form-control\" value={luogo} onChange={this.changeLuogo} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col\">\r\n                            <label className=\"text-secondary\">Breve descrizione</label>\r\n                            <textarea name=\"description\" className=\"form-control\" rows={2} onChange={this.changeDesc}>{descrizione}</textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.modificaCorso}>Modifica corso</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, superAdminRoute } from \"../../utilities\"\r\nimport { Icon, Spin, Tooltip } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { ITutor } from \"../../models/ITutor\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly tutor: ITutor[]\r\n}\r\n\r\nexport default class TutorList extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            tutor: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/coordinatori\").then(response => {\r\n            let tutor = response.data as ITutor[]\r\n\r\n            this.setState({\r\n                tutor: tutor\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { tutor } = this.state\r\n        \r\n        if(!tutor){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Lista dei coordinatori</h3>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={() => routerHistory.push(superAdminRoute+\"/tutor/new\")}>\r\n                <i className=\"fal fa-plus\"></i> Aggiungi coordinatore\r\n            </button>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                \r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th>Cognome</th>\r\n                            <th style={{width: \"30%\"}}>Corso</th>\r\n                            <th style={{width: \"10%\"}}>Azioni</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            tutor.map(t => {        \r\n                                return <tr>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{t.nome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{t.cognome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{t.corso}</td>\r\n                                    <td>\r\n                                        <Tooltip title=\"Modifica\">\r\n                                            <button type=\"button\" className=\"btn btn-warning text-white circle-btn\" onClick={() => routerHistory.push(superAdminRoute+\"/tutor/edit/\" + t.idCoordinatore)}>\r\n                                                <i className=\"fa fa-pen\"></i>\r\n                                            </button>\r\n                                        </Tooltip>\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Icon, message, Spin } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, superAdminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly email: string\r\n    readonly listaCorsi: ICorso[]\r\n    readonly corso: number\r\n}\r\n\r\nexport default class AddNewTutor extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            email: \"\",\r\n            listaCorsi: null,\r\n            corso: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                listaCorsi: corsi,\r\n                corso: corsi[0].idCorso\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n\r\n    changeCorso = (event: any) => {\r\n        let corso = parseInt(event.target.value)\r\n\r\n        this.setState({\r\n            corso: corso\r\n        })\r\n    }\r\n\r\n    isExistingCorso = (corso: number) => {\r\n        return this.state.listaCorsi.find(c => c.idCorso === corso)\r\n    }\r\n\r\n    aggiungiTutor = () => {\r\n        const { nome, cognome, email, corso } = this.state\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!this.isExistingCorso(corso)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Corso non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.post(siteUrl+\"/api/coordinatori\", {\r\n            nome: nome.trim(),\r\n            cognome: cognome.trim(),\r\n            email: email,\r\n            idCorso: corso\r\n        }).then(_ => {\r\n            message.success(\"Tutor creato con successo!\")\r\n            routerHistory.push(superAdminRoute+\"/tutor\")\r\n        })\r\n\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, email, listaCorsi } = this.state\r\n\r\n        if(!listaCorsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Aggiungi un nuovo coordinatore</h3>\r\n\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"text\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Corso gestito</label>\r\n                        <select name=\"anno\" onChange={this.changeCorso} className=\"custom-select\">\r\n                            {\r\n                                listaCorsi.map(c => {\r\n                                    return <option value={c.idCorso}>{c.nome}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.aggiungiTutor}>Aggiungi coordinatore</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Icon, message, Spin } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, superAdminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { ITutor } from \"../../models/ITutor\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly email: string\r\n    readonly listaCorsi: ICorso[]\r\n    readonly corso: number\r\n}\r\n\r\nexport default class EditTutor extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            email: \"\",\r\n            listaCorsi: null,\r\n            corso: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(superAdminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/coordinatori/\"+id).then(response => {\r\n            let tutor = response.data as ITutor\r\n\r\n            this.setState({\r\n                nome: tutor.nome,\r\n                cognome: tutor.cognome,\r\n                email: tutor.email,\r\n                corso: tutor.idCorso\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                listaCorsi: corsi\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n\r\n    changeCorso = (event: any) => {\r\n        let corso = parseInt(event.target.value)\r\n\r\n        this.setState({\r\n            corso: corso\r\n        })\r\n    }\r\n\r\n    isExistingCorso = (corso: number) => {\r\n        return this.state.listaCorsi.find(c => c.idCorso === corso)\r\n    }\r\n\r\n    aggiungiTutor = () => {\r\n        const { nome, cognome, email, corso } = this.state\r\n        const idCoordinatore = this.props.match.params.id\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!this.isExistingCorso(corso)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Corso non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.put(siteUrl+\"/api/coordinatori/\"+idCoordinatore, {\r\n            idCoordinatore: idCoordinatore,\r\n            nome: nome.trim(),\r\n            cognome: cognome.trim(),\r\n            email: email,\r\n            idCorso: corso\r\n        }).then(_ => {\r\n            message.success(\"Tutor modificato con successo!\")\r\n            routerHistory.push(superAdminRoute+\"/tutor\")\r\n        })\r\n\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, email, listaCorsi, corso } = this.state\r\n\r\n        if(!listaCorsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Modifica di un coordinatore</h3>\r\n\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"text\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Corso gestito</label>\r\n                        <select name=\"anno\" onChange={this.changeCorso} className=\"custom-select\">\r\n                            {\r\n                                listaCorsi.map(c => {\r\n                                    let selected = corso === c.idCorso\r\n\r\n                                    return <option value={c.idCorso} selected={selected}>{c.nome}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.aggiungiTutor}>Modifica coordinatore</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"../..\"\r\nimport LogoCorso from \"../LogoCorso\"\r\nimport Page404 from \"../Page404\"\r\nimport { superAdminRoute } from \"../../utilities\"\r\nimport CorsiList from \"./CorsiList\"\r\nimport AddNewCorso from \"./AddNewCorso\"\r\nimport LoginAdmin from \"./LoginAdmin\"\r\nimport EditCorso from \"./EditCorso\"\r\nimport TutorList from \"./TutorList\"\r\nimport AddNewTutor from \"./AddNewTutor\"\r\nimport EditTutor from \"./EditTutor\"\r\n\r\nexport default class SuperDashboard extends React.Component{\r\n\r\n    componentWillUnmount = () => {\r\n        sessionStorage.removeItem(\"superSession\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n\r\n        let session = sessionStorage.getItem(\"superSession\")\r\n        \r\n        if(!session)\r\n            return <LoginAdmin />\r\n\r\n        return <div className=\"container-fluid\">\r\n            <Router history={routerHistory}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3 bg-blue p-0 menu\">\r\n                        \r\n                        <LogoCorso idCorso={0} />\r\n\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(superAdminRoute+\"/studenti\")} to={superAdminRoute+\"/tutor\"}>\r\n                            <span>Coordinatori</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(superAdminRoute+\"/corsi\")} to={superAdminRoute+\"/corsi\"}>\r\n                            <span>Corsi</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => {\r\n                            sessionStorage.removeItem(\"superSession\")\r\n                            routerHistory.push(superAdminRoute)\r\n                        }} exact to={superAdminRoute+\"/login\"}>\r\n                            <span>Esci</span>\r\n                        </NavLink>\r\n                    </div>\r\n  \r\n                    <Switch>\r\n                        <Route exact path={superAdminRoute} render={() => {\r\n                            routerHistory.push(superAdminRoute+\"/tutor\")\r\n\r\n                            return null\r\n                        }} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/tutor\"} render={() => (\r\n                            <TutorList />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/tutor/new\"} render={() => (\r\n                            <AddNewTutor />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/tutor/edit/:id\"} render={(routeProps) => (\r\n                            <EditTutor {...routeProps} />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/corsi\"} render={() => (\r\n                            <CorsiList />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/corsi/new\"} render={() => (\r\n                            <AddNewCorso />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/corsi/edit/:id\"} render={(routeProps) => (\r\n                            <EditCorso {...routeProps} />\r\n                        )} />\r\n\r\n                        <Route render={() => <Page404 goTo={superAdminRoute} />} />\r\n\r\n                    </Switch>\r\n                        \r\n                </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { createHashHistory } from \"history\"\r\nimport \"./index.scss\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\nimport Main from \"./comp/Main\"\r\nimport { Router, Switch, Route } from \"react-router-dom\"\r\nimport Dashboard from \"./comp/admin/Dashboard\"\r\nimport UserApplication from \"./comp/mobile/UserApplication\"\r\nimport DocentiDashboard from \"./comp/docenti/DocentiDashboard\"\r\nimport Page404 from \"./comp/Page404\"\r\nimport moment from \"moment\"\r\nimport \"moment/locale/it\"\r\nimport SuperDashboard from \"./comp/superadmin/SuperDashboard\"\r\nimport { superAdminRoute, adminRoute, docentiRoute } from \"./utilities\"\r\n\r\nmoment.locale(\"it\")\r\n\r\nexport const routerHistory = createHashHistory()\r\n\r\nReactDOM.render(<Router history={routerHistory}>\r\n    <Switch>\r\n        <Route exact path=\"/\" render={() => {\r\n            routerHistory.push(\"/firme/\")\r\n\r\n            return null\r\n        }} />\r\n\r\n        <Route path=\"/firme/\" render={() => (\r\n            <Main />\r\n        )} />\r\n\r\n        <Route path={adminRoute} render={() => (\r\n            <Dashboard />\r\n        )} />\r\n\r\n        <Route path=\"/userprofile\" render={() => (\r\n            <UserApplication />\r\n        )} />\r\n\r\n        <Route path={docentiRoute} render={() => (\r\n            <DocentiDashboard />\r\n        )} />\r\n\r\n        <Route path={superAdminRoute} render={() => (\r\n            <SuperDashboard />\r\n        )} />\r\n\r\n        <Route render={() => <Page404 goTo=\"/\" />} />\r\n    </Switch>\r\n</Router>, document.getElementById(\"root\"))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}