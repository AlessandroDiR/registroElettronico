{"version":3,"sources":["utilities.ts","serviceWorker.ts","models/IMessage.ts","comp/Firma.tsx","comp/LessonsCalendar.tsx","comp/SceltaCorso.tsx","comp/SceltaClasse.tsx","comp/LogoCorso.tsx","comp/Main.tsx","models/Cipher.ts","comp/admin/LoginTutor.tsx","models/IAdmin.ts","comp/admin/StudentsList.tsx","comp/admin/AddNewStudent.tsx","comp/admin/PresenzeTable.tsx","comp/admin/StudentDetails.tsx","comp/admin/DocentiList.tsx","comp/admin/AddNewDocente.tsx","comp/admin/LezioniDocenteTable.tsx","comp/admin/DocenteDetails.tsx","comp/admin/EditDocente.tsx","comp/admin/EditStudente.tsx","comp/admin/StudentsImport.tsx","comp/admin/MaterieList.tsx","comp/ImageScale.tsx","comp/admin/ConfigForm.tsx","comp/admin/ConfigCalendar.tsx","comp/Page404.tsx","comp/admin/Dashboard.tsx","comp/mobile/QRCodeScreen.tsx","comp/mobile/UserCalendar.tsx","comp/mobile/UserApplication.tsx","comp/docenti/LoginDocenti.tsx","models/IAdminDocente.ts","comp/docenti/LezioniDocente.tsx","comp/docenti/LezioneDetails.tsx","comp/docenti/DocentiDashboard.tsx","comp/superadmin/CorsiList.tsx","comp/superadmin/AddNewCorso.tsx","comp/superadmin/LoginAdmin.tsx","comp/superadmin/EditCorso.tsx","comp/superadmin/TutorList.tsx","comp/superadmin/AddNewTutor.tsx","comp/superadmin/EditTutor.tsx","comp/superadmin/SuperDashboard.tsx","index.tsx"],"names":["siteUrl","logoUrl","adminRoute","superAdminRoute","docentiRoute","Digits2","n","validateTime","time","test","startEdit","id","entrataInput","document","getElementById","uscitaInput","entrataSpan","uscitaSpan","editBtn","confirmBtn","hideAll","style","display","entrataInputs","querySelectorAll","uscitaInputs","entrataSpans","uscitaSpans","confirmBtns","editBtns","forEach","e","formattaData","d","convert","from","split","date","Date","Number","getFullYear","getMonth","getDate","formatItalian","capitalizeFirst","name","splitStr","capitalizeQuote","toLowerCase","i","length","charAt","toUpperCase","substring","join","mountLogin","getElementsByTagName","classList","add","unmountLogin","remove","imageFileToBase64","file","readImageFile","a","Promise","resolve","reject","reader","FileReader","onload","base64Img","Buffer","target","result","toString","onerror","readAsArrayBuffer","resizePopup","mainBlock","popup","width","clientWidth","window","addEventListener","Boolean","location","hostname","match","genericError","title","icon","iconColor","message","Firma","props","componentDidMount","parseInt","sessionStorage","getItem","Axios","get","then","response","corso","data","setState","changeCode","event","code","value","tryToLog","axios","showMessagePopup","catch","err","input","setAttribute","setTimeout","removeAttribute","focus","state","cambiaCorso","removeItem","routerHistory","push","this","type","spin","className","autoFocus","onChange","maxLength","nome","indicator","height","placement","onClick","color","React","PureComponent","LessonsCalendar","calendar","calendarId","apiKey","fontSize","plugins","googleCalendarPlugin","dayGridPlugin","events","googleCalendarId","googleCalendarApiKey","defaultView","fixedWeekCount","firstDay","themeSystem","eventTimeFormat","hour","minute","meridiem","buttonText","today","header","right","locale","eventClick","info","jsEvent","preventDefault","Modal","maskClosable","centered","content","start","getHours","getMinutes","end","extendedProps","SceltaCorso","corsi","componentWillUnmount","chooseCorso","setItem","map","c","idCorso","SceltaClasse","chooseClasse","Component","LogoCorso","catchNull","logo","_","src","alt","Main","focusInput","history","activeClassName","exact","to","path","render","classe","Cipher","maximum","msg","shift","finalMessage","letter","charInt","charCodeAt","newInt","String","fromCharCode","LoginTutor","changeInputName","adminName","changeInputPassword","psw","adminPsw","tryLogin","password","encode","post","username","trim","obj","isAdmin","error","JSON","stringify","success","onSubmit","StudentsList","students","showConfirm","student","context","confirm","cognome","marginLeft","d2","format","okText","okType","cancelText","onOk","dataRitiro","studente","ritirato","put","idStudente","stu","currentList","indexOf","changeSelection","newList","selection","find","s","filter","concat","selectAll","anno","selectionList","checked","annoFrequentazione","showHideModal","confirmModal","moveStudents","select","studenti","allRetired","group","sortbyId","b","Panel","Collapse","groups","sort","g","checkedAll","element","colSpan","bg","disabled","maxWidth","cf","frequenza","visible","onCancel","bordered","key","AddNewStudent","changeNome","changeCognome","changeEmail","email","changeData","dataNascita","changeAnnoScolastico","annoS","annoScolastico","changeCF","CF","aggiungiStudente","PresenzeTable","presenze","changeEntrata","entrata","entrataEdit","changeUscita","uscita","uscitaEdit","startTimeEdit","presenza","p","idPresenza","ingresso","animateSpans","span1","span2","node1","parentNode","node2","confirmEdit","idLezione","output","newPresenze","newP","reloadTotali","lezione","StudentDetails","params","isNaN","oreTotali","roundToTwo","loadTotali","totPresenze","toggleModal","modal","downloadQR","pngUrl","toDataURL","replace","downloadLink","createElement","href","download","body","appendChild","click","removeChild","getQRCode","total","Math","round","perc","percent","strokeColor","suffix","decimalSeparator","groupSeparator","footer","size","DocentiList","docenti","switchList","showAll","showDeleteConfirm","docente","delete","idDocente","backRetire","doc","isInCorso","docs","transform","monteOre","AddNewDocente","materie","aggiungiDocente","corsiSel","materieSel","tenere","insegnare","m","idMateria","switchMateria","materiaId","switchCorso","corsoId","f","classname","LezioniDocenteTable","canEdit","DocenteDetails","alignItems","justifyContent","EditDocente","modificaDocente","EditStudente","modificaStudente","defaultValue","moment","fields","label","field","StudentsImport","splitCSV","renderOptions","rows","fileContent","changeVarPos","varName","readFile","showImportPreview","readAsText","list","r","cells","addList","hidePopup","confirmImport","flexDirection","accept","beforeUpload","MaterieList","showModal","nomeMateria","descMateria","hideEditModal","showEditModal","nomeEdit","materiaEdit","materia","descEdit","descrizione","aggiungiMateria","modificaMateria","changeNomeEdit","changeDesc","desc","changeDescEdit","ImageScale","scaleImage","scalable","scaled","coords","firstclass","ConfigForm","changeID","changeKey","saveConfig","ConfigCalendar","showHelp","top","marginTop","rel","getElementsByClassName","scrollTo","TabPane","Tabs","tab","Page404","goTo","Dashboard","session","admin","parse","routeProps","QRCodeScreen","setInterval","reloadCode","studentId","UserCalendar","UserApplication","localStorage","LoginDocenti","isAdminDocente","LezioniDocente","lezioni","l","inizio","fine","LezioneDetails","frequentata","presente","DocentiDashboard","CorsiList","luogo","AddNewCorso","changeLuogo","aggiungiCorso","convertImage","uploadButton","marginBottom","listType","showUploadList","LoginAdmin","isSuperAdmin","EditCorso","modificaCorso","TutorList","tutor","t","idTutor","AddNewTutor","listaCorsi","changeCorso","isExistingCorso","aggiungiTutor","EditTutor","selected","SuperDashboard","createHashHistory","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19653f6c.chunk.js","sourcesContent":["export const siteUrl = \"https://avocadoapi.azurewebsites.net\"\r\nexport const logoUrl = \"https://iscrizione.fitstic.it/wp-content/uploads/2015/07/Senza-titolo-1.png\"\r\n\r\nexport const adminRoute = \"/adminpanel\"\r\nexport const superAdminRoute = \"/superpanel\"\r\nexport const docentiRoute = \"/docentipanel\"\r\n\r\nexport const Digits2 = (n: number) => {\r\n    return n < 10 ? \"0\" + n : n\r\n}\r\n\r\nexport const validateTime = (time: string) => {\r\n    return /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])$/.test(time)\r\n}\r\n\r\nexport const startEdit = (id: number) => {\r\n    let entrataInput = document.getElementById(\"entrataInput_\" + id),\r\n    uscitaInput = document.getElementById(\"uscitaInput_\" + id),\r\n    entrataSpan = document.getElementById(\"entrataSpan_\" + id),\r\n    uscitaSpan = document.getElementById(\"uscitaSpan_\" + id),\r\n    editBtn = document.getElementById(\"editBtn_\" + id),\r\n    confirmBtn = document.getElementById(\"confirmBtn_\" + id)\r\n\r\n    hideAll()\r\n\r\n    entrataInput.style.display = \"block\"\r\n    uscitaInput.style.display = \"block\"\r\n    confirmBtn.style.display = \"inline-block\"\r\n    entrataSpan.style.display = \"none\"\r\n    uscitaSpan.style.display = \"none\"\r\n    editBtn.style.display = \"none\"\r\n}\r\n\r\nexport const hideAll = () => {\r\n    let entrataInputs = document.querySelectorAll(\"input[id^='entrataInput_']\"),\r\n    uscitaInputs = document.querySelectorAll(\"input[id^='uscitaInput_']\"),\r\n    entrataSpans = document.querySelectorAll(\"span[id^='entrataSpan_']\"),\r\n    uscitaSpans = document.querySelectorAll(\"span[id^='uscitaSpan_']\"),\r\n    confirmBtns = document.querySelectorAll(\"button[id^='confirmBtn_']\"),\r\n    editBtns = document.querySelectorAll(\"button[id^='editBtn_']\")\r\n    \r\n    entrataInputs.forEach(e => {\r\n        (e as HTMLElement).style.display = \"none\"\r\n    })\r\n    uscitaInputs.forEach(e => {\r\n        (e as HTMLElement).style.display = \"none\"\r\n    })\r\n    confirmBtns.forEach(e => {\r\n        (e as HTMLElement).style.display = \"none\"\r\n    })\r\n    entrataSpans.forEach(e => {\r\n        (e as HTMLElement).style.display = \"block\"\r\n    })\r\n    uscitaSpans.forEach(e => {\r\n        (e as HTMLElement).style.display = \"block\"\r\n    })\r\n    editBtns.forEach(e => {\r\n        (e as HTMLElement).style.display = \"inline-block\"\r\n    })\r\n}\r\n\r\nexport const formattaData = (d: string, convert?: boolean) => {\r\n    let from = d.split(/[/-]/g),\r\n    date = convert ? new Date(Number(from[2]), Number(from[1]) - 1, Number(from[0])) : new Date(d)\r\n\r\n    return `${date.getFullYear()}-${Digits2(date.getMonth() + 1)}-${Digits2(date.getDate())}`\r\n}\r\n\r\nexport const formatItalian = (d: string) => {\r\n    let date = new Date(d)\r\n\r\n    return `${Digits2(date.getDate())}-${Digits2(date.getMonth() + 1)}-${date.getFullYear()}` \r\n}\r\n\r\nexport const getDateDay = (d: string) => {\r\n    let date = new Date(d)\r\n\r\n    return Digits2(date.getDate()).toString()\r\n}\r\n\r\nexport const getDateMonth = (d: string) => {\r\n    let date = new Date(d)\r\n\r\n    return Digits2(date.getMonth() + 1).toString()\r\n}\r\n\r\nexport const getDateYear = (d: string) => {\r\n    let date = new Date(d)\r\n\r\n    return date.getFullYear().toString()\r\n}\r\n\r\nexport const capitalizeFirst = (name: string) => {\r\n    let splitStr = capitalizeQuote(name.toLowerCase()).split(\" \")\r\n\r\n    for (let i = 0; i < splitStr.length; i++) {\r\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1) \r\n    }\r\n   \r\n    return splitStr.join(\" \")\r\n}\r\n\r\nexport const capitalizeQuote = (name: string) => {\r\n    let splitStr = name.toLowerCase().split(\"'\")\r\n\r\n    for (let i = 0; i < splitStr.length; i++) {\r\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1)\r\n    }\r\n   \r\n    return splitStr.join(\"'\")\r\n}\r\n\r\nexport const mountLogin = () => {\r\n    let body = document.getElementsByTagName(\"body\")[0]\r\n\r\n    body.classList.add(\"login\")\r\n}\r\nexport const unmountLogin = () => {\r\n    let body = document.getElementsByTagName(\"body\")[0]\r\n\r\n    body.classList.remove(\"login\")\r\n}\r\n\r\nexport const imageFileToBase64 = async (file: any) => {\r\n    function readImageFile(file: any){\r\n        return new Promise((resolve, reject) => {\r\n            let reader = new FileReader()\r\n        \r\n            reader.onload = e => {\r\n                let base64Img = new Buffer(e.target.result as any, \"binary\").toString(\"base64\"),\r\n                src = \"data:image/png;base64,\" + base64Img\r\n\r\n                resolve(src)\r\n            }\r\n        \r\n            reader.onerror = reject\r\n        \r\n            reader.readAsArrayBuffer(file)\r\n        })     \r\n    }\r\n\r\n    return readImageFile(file)\r\n}\r\n\r\nexport const resizePopup = () => {\r\n    let mainBlock = document.getElementById(\"mainBlock\"),\r\n    popup = document.getElementById(\"popup\"),\r\n    width = mainBlock ? mainBlock.clientWidth : 0\r\n\r\n    if(mainBlock && popup)\r\n        popup.style.width = width + \"px\"\r\n}\r\n\r\nwindow.addEventListener(\"load\", resizePopup)\r\nwindow.addEventListener(\"resize\", resizePopup)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export interface IMessage{\r\n    readonly title: string\r\n    readonly icon: string\r\n    readonly iconColor: string\r\n    readonly message: string\r\n    readonly time: number\r\n}\r\n\r\nexport const genericError = {\r\n    title: \"Ops!\",\r\n    icon: \"fa-times-circle\",\r\n    iconColor: \"#de1e30\",\r\n    message: \"È stato riscontrato un errore durante l'accesso.\",\r\n    time: 3000\r\n}","import React from \"react\"\r\nimport axios from \"axios\"\r\nimport { IMessage, genericError } from \"../models/IMessage\"\r\nimport { siteUrl, resizePopup } from \"../utilities\"\r\nimport { routerHistory } from \"..\"\r\nimport { Divider, Tooltip, Spin, Icon } from \"antd\"\r\nimport { ICorso } from \"../models/ICorso\"\r\nimport Axios from \"axios\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly code: string\r\n    readonly popup: IMessage\r\n    readonly corso: ICorso\r\n}\r\n\r\nexport default class Firma extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            code: \"\",\r\n            popup: genericError,\r\n            corso: null\r\n        }\r\n    }\r\n    \r\n    componentDidMount = () => {\r\n        let id = parseInt(sessionStorage.getItem(\"corso\"))\r\n\r\n        Axios.get(siteUrl+\"/api/corsi/\"+id).then(response => {\r\n            let corso = response.data as ICorso\r\n\r\n            this.setState({\r\n                corso: corso\r\n            })\r\n        })\r\n\r\n        resizePopup()\r\n    }\r\n\r\n    changeCode = (event: any) => {\r\n        let code = event.target.value\r\n\r\n        this.setState({\r\n            code: code\r\n        })\r\n\r\n        this.tryToLog(code)\r\n    }\r\n\r\n    tryToLog = (code: string) => {\r\n        if(code.length < 16) return false\r\n        \r\n        axios.get(siteUrl + \"/api/studenti/firma/\" + code).then((response) => {\r\n            this.setState({\r\n                popup: response.data as IMessage\r\n            })\r\n\r\n            this.showMessagePopup()\r\n        }).catch((err) => {\r\n            this.setState({\r\n                popup: genericError\r\n            })\r\n\r\n            this.showMessagePopup()\r\n        })\r\n    }\r\n\r\n    showMessagePopup = () => {\r\n        let popup = document.getElementById(\"popup\"),\r\n        input = document.getElementById(\"mainInput\") as HTMLInputElement\r\n\r\n        if(!input && !popup) return false\r\n\r\n        popup.classList.add(\"show\")\r\n        input.setAttribute(\"disabled\", \"disabled\")\r\n\r\n        setTimeout(() => {\r\n            popup.classList.remove(\"show\")\r\n            input.value = \"\"\r\n            input.removeAttribute(\"disabled\")\r\n            input.focus()\r\n        }, this.state.popup.time)\r\n    }\r\n\r\n    cambiaCorso = () => {\r\n        sessionStorage.removeItem(\"corso\")\r\n        sessionStorage.removeItem(\"classe\")\r\n\r\n        routerHistory.push(\"/\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { popup, corso } = this.state\r\n        let icon = <Icon type=\"loading\" spin />\r\n\r\n        return <div className=\"col\" id=\"mainBlock\">\r\n            <div className=\"text-center w-100\">\r\n                <h2 className=\"text-center my-3 font-weight-normal\">Scannerizza il codice</h2>\r\n                <input autoFocus type=\"password\" className=\"form-control text-center mx-auto shadow-sm font-weight-normal\" value={this.state.code} onChange={this.changeCode} maxLength={24} id=\"mainInput\" />\r\n\r\n                <div className=\"top-info\">\r\n                        {\r\n                            corso ? corso.nome : <Spin indicator={icon} />\r\n                        }\r\n                    <Divider type=\"vertical\" style={{ height: 20 }} />\r\n                        {\r\n                            parseInt(sessionStorage.getItem(\"classe\")) === 1 ? \"Primo anno\" : \"Secondo anno\"\r\n                        }\r\n                    <Divider type=\"vertical\" style={{ height: 20 }} />\r\n                        <Tooltip placement=\"bottomRight\" title=\"Cambia il corso o la classe per firmare\">\r\n                            <button type=\"button\" className=\"btn btn-sm btn-blue\" onClick={this.cambiaCorso}>\r\n                                <i className=\"far fa-repeat-alt fa-fw mr-1\"></i>\r\n                                Cambia\r\n                            </button>\r\n                        </Tooltip>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"popup\" className=\"col\">\r\n                <div className=\"w-100\">\r\n                    <i className={\"fal fa-fw fa-lg fa-6x \" + popup.icon} style={{ color: popup.iconColor}}></i>\r\n                    <h2 className=\"mt-5\">{popup.title}</h2>\r\n                    <div className=\"mt-2\">{popup.message}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport FullCalendar from \"@fullcalendar/react\"\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\"\r\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\"\r\nimport { Digits2 } from \"../utilities\"\r\nimport { Modal, Icon, Spin } from \"antd\"\r\nimport { ICalendar } from \"../models/ICalendar\"\r\n\r\nimport \"@fullcalendar/core/main.css\"\r\nimport \"@fullcalendar/timegrid/main.css\"\r\n\r\nexport interface IProps{\r\n    readonly corso?: number\r\n}\r\nexport interface IState{\r\n    readonly calendar: ICalendar\r\n}\r\n\r\nexport default class LessonsCalendar extends React.PureComponent<IProps, IState> {\r\n    constructor(props: IProps){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            calendar: {\r\n                calendarId: \"ckhj7iqj3msae4i4ietm5ip1cg@group.calendar.google.com\",\r\n                apiKey: \"AIzaSyCEEaAbHOYhofQs-iLdHd_J8-KyD_IlRbE\"\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // let id = parseInt(sessionStorage.getItem(\"corso\")),\r\n        // classe = parseInt(sessionStorage.getItem(\"classe\"))\r\n        \r\n        /************************************/\r\n        /* CARICAMENTO CALENDARIO IN BASE A */\r\n        /* sessionStorage.getItem(\"corso\")  */\r\n        /* sessionStorage.getItem(\"classe\") */\r\n        /************************************/\r\n    }\r\n\r\n    render() {\r\n        const { calendar } = this.state\r\n    \r\n        if(!calendar){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-3\" id=\"mainBlock\">\r\n            \r\n            <FullCalendar\r\n                plugins={[ googleCalendarPlugin, dayGridPlugin ]}\r\n                events={ { googleCalendarId: calendar.calendarId} }\r\n                googleCalendarApiKey={calendar.apiKey}\r\n                defaultView=\"dayGridMonth\"\r\n                fixedWeekCount={false}\r\n                firstDay={1}\r\n                themeSystem={\"bootstrap\"}\r\n                eventTimeFormat={{\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                    meridiem: false\r\n                }}\r\n                buttonText={{\r\n                    today: \"Mese corrente\"\r\n                }}\r\n                header={{\r\n                    right: \"prev, next\"\r\n                }}\r\n                locale={\"it\"}\r\n                eventClick={\r\n                    function(info){\r\n                        info.jsEvent.preventDefault()\r\n                        let event = info.event\r\n                        \r\n                        Modal.info({\r\n                            maskClosable: true,\r\n                            centered: true,\r\n                            icon: null,\r\n                            title: event.title,\r\n                            content: <div className=\"mt-3\" style={{ fontSize: 20 }}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-3 pr-0\">\r\n                                        <span className=\"label\">Inizio</span>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <span className=\"desc\">\r\n                                            { Digits2(event.start.getHours()) }:{ Digits2(event.start.getMinutes()) }\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-3 pr-0\">\r\n                                        <span className=\"label\">Fine</span>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <span className=\"desc\">\r\n                                            { Digits2(event.end.getHours()) }:{ Digits2(event.end.getMinutes()) }\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                {  \r\n                                    event.extendedProps.location && <div className=\"row\">\r\n                                        <div className=\"col-3 pr-0\">\r\n                                            <span className=\"label\">Luogo</span>\r\n                                        </div>\r\n                                        <div className=\"col\" style={{ fontSize: 15 }}>\r\n                                            {event.extendedProps.location}\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        })\r\n                    }\r\n                }\r\n            />\r\n        </div>\r\n    }\r\n  \r\n  }","import React from \"react\"\r\nimport { siteUrl, mountLogin, unmountLogin } from \"../utilities\"\r\nimport { ICorso } from \"../models/ICorso\"\r\nimport Axios from \"axios\"\r\nimport { Spin, Icon } from \"antd\"\r\nimport { routerHistory } from \"..\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly corsi: ICorso[]\r\n}\r\n\r\nexport default class SceltaCorso extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            corsi: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                corsi: corsi\r\n            })\r\n        })\r\n\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    chooseCorso = (id: number) => {\r\n        sessionStorage.setItem(\"corso\", id.toString())\r\n        routerHistory.push(\"/\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { corsi } = this.state\r\n\r\n        if(!corsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50, color: \"#fff\" }} spin />\r\n\r\n            return <div className=\"col-12 px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100 bg-white py-3 rounded shadow\">\r\n                <h3 className=\"text-center\">Scegli il corso</h3>\r\n\r\n                {\r\n                    corsi.map(c => {\r\n                        return <div className=\"py-2 text-center pointer corso-item\" onClick={() => this.chooseCorso(c.idCorso)}>\r\n                            {/* <img src={c.logo} alt=\"logo\" height=\"28\" className=\"mr-2\" /> */}\r\n                            <span className=\"align-middle\">{c.nome}</span>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}","import React from \"react\"\r\nimport { mountLogin, unmountLogin } from \"../utilities\"\r\nimport { routerHistory } from \"..\"\r\n\r\nexport default class SceltaClasse extends React.Component{\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    chooseClasse = (id: number) => {\r\n        sessionStorage.setItem(\"classe\", id.toString())\r\n        routerHistory.push(\"/\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100 bg-white py-3 rounded shadow\">\r\n                <h3 className=\"text-center\">Scegli la classe</h3>\r\n\r\n                <div className=\"py-2 text-center pointer corso-item\" onClick={() => this.chooseClasse(1)}>\r\n                    Primo anno\r\n                </div>\r\n                <div className=\"py-2 text-center pointer corso-item\" onClick={() => this.chooseClasse(2)}>\r\n                    Secondo anno\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}","import React from \"react\"\r\nimport { Icon, Spin } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, logoUrl } from \"../utilities\"\r\nimport { ICorso } from \"../models/ICorso\"\r\n\r\nexport interface IProps{\r\n    readonly idCorso?: string | number\r\n}\r\nexport interface IState{\r\n    readonly logo: string\r\n}\r\n\r\nexport default class LogoCorso extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            logo: null\r\n        }\r\n    }\r\n\r\n    catchNull = () => {\r\n        this.setState({\r\n            logo: logoUrl\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/corsi/\"+this.props.idCorso).then(response => {\r\n            let corso = response.data as ICorso\r\n\r\n            if(!corso.logo){\r\n                this.catchNull()\r\n                return\r\n            }\r\n\r\n            this.setState({\r\n                logo: corso.logo\r\n            })\r\n        }).catch(_ =>{\r\n            this.catchNull()\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { logo } = this.state\r\n        \r\n        if(!logo){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50, color: \"#fff\" }} spin />\r\n\r\n            return <div className=\"text-center py-4\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"logo-block px-3 py-4\">\r\n            <img src={logo} height=\"100\" className=\"mx-auto d-block logo\" alt=\"logo\" />\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"..\"\r\nimport Firma from \"./Firma\"\r\nimport LessonsCalendar from \"./LessonsCalendar\"\r\nimport SceltaCorso from \"./SceltaCorso\"\r\nimport SceltaClasse from \"./SceltaClasse\"\r\nimport LogoCorso from \"./LogoCorso\"\r\n\r\nexport default class Main extends React.Component{\r\n\r\n    focusInput = () => {\r\n        let input = document.getElementById(\"mainInput\") as HTMLInputElement\r\n\r\n        if(input)\r\n            input.focus()\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        return <div className=\"container-fluid\" onClick={this.focusInput}>\r\n\r\n\r\n            <Router history={routerHistory}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3 bg-blue p-0 menu\">\r\n                        \r\n                        <LogoCorso idCorso={sessionStorage.getItem(\"corso\")} />\r\n\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/\")} exact to=\"/firme/\">\r\n                            <span>Home</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/calendar\")} exact to=\"/firme/calendar\">\r\n                            <span>Calendario</span>\r\n                        </NavLink>\r\n                    </div>\r\n\r\n                        <Switch>\r\n                            <Route exact path=\"/firme/\" render={() => {\r\n                                let corso = sessionStorage.getItem(\"corso\"),\r\n                                classe = sessionStorage.getItem(\"classe\")\r\n\r\n                                if(!corso)\r\n                                    return <SceltaCorso />\r\n\r\n                                if(!classe)\r\n                                    return <SceltaClasse />\r\n\r\n                                return <Firma />\r\n                            }} />\r\n\r\n                            <Route exact path=\"/firme/calendar\" render={() => (\r\n                                <LessonsCalendar />\r\n                            )} />\r\n                        </Switch>\r\n                        \r\n                    </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}","export class Cipher{\r\n    private maximum = 65535\r\n\r\n    public encode(msg: string, shift: number = -4){\r\n        let finalMessage = \"\"\r\n    \r\n        if(shift < 0)\r\n            shift = -shift\r\n    \r\n        for(let i = 0; i < msg.length; i++){\r\n            let letter = msg[i],\r\n            charInt = letter.charCodeAt(0),\r\n            newInt = charInt + shift\r\n\r\n            if(newInt > this.maximum)\r\n                newInt = newInt - (this.maximum + 1)\r\n\r\n            letter = String.fromCharCode(newInt)\r\n\r\n            finalMessage += letter\r\n        }\r\n        \r\n        return finalMessage\r\n    }\r\n\r\n    public decode(msg: string, shift: number = -4){\r\n        let finalMessage = \"\"\r\n    \r\n        if(shift < 0)\r\n            shift = -shift\r\n    \r\n        for(let i = 0; i < msg.length; i++){\r\n            let letter = msg[i],\r\n            charInt = letter.charCodeAt(0),\r\n            newInt = charInt - shift\r\n\r\n            if(newInt < 0)\r\n                newInt = this.maximum + (newInt + 1)\r\n\r\n            letter = String.fromCharCode(newInt)\r\n\r\n            finalMessage += letter\r\n        }\r\n        \r\n        return finalMessage\r\n    }\r\n}","import React from \"react\"\r\nimport { routerHistory } from \"../..\"\r\nimport { message, Modal } from \"antd\"\r\nimport { mountLogin, unmountLogin, siteUrl, logoUrl, adminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\nimport { isAdmin } from \"../../models/IAdmin\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly adminName: string\r\n    readonly adminPsw: string\r\n}\r\n\r\nexport default class LoginTutor extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            adminName: \"\",\r\n            adminPsw: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    changeInputName = (event: any) => {\r\n        let name = event.target.value\r\n\r\n        this.setState({\r\n            adminName: name\r\n        })\r\n    }\r\n\r\n    changeInputPassword = (event: any) => {\r\n        let psw = event.target.value\r\n\r\n        this.setState({\r\n            adminPsw: psw\r\n        })\r\n    }\r\n\r\n    tryLogin = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { adminName, adminPsw } = this.state\r\n        let cipher = new Cipher(),\r\n        password = cipher.encode(adminPsw)\r\n\r\n        Axios.post(siteUrl+\"/api/coordinatori/logincoordinatore\", {\r\n            username: adminName.trim(),\r\n            password: password\r\n        }).then(response => {\r\n            let data = response.data\r\n\r\n            if(isAdmin(data)){\r\n                sessionStorage.setItem(\"adminSession\", JSON.stringify(data))\r\n                routerHistory.push(adminRoute)\r\n                message.success(\"Login effettuato con successo!\")\r\n            }\r\n            else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Username o Password errati!\",\r\n                    centered: true,\r\n                    maskClosable: true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { adminName, adminPsw } = this.state\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.tryLogin}>\r\n                <h3 className=\"d-inline-block\">Accesso coordinatori</h3>\r\n                <img src={logoUrl} height=\"40\" className=\"float-right logo\" alt=\"logo\" />\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Utente di accesso</label>\r\n                    <input name=\"username\" type=\"text\" className=\"form-control\" value={adminName} onChange={this.changeInputName} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Password di accesso</label>\r\n                    <input name=\"password\" type=\"password\" className=\"form-control\" value={adminPsw} onChange={this.changeInputPassword} />\r\n                </div>\r\n\r\n                <input type=\"submit\" value=\"Accedi\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n            </form>\r\n        </div>\r\n    }\r\n\r\n}","export interface IAdmin{\r\n    readonly idCorso: number\r\n    readonly nome: string\r\n    readonly cognome: string\r\n}\r\nexport const isAdmin = (obj: any) => {\r\n    try{\r\n        return \"idCorso\" in obj && \"nome\" in obj && \"cognome\" in obj\r\n    }catch{\r\n        return false\r\n    }\r\n}\r\nexport const isSuperAdmin = (obj: any) => {\r\n    try{\r\n        return \"nome\" in obj && \"cognome\" in obj\r\n    }catch{\r\n        return false\r\n    }\r\n}","import React from \"react\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport { routerHistory } from \"../..\"\r\nimport { Modal, Tooltip, Spin, Icon, Checkbox, Collapse, DatePicker, message } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, formattaData, adminRoute } from \"../../utilities\"\r\nimport locale from \"antd/es/date-picker/locale/it_IT\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly students: IStudent[]\r\n    readonly selection: IStudent[]\r\n    readonly confirmModal: boolean\r\n}\r\n\r\nexport default class StudentsList extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            students: null,\r\n            selection: [],\r\n            confirmModal: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/studenti/\"+this.props.corso).then((response) => {\r\n            this.setState({\r\n                students: response.data as IStudent[]\r\n            })\r\n        })\r\n    }\r\n\r\n    showConfirm = (student: IStudent) => {\r\n        const { students } = this.state\r\n        let date: string = \"\",\r\n        context = this\r\n\r\n        Modal.confirm({\r\n            title: `ATTENZIONE: si sta per ritirare uno studente (${student.nome} ${student.cognome})`,\r\n            content: <div style={{ marginLeft: -38 }}>\r\n                <p>I dati identificativi dello studente e le sue frequenze verranno comunque mantenuti.</p>\r\n                <label className=\"text-secondary\">Data di ritiro</label>\r\n                \r\n                <DatePicker locale={locale} className=\"w-100\" onChange={(_, d2) => date = d2} format=\"DD-MM-YYYY\" />\r\n            </div>,\r\n            okText: \"Conferma ritiro\",\r\n            okType: \"danger\",\r\n            cancelText: \"Annulla\",\r\n            onOk() {\r\n                if(date === \"\"){\r\n                    Modal.error({\r\n                        title: \"Errore!\",\r\n                        content: \"Seleziona una data valida.\"\r\n                    })\r\n\r\n                    return true\r\n                }\r\n\r\n                let dataRitiro = formattaData(date, true),\r\n                studente = student as any\r\n                studente.ritirato = \"true\"\r\n                studente.dataRitiro = dataRitiro\r\n                \r\n                context.setState({\r\n                    students: null\r\n                })\r\n                \r\n                Axios.put(siteUrl+\"/api/studenti/\"+student.idStudente, {...studente}).then(response => {\r\n\r\n                    let stu = response.data as IStudent,\r\n                    currentList = students as any,\r\n                    editingStudent = students.indexOf(student)\r\n                    \r\n                    currentList[editingStudent] = stu\r\n\r\n                    context.setState({\r\n                        students: currentList as IStudent[]\r\n                    })\r\n\r\n                    message.success(\"Studente ritirato con successo!\")\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    changeSelection = (student: IStudent) => {\r\n        let find = this.state.selection.find(s => s === student),\r\n        newList = find ? this.state.selection.filter(s => s.idStudente !== student.idStudente) : this.state.selection.concat(student)\r\n\r\n        this.setState({\r\n            selection: newList\r\n        })\r\n    }\r\n\r\n    selectAll = (anno: number, event: any) => {\r\n        let selectionList = event.target.checked ? this.state.students.filter(s => s.annoFrequentazione === anno && !s.ritirato) : this.state.selection.filter(s => s.annoFrequentazione !== anno)\r\n\r\n        this.setState({\r\n            selection: selectionList\r\n        })\r\n    }\r\n\r\n    showHideModal = () => {\r\n        if(!this.state.selection.length){\r\n            Modal.info({\r\n                title: \"Attenzione!\",\r\n                content: \"Devi selezionare almeno uno studente.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            confirmModal: !this.state.confirmModal\r\n        })\r\n    }\r\n\r\n    moveStudents = () => {\r\n        let select = document.getElementById(\"moveToClass\") as HTMLSelectElement,\r\n        value = parseInt(select.value),\r\n        studenti = this.state.selection.map(s => {\r\n            let stu = s as any\r\n            stu.idCorso = this.props.corso\r\n            stu.annoFrequentazione = value\r\n\r\n            return stu\r\n        })\r\n\r\n        if(value !== 1 && value !== 2){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"L'anno selezionato non è valido.\"\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            students: null\r\n        })\r\n\r\n        Axios.put(siteUrl+\"/api/studenti\", studenti).then(response => {\r\n            this.setState({\r\n                students: response.data as IStudent[]\r\n            })\r\n\r\n            message.success(\"Studenti spostati con successo!\")\r\n        })\r\n\r\n\r\n        this.showHideModal()\r\n    }\r\n\r\n    allRetired = (group: IStudent[]) => {\r\n        let allRetired = false\r\n\r\n        group.forEach(s => {\r\n            if(s.ritirato)\r\n                allRetired = true\r\n        })\r\n\r\n        return allRetired\r\n    }\r\n\r\n    sortbyId = (a: IStudent, b: IStudent) => { \r\n        if(a.idStudente > b.idStudente)\r\n            return -1\r\n        if(a.idStudente < b.idStudente)\r\n            return 1\r\n\r\n        return 0\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { students, selection } = this.state,\r\n        { Panel } = Collapse\r\n        \r\n        if(!students){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n        \r\n        let firstYear = students.filter(s => s.annoFrequentazione === 1).sort(this.sortbyId).sort((a, _) => a.ritirato ? 0 : -1),\r\n        secondYear = students.filter(s => s.annoFrequentazione === 2).sort(this.sortbyId).sort((a, _) => a.ritirato ? 0 : -1),\r\n        groups = [firstYear, secondYear]\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Studenti del corso</h3>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={() => routerHistory.push(adminRoute+\"/studenti/new\")}>\r\n                <i className=\"fal fa-plus\"></i> Aggiungi studente\r\n            </button>\r\n\r\n            <button className=\"btn btn-orange float-right mb-3 mr-2\" type=\"button\" onClick={this.showHideModal}>\r\n                <i className=\"fa fa-arrows-alt\"></i> Sposta studenti\r\n            </button>\r\n\r\n            <button className=\"btn btn-blue float-right mb-3 mr-2\" type=\"button\" onClick={() => routerHistory.push(adminRoute+\"/studenti/import\")}>\r\n                <i className=\"fa fa-file-csv\"></i> Importa da CSV\r\n            </button>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                \r\n                \r\n                {\r\n                    groups.map(g => {\r\n                        if(!g[0])\r\n                            return false\r\n                            \r\n                        let checkedAll = this.allRetired(g)\r\n\r\n                        g.forEach(element => {\r\n                            if(selection.indexOf(element) === -1 && !element.ritirato)\r\n                                checkedAll = false\r\n                        })\r\n\r\n                        return <tbody className=\"border-top-0\">\r\n                            \r\n                            <tr className=\"thead-light\">\r\n                                <th colSpan={7}>\r\n                                    { g[0].annoFrequentazione === 1 ? \"Primo\" : \"Secondo\" } anno\r\n                                </th>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <th style={{width: \"5%\"}}>\r\n                                    <Tooltip title=\"Seleziona tutti\">\r\n                                        <Checkbox onChange={(e) => this.selectAll(g[0].annoFrequentazione, e)} checked={checkedAll} />\r\n                                    </Tooltip>\r\n                                </th>\r\n                                <th>Nome</th>\r\n                                <th>Cognome</th>\r\n                                <th>Codice Fiscale</th>\r\n                                <th style={{width: \"15%\"}}>Frequenza</th>\r\n                                <th style={{width: \"20%\"}}>Azioni</th>\r\n                            </tr>\r\n                \r\n                            {\r\n                                g.map(s => {\r\n                                    let checked = this.state.selection.find(n => n === s) ? true : false,\r\n                                    bg = s.ritirato ? \"light font-italic\" : \"white\"\r\n            \r\n                                    return <tr className={\"bg-\"+bg}>\r\n                                        <td>\r\n                                            {\r\n                                                s.ritirato ? <Checkbox disabled={true} /> : <Checkbox onChange={() => this.changeSelection(s)} checked={checked} />\r\n                                            }\r\n                                        </td>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.nome}</td>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cognome}</td>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cf}</td>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.frequenza}%</td>\r\n                                        \r\n                                        <td>\r\n                                            <Tooltip title=\"Dettagli\">\r\n                                                <button type=\"button\" className=\"btn btn-info circle-btn\" onClick={() => routerHistory.push(adminRoute+\"/studenti/\" + s.idStudente)}>\r\n                                                    <i className=\"fa fa-info\"></i>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                            \r\n                                            {\r\n                                                !s.ritirato && <Tooltip title=\"Modifica\">\r\n                                                    <button type=\"button\" className=\"btn btn-warning text-white circle-btn ml-2\" onClick={() => routerHistory.push(adminRoute+\"/studenti/edit/\" + s.idStudente)}>\r\n                                                        <i className=\"fa fa-pen\"></i>\r\n                                                    </button>\r\n                                                </Tooltip>\r\n                                            }\r\n                                            {\r\n                                                !s.ritirato && <Tooltip title=\"Segna come ritirato\">\r\n                                                    <button type=\"button\" className=\"btn btn-danger circle-btn ml-2\" onClick={() => this.showConfirm(s)}>\r\n                                                        <i className=\"fa fa-user-times\"></i>\r\n                                                    </button>\r\n                                                </Tooltip>\r\n                                            }\r\n\r\n                                            {\r\n                                                s.ritirato && <Tooltip title=\"Studente ritirato\">\r\n                                                    <button type=\"button\" className=\"circle-btn ml-2 border-0\">\r\n                                                        <i className=\"fa fa-user-slash\"></i>\r\n                                                    </button>\r\n                                                </Tooltip>\r\n                                            }\r\n                                            \r\n                                        </td>\r\n                                    </tr>\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    })\r\n                }\r\n            </table>\r\n\r\n            <Modal title=\"Sposta studenti\" visible={this.state.confirmModal} onCancel={this.showHideModal} cancelText=\"Annulla\" okText=\"Conferma\" onOk={this.moveStudents}>\r\n                <label className=\"text-secondary\">Scegliere l'anno in cui spostare gli studenti</label>\r\n                <select className=\"custom-select\" id=\"moveToClass\">\r\n                    <option value=\"1\">Primo anno</option>\r\n                    <option value=\"2\">Secondo anno</option>\r\n                </select>\r\n\r\n                <Collapse bordered={false}>\r\n                    <Panel header=\"Mostra studenti selezionati\" key={1}>\r\n                        { \r\n                            selection.map(s => {\r\n                                return <span className=\"d-block\">\r\n                                    <strong>{s.nome} {s.cognome}</strong> ({s.annoFrequentazione}° anno)\r\n                                </span>\r\n                            })\r\n                        }\r\n                    </Panel>\r\n                </Collapse>\r\n            </Modal>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, message, DatePicker } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, formattaData, adminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport locale from \"antd/es/date-picker/locale/it_IT\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly dataNascita: string\r\n    readonly cf: string\r\n    readonly email: string\r\n    readonly annoScolastico: number\r\n}\r\n\r\nexport default class AddNewStudent extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            cf: \"\",\r\n            annoScolastico: 1,\r\n            email: \"\",\r\n            dataNascita: \"\"\r\n        }\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n    \r\n    changeData = (data: string) => {\r\n        this.setState({\r\n            dataNascita: data\r\n        })\r\n    }\r\n\r\n    changeAnnoScolastico = (event: any) => {\r\n        let annoS = event.target.value\r\n\r\n        this.setState({\r\n            annoScolastico: Number(annoS)\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let CF = event.target.value.trim()\r\n\r\n        this.setState({\r\n            cf: CF\r\n        })\r\n    }\r\n\r\n    aggiungiStudente = () => {\r\n        const { nome, cognome, dataNascita, cf, annoScolastico, email } = this.state\r\n\r\n        if(nome === \"\" || cognome === \"\" || dataNascita === \"\" || cf === \"\" || !annoScolastico || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(cf.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        let students = [{\r\n            nome: nome.trim(),\r\n            cognome: cognome.trim(),\r\n            cf: cf,\r\n            password: cf,\r\n            email: email.trim(),\r\n            annoFrequentazione: annoScolastico,\r\n            dataNascita: formattaData(dataNascita, true),\r\n            idCorso: this.props.corso\r\n        }]\r\n\r\n        Axios.post(siteUrl+\"/api/studenti\", students).then(response => {\r\n            message.success(\"Studente creato con successo!\")\r\n            routerHistory.push(adminRoute+\"/studenti\")\r\n        })\r\n\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, cf, email } = this.state\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Aggiungi un nuovo studente</h3>\r\n\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Anno frequentato</label>\r\n                        <select name=\"anno\" onChange={this.changeAnnoScolastico} className=\"custom-select\">\r\n                            <option value={1}>Primo anno</option>\r\n                            <option value={2}>Secondo anno</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Data di nascita</label>\r\n                        <DatePicker locale={locale} className=\"w-100 select-date\" onChange={(_, d2) => this.changeData(d2)} format=\"DD-MM-YYYY\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={cf} onChange={this.changeCF} />\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.aggiungiStudente}>Aggiungi studente</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { IPresenze } from \"../../models/IPresenze\"\r\nimport { Tooltip, Icon, Spin, Modal } from \"antd\"\r\nimport { hideAll, siteUrl, formatItalian, startEdit, validateTime } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\n\r\nexport interface IProps{\r\n    readonly studente: number\r\n    reloadTotali(): void\r\n}\r\nexport interface IState{\r\n    readonly presenze: IPresenze[]\r\n    readonly entrataEdit: string\r\n    readonly uscitaEdit: string\r\n}\r\n\r\nexport default class PresenzeTable extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            presenze: null,\r\n            entrataEdit: \"\",\r\n            uscitaEdit: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/studenti/getdetailedpresences/\"+this.props.studente).then((response) => {\r\n\r\n            let presenze = response.data as IPresenze[]\r\n\r\n            this.setState({\r\n                presenze: presenze\r\n            })\r\n        })\r\n    }\r\n\r\n    changeEntrata = (event: any) => {\r\n        let entrata = event.target.value.trim()\r\n\r\n        this.setState({\r\n            entrataEdit: entrata\r\n        })\r\n    }\r\n\r\n    changeUscita = (event: any) => {\r\n        let uscita = event.target.value.trim()\r\n\r\n        this.setState({\r\n            uscitaEdit: uscita\r\n        })\r\n    }\r\n\r\n    startTimeEdit = (id: number) => {\r\n        let presenza = this.state.presenze.find(p => p.idPresenza === id)\r\n\r\n        startEdit(id)\r\n\r\n        this.setState({\r\n            entrataEdit: presenza.ingresso,\r\n            uscitaEdit: presenza.uscita\r\n        })\r\n    }\r\n\r\n    animateSpans = (span1: HTMLElement, span2: HTMLElement) => {\r\n        let node1 = span1.parentNode as HTMLElement,\r\n        node2 = span2.parentNode as HTMLElement\r\n\r\n        node1.classList.add(\"edited\")\r\n        node2.classList.add(\"edited\")\r\n\r\n        setTimeout(() => {\r\n            node1.classList.remove(\"edited\")\r\n            node2.classList.remove(\"edited\")\r\n        }, 1000)\r\n    }\r\n\r\n    confirmEdit = (id: number) => {\r\n        const { entrataEdit, uscitaEdit, presenze } = this.state\r\n\r\n        if(!validateTime(entrataEdit) || !validateTime(uscitaEdit)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Orari non validi! (ore:minuti:secondi)\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        let entrataSpan = document.getElementById(\"entrataSpan_\" + id),\r\n        uscitaSpan = document.getElementById(\"uscitaSpan_\" + id),\r\n        presenza = presenze.find(p => p.idPresenza === id)\r\n\r\n        Axios.put(siteUrl+\"/api/presenze/\" + id, {\r\n            idPresenza: presenza.idPresenza,\r\n            idStudente: presenza.idStudente,\r\n            ingresso: entrataEdit,\r\n            uscita: uscitaEdit,\r\n            idLezione: presenza.idLezione\r\n        }).then(response => {\r\n            let output = response.data\r\n\r\n            if(output === \"success\"){\r\n                let newPresenze = presenze.map(p => {\r\n                    if(p.idPresenza === id){\r\n                        let newP = p as any\r\n                        newP.ingresso = entrataEdit\r\n                        newP.uscita = uscitaEdit\r\n\r\n                        return newP as IPresenze\r\n                    }\r\n\r\n                    return p\r\n                })\r\n\r\n                this.setState({\r\n                    presenze: newPresenze\r\n                })\r\n\r\n                hideAll()\r\n                \r\n                this.animateSpans(entrataSpan, uscitaSpan)\r\n\r\n                this.props.reloadTotali()\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: output\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { presenze, entrataEdit, uscitaEdit } = this.state\r\n\r\n        if(!presenze){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div>\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <table className=\"table table-bordered text-center\">\r\n            <tbody>\r\n                <tr>\r\n                    <th>Giorno</th>\r\n                    <th>Entrata</th>\r\n                    <th>Uscita</th>\r\n                    <th>Lezione</th>\r\n                    <th>Azioni</th>\r\n                </tr>\r\n\r\n                {\r\n                    presenze.map(p => {\r\n                        return <tr>\r\n                            <td style={{maxWidth: 0}} className=\"text-truncate\">{formatItalian(p.data)}</td>\r\n                            <td style={{maxWidth: 0}} className=\"text-truncate\">\r\n                                <span id={\"entrataSpan_\"+p.idPresenza}>{p.ingresso}</span>\r\n                                <input type=\"text\" className=\"form-control edit-time\" value={entrataEdit} style={{display: \"none\"}} onChange={this.changeEntrata} id={\"entrataInput_\"+p.idPresenza} />\r\n                            </td>\r\n                            <td style={{maxWidth: 0}} className=\"text-truncate\">\r\n                                <span id={\"uscitaSpan_\"+p.idPresenza}>{p.uscita}</span>\r\n                                <input type=\"text\" className=\"form-control edit-time\" value={uscitaEdit} style={{display: \"none\"}} onChange={this.changeUscita} id={\"uscitaInput_\"+p.idPresenza} />\r\n                            </td>\r\n                            <Tooltip title={p.lezione}>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\">{p.lezione}</td>\r\n                            </Tooltip>\r\n                            <td>\r\n                                <Tooltip title=\"Modifica orari\">\r\n                                    <button type=\"button\" className=\"btn btn-orange circle-btn\" onClick={() => this.startTimeEdit(p.idPresenza)} id={\"editBtn_\"+p.idPresenza}>\r\n                                        <i className=\"fa fa-user-edit\"></i>\r\n                                    </button>\r\n                                </Tooltip>\r\n                                <Tooltip title=\"Conferma modifiche\">\r\n                                    <button type=\"button\" className=\"btn btn-success circle-btn\" onClick={() => this.confirmEdit(p.idPresenza)} id={\"confirmBtn_\"+p.idPresenza} style={{display: \"none\"}}>\r\n                                        <i className=\"fa fa-check\"></i>\r\n                                    </button>\r\n                                </Tooltip>\r\n                            </td>\r\n                        </tr>\r\n                    })\r\n                }\r\n            </tbody>\r\n        </table>\r\n    }\r\n}","import React from \"react\"\r\nimport { RouteComponentProps } from \"react-router\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport { routerHistory } from \"../..\"\r\nimport { Icon, Spin, Progress, Statistic, Modal, Button } from \"antd\"\r\nimport PresenzeTable from \"./PresenzeTable\"\r\nimport Axios from \"axios\"\r\nimport { formatItalian, siteUrl, adminRoute } from \"../../utilities\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\nimport QRCode from \"qrcode.react\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly student: IStudent\r\n    readonly totPresenze: number\r\n    readonly oreTotali: number\r\n    readonly modal: boolean\r\n}\r\n\r\nexport default class StudentDetails extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            student: null,\r\n            totPresenze: null,\r\n            oreTotali: null,\r\n            modal: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(adminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/getstudentibyid/\" + id).then((response) => {\r\n            this.setState({\r\n                student: response.data as IStudent\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/gettotaleorelezioni\").then((response) => {\r\n            this.setState({\r\n                oreTotali: this.roundToTwo(response.data as number)\r\n            })\r\n        })\r\n\r\n        this.loadTotali()\r\n    }\r\n\r\n    loadTotali = () => {\r\n        this.setState({\r\n            totPresenze: null\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/gethoursamount/\" + this.props.match.params.id).then((response) => {\r\n            this.setState({\r\n                totPresenze: this.roundToTwo(response.data as number)\r\n            })\r\n        })\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    downloadQR = () => {\r\n        const { student } = this.state,\r\n        canvas = document.getElementById(\"qr-code-image\") as any\r\n        const pngUrl = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\")\r\n        let downloadLink = document.createElement(\"a\")\r\n        downloadLink.href = pngUrl\r\n        downloadLink.download = `qrcode${student.nome}${student.cognome}.png`\r\n        document.body.appendChild(downloadLink)\r\n        downloadLink.click()\r\n        document.body.removeChild(downloadLink)\r\n    }\r\n\r\n    getQRCode = () => {\r\n        const { student } = this.state\r\n        let cipher = new Cipher(),\r\n        code = cipher.encode(student.cf)\r\n\r\n        return code\r\n    }\r\n\r\n    roundToTwo = (total: number) => {    \r\n        return Math.round(total)\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { student, totPresenze, oreTotali, modal } = this.state\r\n        \r\n        if(!student){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        let perc = student.frequenza !== null ? this.roundToTwo(100 * totPresenze / oreTotali) : null,\r\n        color = perc >= 80 ? \"var(--success)\" : \"var(--danger)\"\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <div className=\"row mx-0\">\r\n                <div className=\"col-12 col-md-6 pl-md-0 mb-2 mb-md-0\">\r\n                    <div className=\"p-3 bg-white border rounded\">\r\n                        <span className=\"border-text\">\r\n                            {\r\n                                student.ritirato ? \"Ritirato: \"+student.dataRitiro : student.annoFrequentazione === 1 ? \"Primo anno\" : \"Secondo anno\"\r\n                            }\r\n                        </span>\r\n                        <h4 className=\"text-uppercase mb-2 text-truncate\">{student.nome} {student.cognome}</h4>\r\n                        <p className=\"mb-0\"><strong>Data di nascita</strong>: {formatItalian(student.dataNascita)}</p>\r\n                        <p className=\"mb-0\"><strong>E-mail</strong>: {student.email}</p>\r\n                        <Button onClick={this.toggleModal} className=\"float-right\" type=\"link\">\r\n                            Mostra codice QR\r\n                        </Button>\r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 pr-md-0\">\r\n                    <div className=\"p-3 bg-white border rounded\">\r\n                        {\r\n                            perc !== null ? <Progress type=\"circle\" percent={perc} width={80} className=\"float-left mr-3\" strokeColor={color} format={percent => `${percent}%`}  /> : <Spin indicator={<Icon type=\"loading\" spin />} />\r\n                        }\r\n\r\n                        {\r\n                            oreTotali !== null && totPresenze !== null ? <Statistic title=\"Presenze totali (ore)\" value={totPresenze} suffix={\"/ \"+oreTotali} decimalSeparator=\",\" groupSeparator=\".\" /> : <Spin indicator={<Icon type=\"loading\" spin />} />\r\n                        }\r\n                        \r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <h3 className=\"mt-3\">Presenze dello studente</h3>\r\n            <PresenzeTable studente={student.idStudente} reloadTotali={this.loadTotali} />\r\n            \r\n            <Modal visible={modal} maskClosable={true} centered title={\r\n                <span>\r\n                    <i className=\"far fa-qrcode fa-fw fa-lg text-primary mr-2\"></i>Codice QR dello studente\r\n                </span>\r\n            } onCancel={this.toggleModal} width={350} onOk={this.downloadQR}\r\n            footer={[\r\n                <Button type=\"primary\" onClick={this.downloadQR}>\r\n                    <i className=\"far fa-arrow-to-bottom mr-2\"></i> Salva codice\r\n                </Button>,\r\n                <Button type=\"default\" onClick={this.toggleModal}>Chiudi</Button>\r\n            ]}>\r\n                <div className=\"text-center\">\r\n                    <p>Salva il codice sottostante e condividilo con <strong>{student.nome} {student.cognome}.</strong></p>\r\n                    <div className=\"my-2\">\r\n                        <QRCode id=\"qr-code-image\" value={this.getQRCode()} size={200} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { IDocente } from \"../../models/IDocente\"\r\nimport { routerHistory } from \"../..\"\r\nimport { Modal, Tooltip, Spin, Icon, Switch, message } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, adminRoute } from \"../../utilities\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly docenti: IDocente[]\r\n    readonly showAll: boolean\r\n}\r\n\r\nexport default class DocentiList extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            docenti: null,\r\n            showAll: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/docenti\").then((response) => {\r\n            this.setState({\r\n                docenti: response.data as IDocente[]\r\n            })\r\n        })\r\n    }\r\n\r\n    switchList = () => {\r\n        this.setState({\r\n            showAll: !this.state.showAll\r\n        })\r\n    }\r\n\r\n    showDeleteConfirm = (docente: IDocente) => {\r\n        let context = this\r\n\r\n        Modal.confirm({\r\n            title: `ATTENZIONE: si sta per ritirare un docente (${docente.nome} ${docente.cognome})`,\r\n            content: \"I dati identificativi del docente, le lezioni e le presenze verranno comunque mantenuti.\",\r\n            okText: \"Confermo\",\r\n            okType: \"danger\",\r\n            cancelText: \"Annulla\",\r\n            onOk: () => {\r\n                context.setState({\r\n                    docenti: null\r\n                })\r\n                \r\n                Axios.delete(siteUrl+\"/api/docenti/\"+docente.idDocente).then(response => {\r\n\r\n                    let docenti = response.data as IDocente[]\r\n\r\n                    context.setState({\r\n                        docenti: docenti\r\n                    })\r\n\r\n                    message.success(\"Docente ritirato con successo!\")\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    sortbyId = (a: IDocente, b: IDocente) => { \r\n        if(a.idDocente > b.idDocente)\r\n            return 1\r\n        if(a.idDocente < b.idDocente)\r\n            return -1\r\n\r\n        return 0\r\n    }\r\n\r\n    backRetire = (doc: IDocente) => {\r\n        let context = this\r\n\r\n        Modal.confirm({\r\n            title: `${doc.nome} ${doc.cognome}`,\r\n            content: \"Questo docente verrà reintegrato all'interno del corso.\",\r\n            okText: \"Confermo\",\r\n            okType: \"danger\",\r\n            cancelText: \"Annulla\",\r\n            onOk: () => {\r\n                context.setState({\r\n                    docenti: null\r\n                })\r\n\r\n                Axios.delete(siteUrl+\"/api/docenti/\"+doc.idDocente).then(response => {\r\n\r\n                    let docenti = response.data as IDocente[]\r\n\r\n                    context.setState({\r\n                        docenti: docenti\r\n                    })\r\n\r\n                    message.success(\"Docente reintegrato con successo!\")\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    isInCorso = (doc: IDocente) => {\r\n        return doc.corsi.indexOf(this.props.corso) !== -1\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { docenti, showAll } = this.state\r\n\r\n        if(!docenti){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        let lista = showAll ? docenti : docenti.filter(d => this.isInCorso(d)),\r\n        docs = lista.sort(this.sortbyId).sort((a, _) => a.ritirato ? 0 : -1)\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Docenti del corso</h3>\r\n\r\n            <label className=\"pointer\" style={{ transform: \"translateY(50%)\" }}>\r\n                <Switch checked={!showAll} onChange={this.switchList} className=\"mr-1 align-top\" /> Mostra solo i docenti del mio corso\r\n            </label>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={() => routerHistory.push(adminRoute+\"/docenti/new\")}>\r\n                <i className=\"fal fa-plus\"></i> Aggiungi docente\r\n            </button>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                \r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th>Cognome</th>\r\n                            <th style={{width: \"15%\"}}>Ore svolte</th>\r\n                            <th style={{width: \"20%\"}}>Azioni</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            docs.map(d => {   \r\n                                let bg = d.ritirato ? \"light font-italic\" : \"white\"     \r\n                                return <tr className={\"bg-\"+bg}>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{d.nome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{d.cognome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{d.monteOre}</td>\r\n                                    <td>\r\n                                        <Tooltip title=\"Dettagli\">\r\n                                            <button type=\"button\" className=\"btn btn-info circle-btn\" onClick={() => routerHistory.push(adminRoute+\"/docenti/\" + d.idDocente)}>\r\n                                                <i className=\"fa fa-info\"></i>\r\n                                            </button>\r\n                                        </Tooltip>\r\n\r\n                                        {\r\n                                            !d.ritirato && <Tooltip title=\"Modifica\">\r\n                                                <button type=\"button\" className=\"btn btn-warning text-white circle-btn ml-2\" onClick={() => routerHistory.push(adminRoute+\"/docenti/edit/\" + d.idDocente)}>\r\n                                                    <i className=\"fa fa-pen\"></i>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            !d.ritirato && <Tooltip title=\"Segna come ritirato\">\r\n                                                <button type=\"button\" className=\"btn btn-danger circle-btn ml-2\" onClick={() => this.showDeleteConfirm(d)}>\r\n                                                    <i className=\"fa fa-user-times\"></i>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                        }\r\n\r\n                                        {\r\n                                            d.ritirato && this.isInCorso(d) && <Tooltip title=\"Reintegra nel corso\">\r\n                                                <button type=\"button\" className=\"btn btn-danger circle-btn ml-2\" onClick={() => this.backRetire(d)}>\r\n                                                    <i className=\"fa fa-reply\"></i>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, message, Icon, Spin, Checkbox } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, adminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { IMateria } from \"../../models/IMateria\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly CF: string\r\n    readonly email: string\r\n    readonly materie: IMateria[]\r\n    readonly corsi: ICorso[]\r\n    readonly materieSel: number[]\r\n    readonly corsiSel: number[] \r\n}\r\n\r\nexport default class AddNewDocente extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            CF: \"\",\r\n            email: \"\",\r\n            corsi: null,\r\n            materie: null,\r\n            corsiSel: [],\r\n            materieSel: []\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                corsi: corsi\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/materie/getmateriebycorso/\"+this.props.corso).then(response => {\r\n            let materie = response.data as IMateria[]\r\n\r\n            this.setState({\r\n                materie: materie\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let CF = event.target.value.trim()\r\n\r\n        this.setState({\r\n            CF: CF\r\n        })\r\n    }\r\n\r\n    aggiungiDocente = () => {\r\n        const { nome, cognome,CF, email, corsiSel, materieSel } = this.state\r\n\r\n        if(nome === \"\" || cognome === \"\" || CF === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(CF.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!materieSel.length){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Scegliere almeno una materia.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!corsiSel.length){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Scegliere almeno un corso.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.post(siteUrl+\"/api/docenti\", {\r\n            nome: nome.trim(),\r\n            cognome: cognome.trim(),\r\n            cf: CF,\r\n            password: CF,\r\n            email: email.trim(),\r\n            tenere: corsiSel.map(c => { return { idCorso: c, idDocente: 0 } }),\r\n            insegnare: materieSel.map(m => { return { idMateria: m, idDocente: 0 } }),\r\n        }).then(_ => {\r\n            message.success(\"Docente creato con successo!\")\r\n            routerHistory.push(adminRoute+\"/docenti\")\r\n        })\r\n\r\n    }\r\n\r\n    switchMateria = (materiaId: number) => {\r\n        let find = this.state.materieSel.find(m => m === materiaId),\r\n        newList = find ? this.state.materieSel.filter(m => m !== materiaId) : this.state.materieSel.concat(materiaId)\r\n\r\n        this.setState({\r\n            materieSel: newList\r\n        })\r\n    }\r\n\r\n    switchCorso = (corsoId: number) => {\r\n        let find = this.state.corsiSel.find(m => m === corsoId),\r\n        newList = find ? this.state.corsiSel.filter(m => m !== corsoId) : this.state.corsiSel.concat(corsoId)\r\n\r\n        this.setState({\r\n            corsiSel: newList\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, CF, email, materie, materieSel, corsi, corsiSel } = this.state\r\n\r\n        if(!materie || !corsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Aggiungi un nuovo docente</h3>\r\n\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={CF} onChange={this.changeCF} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Materie insegnate dal docente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                materie.map(m => {\r\n                                    let find = materieSel.find(f => f === m.idMateria),\r\n                                    checked = find ? true : false,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n\r\n                                    return <label className={\"option \" + classname}>\r\n                                        <Checkbox className=\"mr-2\" onChange={() => this.switchMateria(m.idMateria)} checked={checked} /> {m.nome}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Corsi del docente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                corsi.map(m => {\r\n                                    let find = corsiSel.find(f => f === m.idCorso),\r\n                                    checked = find ? true : false,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n\r\n                                    return <label className={\"option \" + classname}>\r\n                                        <Checkbox className=\"mr-2\" onChange={() => this.switchCorso(m.idCorso)} checked={checked} /> {m.nome}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.aggiungiDocente}>Aggiungi docente</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Tooltip, Icon, Spin, Modal } from \"antd\"\r\nimport { hideAll, siteUrl, formatItalian, startEdit, validateTime } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { IPresenzaDocente } from \"../../models/IPresenzaDocente\"\r\n\r\nexport interface IProps{\r\n    readonly idDocente: string\r\n    readonly canEdit: boolean\r\n}\r\nexport interface IState{\r\n    readonly presenze: IPresenzaDocente[]\r\n    readonly entrataEdit: string\r\n    readonly uscitaEdit: string\r\n}\r\n\r\nexport default class LezioniDocenteTable extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            presenze: null,\r\n            entrataEdit: \"\",\r\n            uscitaEdit: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/lezioni/getlezionidocente/\"+this.props.idDocente).then(response => {\r\n            let presenze = response.data as IPresenzaDocente[]\r\n\r\n            this.setState({\r\n                presenze: presenze\r\n            })\r\n        })\r\n    }\r\n\r\n    changeEntrata = (event: any) => {\r\n        let entrata = event.target.value.trim()\r\n\r\n        this.setState({\r\n            entrataEdit: entrata\r\n        })\r\n    }\r\n\r\n    changeUscita = (event: any) => {\r\n        let uscita = event.target.value.trim()\r\n\r\n        this.setState({\r\n            uscitaEdit: uscita\r\n        })\r\n    }\r\n\r\n    startTimeEdit = (id: number) => {\r\n        let presenza = this.state.presenze.find(p => p.idPresenza === id)\r\n\r\n        startEdit(id)\r\n\r\n        this.setState({\r\n            entrataEdit: presenza.ingresso,\r\n            uscitaEdit: presenza.uscita\r\n        })\r\n    }\r\n\r\n    animateSpans = (span1: HTMLElement, span2: HTMLElement) => {\r\n        let node1 = span1.parentNode as HTMLElement,\r\n        node2 = span2.parentNode as HTMLElement\r\n\r\n        node1.classList.add(\"edited\")\r\n        node2.classList.add(\"edited\")\r\n\r\n        setTimeout(() => {\r\n            node1.classList.remove(\"edited\")\r\n            node2.classList.remove(\"edited\")\r\n        }, 1000)\r\n    }\r\n\r\n    confirmEdit = (id: number) => {\r\n        const { entrataEdit, uscitaEdit, presenze } = this.state\r\n        \r\n        if(!validateTime(entrataEdit) || !validateTime(uscitaEdit)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Orari non validi! (ore:minuti:secondi)\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        let entrataSpan = document.getElementById(\"entrataSpan_\" + id),\r\n        uscitaSpan = document.getElementById(\"uscitaSpan_\" + id),\r\n        presenza = presenze.find(p => p.idPresenza === id)\r\n\r\n        Axios.put(siteUrl+\"/api/presenzedocente/\"+id, {\r\n            idPresenza: id,\r\n            ingresso: entrataEdit,\r\n            uscita: uscitaEdit,\r\n            idDocente: presenza.idDocente,\r\n            idLezione: presenza.idLezione\r\n        }).then(response => {\r\n            let output = response.data\r\n\r\n            if(output === \"success\"){\r\n                let newPresenze = presenze.map(p => {\r\n                    if(p.idPresenza === id){\r\n                        let newP = p as any\r\n                        newP.ingresso = entrataEdit\r\n                        newP.uscita = uscitaEdit\r\n\r\n                        return newP as IPresenzaDocente\r\n                    }\r\n\r\n                    return p\r\n                })\r\n\r\n                this.setState({\r\n                    presenze: newPresenze\r\n                })\r\n\r\n                hideAll()\r\n                \r\n                this.animateSpans(entrataSpan, uscitaSpan)\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: output\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { presenze, entrataEdit, uscitaEdit } = this.state,\r\n        { canEdit } = this.props\r\n\r\n        if(!presenze){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div>\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <table className=\"table table-bordered text-center mt-3\">\r\n            <tbody>\r\n                <tr className=\"thead-light\">\r\n                    <th>Giorno</th>\r\n                    <th>Entrata</th>\r\n                    <th>Uscita</th>\r\n                    <th>Lezione</th>\r\n                    {\r\n                        canEdit && <th>Azioni</th>\r\n                    }\r\n                </tr>\r\n\r\n                {\r\n                    presenze.map(p => {\r\n                        return <tr>\r\n                            <td style={{maxWidth: 0}} className=\"text-truncate\">{formatItalian(p.data)}</td>\r\n                            <td style={{maxWidth: 0}} className=\"text-truncate\">\r\n                                <span id={\"entrataSpan_\"+p.idPresenza}>{p.ingresso}</span>\r\n                                <input type=\"text\" className=\"form-control edit-time\" value={entrataEdit} style={{display: \"none\"}} onChange={this.changeEntrata} id={\"entrataInput_\"+p.idPresenza} />\r\n                            </td>\r\n                            <td style={{maxWidth: 0}} className=\"text-truncate\">\r\n                                <span id={\"uscitaSpan_\"+p.idPresenza}>{p.uscita}</span>\r\n                                <input type=\"text\" className=\"form-control edit-time\" value={uscitaEdit} style={{display: \"none\"}} onChange={this.changeUscita} id={\"uscitaInput_\"+p.idPresenza} />\r\n                            </td>\r\n                            <Tooltip title={p.lezione}>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\">{p.lezione}</td>\r\n                            </Tooltip>\r\n                            {\r\n                                canEdit && <td>\r\n                                    <Tooltip title=\"Modifica orari\">\r\n                                        <button type=\"button\" className=\"btn btn-orange circle-btn\" onClick={() => this.startTimeEdit(p.idPresenza)} id={\"editBtn_\"+p.idPresenza}>\r\n                                            <i className=\"fa fa-user-edit\"></i>\r\n                                        </button>\r\n                                    </Tooltip>\r\n                                    <Tooltip title=\"Conferma modifiche\">\r\n                                        <button type=\"button\" className=\"btn btn-success circle-btn\" onClick={() => this.confirmEdit(p.idPresenza)} id={\"confirmBtn_\"+p.idPresenza} style={{display: \"none\"}}>\r\n                                            <i className=\"fa fa-check\"></i>\r\n                                        </button>\r\n                                    </Tooltip>\r\n                                </td>\r\n                            }\r\n                        </tr>\r\n                    })\r\n                }\r\n            </tbody>\r\n        </table>\r\n    }\r\n}","import React from \"react\"\r\nimport { RouteComponentProps } from \"react-router\"\r\nimport { routerHistory } from \"../..\"\r\nimport { Icon, Spin, Modal, Button, Statistic } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { IDocente } from \"../../models/IDocente\"\r\nimport LezioniDocenteTable from \"./LezioniDocenteTable\"\r\nimport { siteUrl, adminRoute } from \"../../utilities\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\nimport QRCode from \"qrcode.react\"\r\n\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly docente: IDocente\r\n    readonly modal: boolean\r\n}\r\n\r\nexport default class DocenteDetails extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            docente: null,\r\n            modal: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(adminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/docenti/getdocentibyid/\" + id).then((response) => {\r\n            this.setState({\r\n                docente: response.data as IDocente\r\n            })\r\n        })\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    downloadQR = () => {\r\n        const { docente } = this.state,\r\n        canvas = document.getElementById(\"qr-code-image\") as any\r\n        const pngUrl = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\")\r\n        let downloadLink = document.createElement(\"a\")\r\n        downloadLink.href = pngUrl\r\n        downloadLink.download = `qrcode${docente.nome}${docente.cognome}.png`\r\n        document.body.appendChild(downloadLink)\r\n        downloadLink.click()\r\n        document.body.removeChild(downloadLink)\r\n    }\r\n\r\n    getQRCode = () => {\r\n        const { docente } = this.state\r\n        let cipher = new Cipher(),\r\n        code = cipher.encode(docente.cf)\r\n\r\n        return code\r\n    }\r\n\r\n    isInCorso = (doc: IDocente) => {\r\n        return doc.corsi.indexOf(this.props.corso) !== -1\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { docente, modal } = this.state\r\n\r\n        if(!docente){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <div className=\"row mx-0\">\r\n                <div className=\"col-12 col-md-6 pl-md-0 mb-2 mb-md-0\">\r\n\r\n                    <div className=\"p-3 bg-white border\">\r\n                        {\r\n                            docente.ritirato && <span className=\"border-text\">Ritirato</span>\r\n                        }\r\n\r\n                        <h4 className=\"text-uppercase mb-2 text-truncate\">{docente.nome} {docente.cognome}</h4>\r\n                        <p className=\"mb-0\"><strong>E-mail</strong>: {docente.email}</p>\r\n                        <Button onClick={this.toggleModal} className=\"float-right\" type=\"link\">\r\n                            Mostra codice QR\r\n                        </Button>\r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3 pr-md-0\">\r\n                    <div className=\"p-3 bg-white border rounded text-center\" style={{ display: \"flex\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                        <Statistic title=\"Ore svolte\" value={docente.monteOre} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <h3 className=\"mt-3\">Lezioni tenute dal docente</h3>\r\n            <LezioniDocenteTable idDocente={docente.idDocente} canEdit={this.isInCorso(docente)} />\r\n\r\n            <Modal visible={modal} maskClosable={true} centered title={\r\n                <span>\r\n                    <i className=\"far fa-qrcode fa-fw fa-lg text-primary mr-2\"></i>Codice QR del docente\r\n                </span>\r\n            } onCancel={this.toggleModal} width={350} onOk={this.downloadQR}\r\n            footer={[\r\n                <Button type=\"primary\" onClick={this.downloadQR}>\r\n                    <i className=\"far fa-arrow-to-bottom mr-2\"></i> Salva codice\r\n                </Button>,\r\n                <Button type=\"default\" onClick={this.toggleModal}>Chiudi</Button>\r\n            ]}>\r\n                <div className=\"text-center\">\r\n                    <p>Salva il codice sottostante e condividilo con <strong>{docente.nome} {docente.cognome}.</strong></p>\r\n                    <div className=\"my-2\">\r\n                        <QRCode id=\"qr-code-image\" value={this.getQRCode()} size={200} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Icon, Spin, Checkbox, message } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, adminRoute } from \"../../utilities\"\r\nimport { IDocente } from \"../../models/IDocente\"\r\nimport Axios from \"axios\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { IMateria } from \"../../models/IMateria\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly docente: IDocente\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly CF: string\r\n    readonly email: string\r\n    readonly materie: IMateria[]\r\n    readonly corsi: ICorso[]\r\n    readonly materieSel: number[]\r\n    readonly corsiSel: number[] \r\n}\r\n\r\nexport default class EditDocente extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            docente: null,\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            CF: \"\",\r\n            email: \"\",\r\n            materie: [],\r\n            materieSel: [],\r\n            corsi: [],\r\n            corsiSel: []\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(adminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/docenti/getdocentibyid/\" + id).then((response) => {\r\n            let doc = response.data as IDocente\r\n\r\n            this.setState({\r\n                docente: doc,\r\n                nome: doc.nome,\r\n                cognome: doc.cognome,\r\n                CF: doc.cf,\r\n                email: doc.email,\r\n                materieSel: doc.materie && doc.materie.length ? doc.materie : [],\r\n                corsiSel: doc.corsi && doc.corsi.length ? doc.corsi : []\r\n            })\r\n        })\r\n        \r\n        Axios.get(siteUrl+\"/api/materie/getmateriebycorso/\"+this.props.corso).then((response) => {\r\n            let materie = response.data as IMateria[]\r\n            \r\n            this.setState({\r\n                materie: materie\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/corsi\").then((response) => {\r\n            let corsi = response.data as ICorso[]\r\n            \r\n            this.setState({\r\n                corsi: corsi\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let CF = event.target.value.trim()\r\n\r\n        this.setState({\r\n            CF: CF\r\n        })\r\n    }\r\n\r\n    modificaDocente = () => {\r\n        const { docente, nome, cognome, CF, email, corsiSel, materieSel } = this.state\r\n\r\n        if(nome === \"\" || cognome === \"\" || CF === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!materieSel.length){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Scegliere almeno una materia.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!corsiSel.length){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Scegliere almeno un corso.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(CF.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.put(siteUrl+\"/api/docenti/\" + this.props.match.params.id, {\r\n            idDocente: parseInt(this.props.match.params.id),\r\n            nome: nome.trim(),\r\n            cognome: cognome.trim(),\r\n            email: email.trim(),\r\n            cf: CF,\r\n            tenere: corsiSel.map(c => { return { idCorso: c, idDocente: docente.idDocente } }),\r\n            insegnare: materieSel.map(m => { return { idMateria: m, idDocente: docente.idDocente } }),\r\n            password: docente.password,\r\n            ritirato: docente.ritirato\r\n        }).then(_ => {\r\n            message.success(\"Docente modificato con successo!\")\r\n            routerHistory.push(adminRoute+\"/docenti\")\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    switchMateria = (materiaId: number) => {\r\n        let find = this.state.materieSel.find(m => m === materiaId),\r\n        newList = find ? this.state.materieSel.filter(m => m !== materiaId) : this.state.materieSel.concat(materiaId)\r\n\r\n        this.setState({\r\n            materieSel: newList\r\n        })\r\n    }\r\n\r\n    switchCorso = (corsoId: number) => {\r\n        let find = this.state.corsiSel.find(m => m === corsoId),\r\n        newList = find ? this.state.corsiSel.filter(m => m !== corsoId) : this.state.corsiSel.concat(corsoId)\r\n\r\n        this.setState({\r\n            corsiSel: newList\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, CF, docente, email, materie, materieSel, corsi, corsiSel } = this.state\r\n\r\n        if(!docente || !materie.length || !corsi.length){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Modifica di un docente</h3>\r\n\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={CF} onChange={this.changeCF} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Materie insegnate dal docente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                materie.map(m => {\r\n                                    let find = materieSel.find(f => f === m.idMateria),\r\n                                    checked = find ? true : false,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n\r\n                                    return <label className={\"option \" + classname}>\r\n                                        <Checkbox className=\"mr-2\" onChange={() => this.switchMateria(m.idMateria)} checked={checked} /> {m.nome}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Corsi del docente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                corsi.map(m => {\r\n                                    let find = corsiSel.find(f => f === m.idCorso),\r\n                                    checked = find ? true : false,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n\r\n                                    return <label className={\"option \" + classname}>\r\n                                        <Checkbox className=\"mr-2\" onChange={() => this.switchCorso(m.idCorso)} checked={checked} /> {m.nome}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.modificaDocente}>Modifica docente</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Icon, Spin, message, DatePicker } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, formattaData, formatItalian, adminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport locale from \"antd/es/date-picker/locale/it_IT\"\r\nimport moment from \"moment\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly studente: IStudent\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly dataNascita: string\r\n    readonly CF: string\r\n    readonly email: string\r\n}\r\n\r\nexport default class EditStudente extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            studente: null,\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            dataNascita: \"\",\r\n            CF: \"\",\r\n            email: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(adminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/getstudentibyid/\" + id).then((response) => {\r\n            let stu = response.data as IStudent\r\n\r\n            this.setState({\r\n                studente: stu,\r\n                nome: stu.nome,\r\n                cognome: stu.cognome,\r\n                CF: stu.cf,\r\n                dataNascita: formatItalian(stu.dataNascita),\r\n                email: stu.email\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeData = (data: string) => {\r\n        this.setState({\r\n            dataNascita: data\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let CF = event.target.value.trim()\r\n\r\n        this.setState({\r\n            CF: CF\r\n        })\r\n    }\r\n\r\n    modificaStudente = () => {\r\n        const { nome, cognome, dataNascita, CF, email, studente } = this.state\r\n\r\n        if(nome === \"\" || cognome === \"\" || dataNascita === \"\" || CF === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(CF.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.put(siteUrl+\"/api/studenti/\" + studente.idStudente, {\r\n            idStudente: studente.idStudente,\r\n            nome: nome.trim(),\r\n            cognome: cognome.trim(),\r\n            email: email.trim(),\r\n            password: studente.password,\r\n            cf: CF,\r\n            idCorso: this.props.corso,\r\n            annoFrequentazione: studente.annoFrequentazione,\r\n            dataNascita: formattaData(dataNascita, true),\r\n            ritirato: studente.ritirato\r\n        }).then(_ => {\r\n            message.success(\"Studente modificato con successo!\")\r\n            routerHistory.push(adminRoute+\"/studenti\")\r\n        })\r\n        \r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, dataNascita, CF, studente, email } = this.state\r\n\r\n        if(!studente){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Modifica di uno studente</h3>\r\n\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Data di nascita</label>\r\n                        <DatePicker locale={locale} className=\"w-100 select-date\" onChange={(_, d2) => this.changeData(d2)} format=\"DD-MM-YYYY\" defaultValue={moment(dataNascita, \"DD-MM-YYYY\")} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={CF} onChange={this.changeCF} />\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.modificaStudente}>Modifica studente</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport Dragger from \"antd/lib/upload/Dragger\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport { Modal, Tooltip, Icon, message } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { formattaData, capitalizeFirst, siteUrl, resizePopup, formatItalian, adminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly addList: IStudent[]\r\n    readonly fileContent: string\r\n    readonly fields: any\r\n}\r\n\r\nconst fields = [{\r\n    label: \"Nome\",\r\n    field: \"nome\"\r\n},{\r\n    label: \"Cognome\",\r\n    field: \"cognome\"\r\n},{\r\n    label: \"Codice Fiscale\",\r\n    field: \"cf\"\r\n},{\r\n    label: \"Data di nascita\",\r\n    field: \"dataNascita\"\r\n},{\r\n    label: \"E-mail\",\r\n    field: \"email\"\r\n}]\r\n\r\nexport default class StudentsImport extends React.PureComponent<IProps, IState>{\r\n    \r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            addList: [],\r\n            fileContent: \"\",\r\n            fields: {\r\n                nome: 0,\r\n                cognome: 0,\r\n                cf: 0,\r\n                dataNascita: 0,\r\n                email: 0,\r\n                annoFrequentazione: 1\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        resizePopup()\r\n    }\r\n\r\n    splitCSV = (data: string) => {\r\n        let regex = /([\"'])(?:(?=(\\\\?))\\2.)*?\\1/g,\r\n        pieces = data.match(regex)\r\n\r\n        return pieces.map(p => { return p.replace(/[\"]/g, '') })\r\n    }\r\n\r\n    renderOptions = () => {\r\n        let rows = this.state.fileContent.split(\"\\n\"),\r\n        cells = this.splitCSV(rows[0]),\r\n        options = cells.map((c, i) => {\r\n            if(c === \"\")\r\n                return null\r\n\r\n            return <option value={i}>{c}</option>\r\n        })\r\n\r\n        return options\r\n    }\r\n\r\n    changeVarPos = (e: any, varName: string) => {\r\n        let value = e.target.value,\r\n        obj = this.state.fields\r\n\r\n        obj[varName] = value\r\n\r\n        this.setState({\r\n            fields: obj\r\n        })\r\n    }\r\n\r\n    readFile = (file: any) => {\r\n        const reader = new FileReader()\r\n\r\n        reader.onload = e => {\r\n            this.setState({\r\n                fileContent: String(e.target.result).trim()\r\n            })\r\n\r\n            Modal.info({\r\n                width: 500,\r\n                centered: true,\r\n                title: \"Selezionare i campi da abbinare\",\r\n                icon: <Icon type=\"api\" style={{ color: \"var(--success)\" }} />,\r\n                maskClosable: true,\r\n                content: <div style={{ marginLeft: -38 }}>\r\n                    <div className=\"row mt-3 px-0\">\r\n                        <div className=\"col-4\">\r\n                            <label className=\"mt-2\">Classe: </label>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <select className=\"custom-select pointer\" style={{ height: 35 }} onChange={(e) => this.changeVarPos(e, \"annoFrequentazione\")}>\r\n                                <option value=\"1\">Primo anno</option>\r\n                                <option value=\"2\">Secondo anno</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        fields.map(f => {\r\n                            return <div className=\"row mt-3 px-0\">\r\n                                <div className=\"col-4\">\r\n                                    <label className=\"mt-2\">{f.label}: </label>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <select className=\"custom-select pointer\" style={{ height: 35 }} onChange={(e) => this.changeVarPos(e, f.field)}>\r\n                                        {this.renderOptions()}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>,\r\n                onOk: this.showImportPreview,\r\n                okText: \"Prosegui\"\r\n            })\r\n        }\r\n\r\n        reader.readAsText(file, \"ISO-8859-1\")\r\n\r\n        return false\r\n    }\r\n\r\n    showImportPreview = () => {\r\n        const { fileContent, fields} = this.state\r\n\r\n        let rows = fileContent.split(\"\\n\"),\r\n        list: IStudent[] = [],\r\n        popup = document.getElementById(\"popup\")\r\n\r\n        rows.forEach(r => {\r\n            let cells = this.splitCSV(r)\r\n\r\n            let student: IStudent = {\r\n                idCorso: this.props.corso,\r\n                nome: capitalizeFirst(cells[fields['nome']]),\r\n                cognome: capitalizeFirst(cells[fields['cognome']]),\r\n                annoFrequentazione: parseInt(fields['annoFrequentazione']),\r\n                cf: cells[fields['cf']],\r\n                dataNascita: formattaData(cells[fields['dataNascita']], true),\r\n                email: cells[fields['email']],\r\n                password: cells[fields['cf']]\r\n            }\r\n\r\n            list.push(student)\r\n        })\r\n\r\n        this.setState({\r\n            addList: list\r\n        })\r\n\r\n        popup.classList.add(\"show\")\r\n    }\r\n\r\n    hidePopup = () => {\r\n        let popup = document.getElementById(\"popup\")\r\n\r\n        this.setState({\r\n            addList: [],\r\n            fields: {\r\n                nome: 0,\r\n                cognome: 0,\r\n                cf: 0,\r\n                dataNascita: 0,\r\n                email: 0,\r\n                annoFrequentazione: 0\r\n            }\r\n        })\r\n\r\n        popup.classList.remove(\"show\")\r\n    }\r\n\r\n    confirmImport = () => {\r\n        Axios.post(siteUrl+\"/api/studenti\", this.state.addList).then(_ => {\r\n            message.success(\"Importazione eseguita con successo!\")\r\n            routerHistory.push(adminRoute+\"/studenti\")\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { addList } = this.state\r\n\r\n        return <div className=\"col p-5 right-block\" id=\"mainBlock\" style={{flexDirection: \"column\"}}>\r\n            <h3 className=\"text-center w-100\">Importa studenti da CSV</h3>\r\n\r\n            <label>\r\n                Prima di proseguire, esportare il CSV da <strong>Sifer</strong>.\r\n            </label>\r\n\r\n            <div className=\"uploader mt-2 w-100\">\r\n                <Dragger accept=\".csv\" beforeUpload={file => this.readFile(file)}>\r\n                    <p className=\"ant-upload-drag-icon\">\r\n                        <i className=\"fa fa-file-csv fa-5x\"></i>\r\n                    </p>\r\n                    <p className=\"ant-upload-text\">Clicca o trascina un file su quest'aerea</p>\r\n                    <p className=\"ant-upload-hint\">\r\n                        Assicurati che il file abbia l'estensione <strong>.csv</strong>.\r\n                    </p>\r\n                </Dragger>\r\n            </div>\r\n\r\n            <div id=\"popup\" className=\"col preview px-0\">\r\n                <div className=\"w-100 h-100 inner overflow-auto px-5 py-4\">\r\n                    <h3 className=\"mb-3 text-center\">Anteprima dati da importare</h3>\r\n                    {\r\n                        addList.length && <table className=\"table table-bordered text-center\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th>Nome</th>\r\n                                    <th>Cognome</th>\r\n                                    <th>Anno</th>\r\n                                    <th>Codice Fiscale</th>\r\n                                    <th>Data di Nascita</th>\r\n                                    <th style={{width: \"25%\"}}>E-mail</th>\r\n                                </tr>\r\n\r\n                                {\r\n                                    addList.map(s => {                \r\n                                        return <tr>\r\n                                            <Tooltip title={s.nome}>\r\n                                                <td style={{maxWidth: 0}} className=\"text-truncate\">{s.nome}</td>\r\n                                            </Tooltip>\r\n                                            <Tooltip title={s.cognome}>\r\n                                                <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cognome}</td>\r\n                                            </Tooltip>\r\n                                            <td style={{maxWidth: 0}} className=\"text-truncate\">{s.annoFrequentazione}</td>\r\n                                            <Tooltip title={s.cf}>\r\n                                                <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cf}</td>\r\n                                            </Tooltip>\r\n                                            <td style={{maxWidth: 0}} className=\"text-truncate\">{formatItalian(s.dataNascita)}</td>\r\n                                            <Tooltip title={s.email}>\r\n                                                <td style={{maxWidth: 0}} className=\"text-truncate\">{s.email}</td>\r\n                                            </Tooltip>\r\n                                        </tr>\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"bottom-side p-3 text-right\">\r\n                    <button className=\"btn btn-danger mr-2\" onClick={this.hidePopup}>Annulla</button>\r\n                    <button className=\"btn btn-success\" onClick={this.confirmImport}>Conferma importazione</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Tooltip, Spin, Icon, Modal, message, Button } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl } from \"../../utilities\"\r\nimport { IMateria } from \"../../models/IMateria\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly materie: IMateria[]\r\n    readonly showModal: boolean\r\n    readonly nomeMateria: string\r\n    readonly showEditModal: boolean\r\n    readonly materiaEdit: IMateria\r\n    readonly nomeEdit: string\r\n    readonly descEdit: string\r\n    readonly descMateria: string\r\n}\r\n\r\nexport default class MaterieList extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            materie: null,\r\n            showModal: false,\r\n            nomeMateria: \"\",\r\n            descMateria: \"\",\r\n            showEditModal: false,\r\n            materiaEdit: null,\r\n            nomeEdit: \"\",\r\n            descEdit: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/materie/getmateriebycorso/\" + this.props.corso).then((response) => {\r\n            this.setState({\r\n                materie: response.data as IMateria[]\r\n            })\r\n        })\r\n    }\r\n\r\n    showHideModal = () => {\r\n        this.setState({\r\n            showModal: !this.state.showModal,\r\n            nomeMateria: \"\",\r\n            descMateria: \"\"\r\n        })\r\n    }\r\n\r\n    hideEditModal = () => {\r\n        this.setState({\r\n            showEditModal: false,\r\n            nomeEdit: \"\",\r\n            materiaEdit: null\r\n        })\r\n    }\r\n\r\n    showEditModal = (materia: IMateria) => {\r\n        this.setState({\r\n            showEditModal: true,\r\n            nomeEdit: materia.nome,\r\n            descEdit: materia.descrizione,\r\n            materiaEdit: materia\r\n        })\r\n    }\r\n\r\n    aggiungiMateria = () => {\r\n        const { nomeMateria, descMateria } = this.state\r\n\r\n        if(nomeMateria === \"\" || descMateria === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n           return\r\n        }\r\n        \r\n        this.setState({\r\n            materie: null,\r\n            showModal: false\r\n        })\r\n\r\n        Axios.post(siteUrl+\"/api/materie/\"+this.props.corso, {\r\n            nome: nomeMateria.trim(),\r\n            descrizione: descMateria.trim()\r\n        }).then(response => {\r\n            let materie = response.data as IMateria[]\r\n\r\n            this.setState({\r\n                materie: materie\r\n            })\r\n\r\n            message.success(\"Materia aggiunta con successo!\")\r\n        })\r\n\r\n    }\r\n\r\n    modificaMateria = () => {\r\n        const { nomeEdit, materiaEdit, descEdit } = this.state\r\n\r\n        if(nomeEdit === \"\" || descEdit === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n           return\r\n        }\r\n        \r\n        this.setState({\r\n            materie: null,\r\n            showEditModal: false\r\n        })\r\n\r\n        Axios.put(siteUrl+\"/api/materie/\"+materiaEdit.idMateria, {\r\n            idMateria: materiaEdit.idMateria,\r\n            nome: nomeEdit.trim(),\r\n            descrizione: descEdit.trim()\r\n        }).then(response => {\r\n            let materie = response.data as IMateria[]\r\n\r\n            this.setState({\r\n                materie: materie,\r\n                materiaEdit: null,\r\n                nomeEdit: \"\",\r\n                descEdit: \"\"\r\n            })\r\n\r\n            message.success(\"Materia modificata con successo!\")\r\n        })\r\n\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nomeMateria: nome\r\n        })\r\n    }\r\n\r\n    changeNomeEdit = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nomeEdit: nome\r\n        })\r\n    }\r\n\r\n    changeDesc = (event: any) => {\r\n        let desc = event.target.value\r\n\r\n        this.setState({\r\n            descMateria: desc\r\n        })\r\n    }\r\n\r\n    changeDescEdit = (event: any) => {\r\n        let desc = event.target.value\r\n\r\n        this.setState({\r\n            descEdit: desc\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { materie, nomeMateria, showModal, showEditModal, materiaEdit, nomeEdit, descMateria, descEdit } = this.state\r\n        \r\n        if(!materie){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Lista delle materie</h3>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={this.showHideModal}>\r\n                <i className=\"fal fa-plus\"></i> Aggiungi materia\r\n            </button>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                \r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th>Descrizione</th>\r\n                            <th style={{width: \"10%\"}}>Azioni</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            materie.map(m => {        \r\n                                return <tr>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{m.nome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{m.descrizione}</td>\r\n                                    <td>\r\n                                        <Tooltip title=\"Modifica\">\r\n                                            <button type=\"button\" className=\"btn btn-warning text-white circle-btn\" onClick={() => this.showEditModal(m)}>\r\n                                                <i className=\"fa fa-pen\"></i>\r\n                                            </button>\r\n                                        </Tooltip>\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n\r\n            <Modal title=\"Aggiungi una materia\" visible={showModal} footer={[\r\n                <Button type=\"primary\" onClick={this.aggiungiMateria}>Aggiungi</Button>,\r\n                <Button type=\"default\" onClick={this.showHideModal}>Annulla</Button>\r\n            ]} onCancel={this.showHideModal}>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Nome della materia</label>\r\n                        <input type=\"text\" value={nomeMateria} onChange={this.changeNome} className=\"form-control\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Descrizione della materia</label>\r\n                        <input type=\"text\" value={descMateria} onChange={this.changeDesc} className=\"form-control\" />\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n\r\n            {\r\n                materiaEdit && <Modal title=\"Modifica di una materia\" visible={showEditModal} footer={[\r\n                    <Button type=\"primary\" onClick={this.modificaMateria}>Modifica</Button>,\r\n                    <Button type=\"default\" onClick={this.hideEditModal}>Annulla</Button>\r\n                ]} onCancel={this.hideEditModal}>\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-secondary\">Nome della materia</label>\r\n                            <input type=\"text\" value={nomeEdit} onChange={this.changeNomeEdit} className=\"form-control\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-secondary\">Descrizione della materia</label>\r\n                            <input type=\"text\" value={descEdit} onChange={this.changeDescEdit} className=\"form-control\" />\r\n                        </div>\r\n                    </form>\r\n                </Modal>\r\n            }\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Tooltip } from \"antd\"\r\n\r\nexport interface IProps{\r\n    readonly src: string\r\n    readonly width?: number | string\r\n    readonly height?: number | string\r\n    readonly scalable?: boolean\r\n    readonly style?: React.CSSProperties\r\n}\r\nexport interface IState{\r\n    readonly scaled: boolean\r\n    readonly coords: number[]\r\n}\r\n\r\nexport default class ImageScale extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            scaled: false,\r\n            coords: [0, 0]\r\n        }\r\n    }\r\n\r\n    scaleImage = () => {\r\n        if(!this.props.scalable) return\r\n\r\n        this.setState({\r\n            scaled: !this.state.scaled\r\n        })\r\n        \r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { src, width, height, scalable, style } = this.props\r\n        const { scaled } = this.state\r\n        let firstclass = scalable ? \"scalable \" : \"\",\r\n        classname = scaled ? \"scaled\" : \"\",\r\n        title = scalable ? \"Cliccare per \" + (scaled ? \"rimpicciolire\" : \"ingrandire\") : null\r\n\r\n        return <Tooltip title={title}>\r\n            <img alt=\"scale\" style={style} className={\"imagescale \"+firstclass+classname} src={src} width={width} height={height} onClick={this.scaleImage} />\r\n        </Tooltip>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, message } from \"antd\"\r\n\r\nexport interface IProps{\r\n    readonly anno: number\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly calendarId: string\r\n    readonly apiKey: string\r\n}\r\n\r\nexport default class ConfigForm extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            calendarId: \"\",\r\n            apiKey: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        /******************************************************/\r\n        /* CARICARE LA CONFIGURAZIONE CORRENTE DEL CALENDARIO */\r\n        /* di this.props.corso e this.props.anno              */\r\n        /******************************************************/\r\n    }\r\n\r\n    changeID = (e: any) => {\r\n        let calendarId = e.target.value\r\n\r\n        this.setState({\r\n            calendarId: calendarId\r\n        })\r\n    }\r\n\r\n    changeKey = (e: any) => {\r\n        let apiKey = e.target.value\r\n\r\n        this.setState({\r\n            apiKey: apiKey\r\n        })\r\n    }\r\n\r\n    saveConfig = () => {\r\n        const { corso, anno } = this.props\r\n        const { calendarId, apiKey } = this.state\r\n\r\n        if(calendarId === \"\" || apiKey === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        // SALVARE LA CONFIGURAZIONE this.props.corso e this.props.anno\r\n        \r\n        message.success(\"Configurazione calendario salvata!\")\r\n    }\r\n    render(): JSX.Element{\r\n        const { calendarId, apiKey } = this.state\r\n\r\n        // SE IL CALENDARIO NON È CARICATO SPIN\r\n\r\n        return <form>\r\n            <div className=\"form-group row\">\r\n                <div className=\"col\">\r\n                    <label className=\"text-secondary\">ID Calendario</label>\r\n                    <input name=\"calendarID\" type=\"text\" className=\"form-control\" value={calendarId} onChange={this.changeID} />\r\n                </div>\r\n                <div className=\"col\">\r\n                    <label className=\"text-secondary\">Chiave API</label>\r\n                    <input name=\"apiKey\" type=\"text\" className=\"form-control\" value={apiKey} onChange={this.changeKey} />\r\n                </div>\r\n            </div>\r\n\r\n            <button type=\"button\" className=\"btn btn-success float-right mr-1 mb-1\" onClick={this.saveConfig}>Salva configurazione</button>\r\n        </form>\r\n    }\r\n}","import React from \"react\"\r\nimport { Icon, Modal, Tooltip, Tabs } from \"antd\"\r\nimport ImageScale from \"../ImageScale\"\r\nimport ConfigForm from \"./ConfigForm\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{}\r\n\r\nexport default class ConfigCalendar extends React.PureComponent<IProps, IState>{\r\n    showHelp = () => {\r\n        Modal.info({\r\n            width: 700,\r\n            style: { top: 24 },\r\n            centered: false,\r\n            maskClosable: true,\r\n            icon: <Icon type=\"question-circle\" style={{ marginTop: 6, fontSize: 28, color: \"orange\" }} />,\r\n            okText: \"Ho capito\",\r\n            content: <div className=\"text-justify\">\r\n                <strong>Dove mi trovo?</strong>\r\n                <p>In questa pagina potrai configurare il calendario dal quale verranno caricate le lezioni del corso.</p>\r\n                <strong>Come si configura il calendario?</strong>\r\n                <p>Per configurare il calendario avrai bisogno di due codici univoci, che ti permetteranno di collegare il calendario al sito.</p>\r\n                <strong>API Key</strong>\r\n                <p>Per trovare la chiave API, bisognerà recarsi a <a href=\"https://developers.google.com/calendar/quickstart/js?hl=it\" target=\"_blank\" rel=\"noopener noreferrer\">questo <i className=\"far fa-external-link\"></i></a> indirizzo ed effettuare il login con un qualsiasi account Google. Scendere in basso e cliccare sul bottone <strong>Create API Key</strong> (Crea chiave API), ed attendere il caricamento. Apparirà a schermo una finestra contentente la chiave: basterà copiare il codice ed inserirlo in questa pagina di configurazione.\r\n                <u className=\"d-block\">Ricordare che l'API Key può essere la stessa per entrambi i calendari (primo e secondo anno).</u>\r\n                </p>\r\n                <strong>ID del calendario</strong>\r\n                <p>Per trovare l'ID (identificativo) del calendario, basterà effettuare l'accesso su <a href=\"https://calendar.google.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Google Calendar <i className=\"far fa-external-link\"></i></a> con un account che abbia integrato il calendario del corso. Bisognerà poi premere sul simbolo <i className=\"far fa-cog\"></i> in alto a destra e successivamente su <strong>Impostazioni</strong> nel menu che comparirà. Scorrere quindi la lista a sinistra della pagina, e cliccare sul calendario che si desidera integrare. Recarsi sotto la voce <strong>Integra calendario</strong> e copiare (subito in basso) il codice identificativo del calendario (<strong>ID calendario</strong>), per poi incollarlo in questa pagina di configurazione.</p>\r\n                <strong className=\"d-block mb-2\">Galleria immagini</strong>\r\n                <ImageScale src=\"https://i.imgur.com/u1qM1oD.png\" width={143} />\r\n                <ImageScale src=\"https://i.imgur.com/g0IjAtJ.png\" scalable={true} height={100} />\r\n                <ImageScale src=\"https://i.imgur.com/e3H0hXX.png\" height={100} scalable={true} />\r\n            </div>\r\n        })\r\n\r\n        setTimeout(() => document.getElementsByClassName(\"ant-modal-wrap\")[0].scrollTo(0, 0), 100)\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { TabPane } = Tabs\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">\r\n                Configurazione calendario\r\n                <Tooltip title=\"Informazioni\">\r\n                    <button type=\"button\" className=\"btn btn-info circle-btn float-right\" onClick={this.showHelp}>\r\n                        <i className=\"fa fa-question\"></i>\r\n                    </button>\r\n                </Tooltip>\r\n                <div className=\"clearfix\"></div>\r\n            </h3>\r\n\r\n            <Tabs>\r\n                <TabPane tab=\"Primo anno\" key=\"1\">\r\n                    <ConfigForm anno={1} corso={this.props.corso} />\r\n                </TabPane>\r\n                <TabPane tab=\"Secondo anno\" key=\"2\">\r\n                    <ConfigForm anno={2} corso={this.props.corso} />\r\n                </TabPane>\r\n            </Tabs>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { routerHistory } from \"..\"\r\n\r\nexport interface IProps{\r\n    readonly goTo: string\r\n}\r\nexport interface IState{}\r\n\r\nexport default class Page404 extends React.PureComponent<IProps, IState>{\r\n    render(): JSX.Element{\r\n        return <div id=\"mainBlock\" className=\"col\">\r\n            <div className=\"text-center text-grey w-100\">\r\n                <i className=\"fal fa-exclamation-triangle mb-2\" style={{ fontSize: 150}}></i>\r\n                <h1 className=\"mb-2 text-grey font-weight-normal\">Errore 404</h1>\r\n                <p style={{ fontSize: 20 }}>La pagina che stati cercando non esiste.</p>\r\n                <button onClick={() => routerHistory.push(this.props.goTo)} type=\"button\" className=\"btn btn-blue btn-lg text-uppercase\">\r\n                    <i className=\"fa fa-shield-check fa-lg fa-fw mr-2\"></i>\r\n                    Torna al sicuro\r\n                </button>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"../..\"\r\nimport LoginTutor from \"./LoginTutor\"\r\nimport StudentsList from \"./StudentsList\"\r\nimport AddNewStudent from \"./AddNewStudent\"\r\nimport StudentDetails from \"./StudentDetails\"\r\nimport DocentiList from \"./DocentiList\"\r\nimport AddNewDocente from \"./AddNewDocente\"\r\nimport DocenteDetails from \"./DocenteDetails\"\r\nimport EditDocente from \"./EditDocente\"\r\nimport EditStudente from \"./EditStudente\"\r\nimport StudentsImport from \"./StudentsImport\"\r\nimport MaterieList from \"./MaterieList\"\r\nimport ConfigCalendar from \"./ConfigCalendar\"\r\nimport { IAdmin } from \"../../models/IAdmin\"\r\nimport LogoCorso from \"../LogoCorso\"\r\nimport Page404 from \"../Page404\"\r\nimport { adminRoute } from \"../../utilities\"\r\n\r\nexport default class Dashboard extends React.Component{\r\n\r\n    componentWillUnmount = () => {\r\n        sessionStorage.removeItem(\"adminSession\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n\r\n        let session = sessionStorage.getItem(\"adminSession\")\r\n        \r\n        if(!session)\r\n            return <LoginTutor />\r\n\r\n        let admin = JSON.parse(session) as IAdmin\r\n\r\n        return <div className=\"container-fluid\">\r\n            <Router history={routerHistory}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3 bg-blue p-0 menu\">\r\n                        \r\n                        <LogoCorso idCorso={admin.idCorso} />\r\n\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/studenti\")} to={adminRoute+\"/studenti\"}>\r\n                            <span>Studenti</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/docenti\")} to={adminRoute+\"/docenti\"}>\r\n                            <span>Docenti</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/materie\")} to={adminRoute+\"/materie\"}>\r\n                            <span>Materie</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/config\")} to={adminRoute+\"/config\"}>\r\n                            <span>Configura calendario</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => {\r\n                            sessionStorage.removeItem(\"adminSession\")\r\n                            routerHistory.push(adminRoute)\r\n                        }} exact to={adminRoute+\"/login\"}>\r\n                            <span>Esci</span>\r\n                        </NavLink>\r\n                    </div>\r\n  \r\n                    <Switch>\r\n                        <Route exact path={adminRoute} render={() => {\r\n                            routerHistory.push(adminRoute+\"/studenti\")\r\n\r\n                            return null\r\n                        }} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti\"} render={() => (\r\n                            <StudentsList corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti/new\"} render={() => (\r\n                            <AddNewStudent corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti/import\"} render={() => (\r\n                            <StudentsImport corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti/:id\"} render={(routeProps) => (\r\n                            <StudentDetails {...routeProps} corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti/edit/:id\"} render={(routeProps) => (\r\n                            <EditStudente {...routeProps} corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/docenti\"} render={() => (\r\n                            <DocentiList corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/docenti/new\"} render={() => (\r\n                            <AddNewDocente corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/docenti/:id\"} render={(routeProps) => (\r\n                            <DocenteDetails {...routeProps} corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/docenti/edit/:id\"} render={(routeProps) => (\r\n                            <EditDocente {...routeProps} corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/materie\"} render={() => (\r\n                            <MaterieList corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/config\"} render={() => (\r\n                            <ConfigCalendar corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route render={() => <Page404 goTo={adminRoute} />} />\r\n\r\n                    </Switch>\r\n                        \r\n                </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport { Spin, Icon } from \"antd\"\r\nimport QRCode from \"qrcode.react\"\r\nimport Axios from \"axios\"\r\n\r\nexport interface IProps{\r\n    studentId: number\r\n}\r\nexport interface IState{\r\n    readonly code: string\r\n}\r\n\r\nexport default class QRCodeScreen extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            code: null\r\n        }\r\n\r\n        this.reloadCode()\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        setInterval(() => {\r\n            this.setState({\r\n                code: null\r\n            })\r\n\r\n            this.reloadCode()\r\n        }, 20000)\r\n    }\r\n\r\n    reloadCode = () => {\r\n        Axios.get(\"http://mygraphic.altervista.org/reg/api?codice&studente=\"+this.props.studentId).then((response) => {\r\n            this.setState({\r\n                code: response.data\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { code } = this.state\r\n\r\n        if(!code){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div>\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"text-center\">\r\n            <h5 className=\"mb-4 font-weight-normal text-black underline\">Scannerizza questo codice</h5>\r\n            <QRCode value={code} size={200} />\r\n        </div>\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport FullCalendar from \"@fullcalendar/react\"\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\"\r\nimport { Digits2 } from \"../../utilities\"\r\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\"\r\nimport { Modal, Icon, Spin } from \"antd\"\r\nimport { ICalendar } from \"../../models/ICalendar\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\n\r\nimport \"@fullcalendar/core/main.css\"\r\nimport \"@fullcalendar/timegrid/main.css\"\r\n\r\nexport interface IProps{\r\n    readonly student: IStudent\r\n}\r\nexport interface IState{\r\n    readonly calendar: ICalendar\r\n}\r\n\r\nexport default class UserCalendar extends React.PureComponent<IProps, IState> {\r\n    constructor(props: IProps){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            calendar: {\r\n                calendarId: \"ckhj7iqj3msae4i4ietm5ip1cg@group.calendar.google.com\",\r\n                apiKey: \"AIzaSyCEEaAbHOYhofQs-iLdHd_J8-KyD_IlRbE\"\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        /*************************************/\r\n        /* CARICAMENTO CALENDARIO IN BASE A  */\r\n        /* this.props.student.idCorso        */\r\n        /* this.props.student.annoFrequentazione */\r\n        /*************************************/\r\n    }\r\n    \r\n    render(): JSX.Element{\r\n        const { calendar } = this.state\r\n    \r\n        if(!calendar){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n        \r\n        return <div>\r\n            <h5 className=\"text-center text-black w-100\">Calendario del mese</h5>\r\n            <FullCalendar\r\n            plugins={[ googleCalendarPlugin, dayGridPlugin ]}\r\n            events={ { googleCalendarId: calendar.calendarId} }\r\n            googleCalendarApiKey={calendar.apiKey}\r\n            defaultView=\"dayGridMonth\"\r\n            fixedWeekCount={false}\r\n            header={false}\r\n            firstDay={1}\r\n            themeSystem={\"bootstrap\"}\r\n            eventTimeFormat={{\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n                meridiem: false\r\n            }}\r\n            locale={\"it\"}\r\n            eventClick={\r\n                function(info){\r\n                    info.jsEvent.preventDefault()\r\n                    let event = info.event\r\n                    \r\n                    Modal.info({\r\n                        maskClosable: true,\r\n                        centered: true,\r\n                        icon: null,\r\n                        title: event.title,\r\n                        content: <div className=\"mt-3\" style={{ fontSize: 20 }}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3 pr-0\">\r\n                                    <span className=\"label\">Inizio</span>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <span className=\"desc\">\r\n                                        { Digits2(event.start.getHours()) }:{ Digits2(event.start.getMinutes()) }\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3 pr-0\">\r\n                                    <span className=\"label\">Fine</span>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <span className=\"desc\">\r\n                                        { Digits2(event.end.getHours()) }:{ Digits2(event.end.getMinutes()) }\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            {  \r\n                                event.extendedProps.location && <div className=\"row\">\r\n                                    <div className=\"col-3 pr-0\">\r\n                                        <span className=\"label\">Luogo</span>\r\n                                    </div>\r\n                                    <div className=\"col\" style={{ fontSize: 15 }}>\r\n                                        {event.extendedProps.location}\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    })\r\n                }\r\n            } />\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"../..\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport QRCodeScreen from \"./QRCodeScreen\"\r\nimport UserCalendar from \"./UserCalendar\"\r\n\r\nexport default class UserApplication extends React.Component{\r\n\r\n    componentDidMount = () => {\r\n        localStorage.setItem(\"student\", JSON.stringify({\r\n            idStudente: 1,\r\n            idCorso: 1,\r\n            nome: \"Leonardo\",\r\n            cognome: \"Grandolfo\",\r\n            annoFrequentazione: 1,\r\n            cf: \"GRNLRD99D17L219L\",\r\n            dataNascita: \"17-04-1999\",\r\n            code: \"CIAO-GGG\"\r\n        }))\r\n    }\r\n    \r\n    render(): JSX.Element{\r\n        let session = localStorage.getItem(\"student\")\r\n        \r\n        // if(!session)\r\n        //     return <AppLogin />\r\n\r\n        let student = JSON.parse(session) as IStudent\r\n\r\n        return <div className=\"container-fluid px-0\">\r\n            <Router history={routerHistory}>\r\n                    <div className=\"main-screen overflow-auto\" id=\"mainBlock\">\r\n                        <Switch>\r\n                            <Route exact path=\"/userprofile\" render={() => {\r\n                                routerHistory.push(\"/userprofile/qrcode\")\r\n\r\n                                return null\r\n                            }} />\r\n\r\n                            <Route exact path=\"/userprofile/qrcode\" render={() => (\r\n                                <QRCodeScreen studentId={student.idStudente} />\r\n                            )} />\r\n\r\n                            <Route exact path=\"/userprofile/calendar\" render={() => (\r\n                                <UserCalendar student={student} />\r\n                            )} />\r\n\r\n                        </Switch>\r\n                    </div>\r\n\r\n                    <div className=\"bottom-menu\">\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/userprofile/presenze\")} to=\"/userprofile/presenze\">\r\n                            <span>\r\n                                <i className=\"far fa-exclamation-circle fa-fw fa-2x mb-2\"></i>\r\n                                Presenze\r\n                            </span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/userprofile/voti\")} to=\"/userprofile/voti\">\r\n                            <span>\r\n                                <i className=\"fa fa-stars fa-fw fa-2x mb-2\"></i>\r\n                                Voti\r\n                            </span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/userprofile/qrcode\")} to=\"/userprofile/qrcode\">\r\n                            <span>\r\n                                <i className=\"fal fa-qrcode fa-fw fa-2x mb-2\"></i>\r\n                                Codice QR\r\n                            </span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/userprofile/calendar\")} to=\"/userprofile/calendar\">\r\n                            <span>\r\n                                <i className=\"fal fa-calendar fa-fw fa-2x mb-2\"></i>\r\n                                Lezioni\r\n                            </span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/userprofile/account\")} to=\"/userprofile/account\">\r\n                            <span>\r\n                                <i className=\"far fa-user fa-fw fa-2x mb-2\"></i>\r\n                                Profilo\r\n                            </span>\r\n                        </NavLink>\r\n                    </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { routerHistory } from \"../..\"\r\nimport { message, Modal } from \"antd\"\r\nimport { mountLogin, unmountLogin, siteUrl, logoUrl } from \"../../utilities\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\nimport Axios from \"axios\"\r\nimport { isAdminDocente } from \"../../models/IAdminDocente\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly adminName: string\r\n    readonly adminPsw: string\r\n}\r\n\r\nexport default class LoginDocenti extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            adminName: \"\",\r\n            adminPsw: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    changeInputName = (event: any) => {\r\n        let name = event.target.value\r\n\r\n        this.setState({\r\n            adminName: name\r\n        })\r\n    }\r\n\r\n    changeInputPassword = (event: any) => {\r\n        let psw = event.target.value\r\n\r\n        this.setState({\r\n            adminPsw: psw\r\n        })\r\n    }\r\n\r\n    tryLogin = (e: any) => {\r\n        e.preventDefault()\r\n        \r\n        const { adminName, adminPsw } = this.state\r\n        let cipher = new Cipher(),\r\n        password = cipher.encode(adminPsw)\r\n\r\n        Axios.post(siteUrl+\"/api/logindocente\", {\r\n            username: adminName.trim(),\r\n            password: password\r\n        }).then(response => {\r\n            let data = response.data\r\n\r\n            if(isAdminDocente(data)){\r\n                sessionStorage.setItem(\"docenteSession\", JSON.stringify(data))\r\n                routerHistory.push(\"/docentipanel/\")\r\n                message.success(\"Login effettuato con successo!\")\r\n            }\r\n            else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Username o Password errati!\"\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { adminName, adminPsw } = this.state\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.tryLogin}>\r\n                <h3 className=\"d-inline-block\">Accesso docenti</h3>\r\n                <img src={logoUrl} height=\"40\" className=\"float-right logo\" alt=\"logo\" />\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Utente di accesso</label>\r\n                    <input name=\"username\" type=\"text\" className=\"form-control\" value={adminName} onChange={this.changeInputName} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Password di accesso</label>\r\n                    <input name=\"password\" type=\"password\" className=\"form-control\" value={adminPsw} onChange={this.changeInputPassword} />\r\n                </div>\r\n\r\n                <input type=\"submit\" value=\"Accedi\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n            </form>\r\n        </div>\r\n    }\r\n\r\n}","export interface IAdminDocente{\r\n    readonly idDocente: number\r\n    readonly nome: string\r\n    readonly cognome: string\r\n}\r\nexport const isAdminDocente = (obj: any) => {\r\n    try{\r\n        return \"idDocente\" in obj && \"nome\" in obj && \"cognome\" in obj\r\n    }catch{\r\n        return false\r\n    }\r\n}","import React from \"react\"\r\nimport { ILezione } from \"../../models/ILezione\"\r\nimport { Icon, Spin, Tooltip } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, formatItalian } from \"../../utilities\"\r\n\r\nexport interface IProps{\r\n    readonly idDocente: number\r\n}\r\nexport interface IState{\r\n    readonly lezioni: ILezione[]\r\n}\r\n\r\nexport default class LezioniDocente extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            lezioni: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { idDocente } = this.props\r\n\r\n        //LEZIONI VANNO PRESE TUTTE QUELLE TENUTE E DIVISE IN BASE AI CORSI\r\n\r\n        Axios.get(siteUrl+\"/api/lezioni/\"+idDocente).then(response => {\r\n            let lezioni = response.data as ILezione[]\r\n\r\n            this.setState({\r\n                lezioni: lezioni\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { lezioni } = this.state\r\n        \r\n        if(!lezioni){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Lezioni tenute</h3>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                \r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Data</th>\r\n                            <th>Orario inizio</th>\r\n                            <th>Orario fine</th>\r\n                            <th style={{width: \"20%\"}}>Azioni</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            lezioni.map(l => {        \r\n                                return <tr>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{formatItalian(l.data)}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{l.inizio}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{l.fine}</td>\r\n                                    <td>\r\n                                        <Tooltip title=\"Dettagli\">\r\n                                            <button type=\"button\" className=\"btn btn-info circle-btn\" onClick={() => routerHistory.push(\"/docentipanel/lezioni/\" + l.idLezione)}>\r\n                                                <i className=\"fa fa-info\"></i>\r\n                                            </button>\r\n                                        </Tooltip>\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { ILezione } from \"../../models/ILezione\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl } from \"../../utilities\"\r\nimport { Icon, Spin } from \"antd\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{}\r\nexport interface IState{\r\n    readonly lezione: ILezione\r\n    readonly studenti: IStudent[]\r\n}\r\n\r\nexport default class LezioneDetails extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            lezione: null,\r\n            studenti: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/lezioni/\"+this.props.match.params.id).then(response => {\r\n            let lezione = response.data as ILezione\r\n\r\n            this.setState({\r\n                lezione: lezione\r\n            })\r\n\r\n            Axios.get(siteUrl+\"/api/studenti/\"+lezione.idCorso).then(response => {\r\n                let studenti = response.data as IStudent[]\r\n    \r\n                this.setState({\r\n                    studenti: studenti\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { lezione, studenti } = this.state\r\n\r\n        if(!lezione || !studenti){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Lezione del {lezione.data}</h3>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                \r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th>Cognome</th>\r\n                            <th>Presenza</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            studenti.map(s => {      \r\n                                let find = lezione.frequentata.find(stu => stu.idStudente === s.idStudente),\r\n                                presente = find ? \"Presente\" : \"Assente\",\r\n                                color = find ? \"success\" : \"danger\"\r\n                                  \r\n                                return <tr>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{s.nome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cognome}</td>\r\n                                    <td style={{maxWidth: 0}} className={\"text-truncate text-white bg-\"+color}>{presente}</td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"../..\"\r\nimport LoginDocenti from \"./LoginDocenti\"\r\nimport LezioniDocente from \"./LezioniDocente\"\r\nimport LezioneDetails from \"./LezioneDetails\"\r\nimport { IAdminDocente } from \"../../models/IAdminDocente\"\r\nimport LogoCorso from \"../LogoCorso\"\r\nimport Page404 from \"../Page404\"\r\nimport { docentiRoute } from \"../../utilities\"\r\n\r\nexport default class DocentiDashboard extends React.Component{\r\n\r\n    componentWillUnmount = () => {\r\n        sessionStorage.removeItem(\"docenteSession\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n\r\n        let session = sessionStorage.getItem(\"docenteSession\")\r\n        \r\n        if(!session)\r\n            return <LoginDocenti />\r\n\r\n        let admin = JSON.parse(session) as IAdminDocente\r\n\r\n        return <div className=\"container-fluid\">\r\n            <Router history={routerHistory}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3 bg-blue p-0 menu\">\r\n                        \r\n                        <LogoCorso />\r\n\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/docentipanel/lezioni\")} to=\"/docentipanel/lezioni\">\r\n                            <span>Lezioni tenute</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => {\r\n                            sessionStorage.removeItem(\"docenteSession\")\r\n                            routerHistory.push(\"/docentipanel\")\r\n                        }} exact to=\"/docentipanel/login\">\r\n                            <span>Esci</span>\r\n                        </NavLink>\r\n                    </div>\r\n\r\n                    <Switch>\r\n                        <Route exact path=\"/docentipanel/\" render={() => {\r\n                            routerHistory.push(\"/docentipanel/lezioni\")\r\n\r\n                            return null\r\n                        }} />\r\n\r\n                        <Route exact path=\"/docentipanel/lezioni/:id\" render={(routeProps) => (\r\n                            <LezioneDetails {...routeProps} />\r\n                        )} />\r\n\r\n                        <Route exact path=\"/docentipanel/lezioni\" render={() => \r\n                            <LezioniDocente idDocente={admin.idDocente}/>\r\n                        } />\r\n\r\n                        <Route render={() => <Page404 goTo={docentiRoute} />} />\r\n\r\n                    </Switch>\r\n                        \r\n                </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, superAdminRoute } from \"../../utilities\"\r\nimport { Icon, Spin, Tooltip } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly corsi: ICorso[]\r\n}\r\n\r\nexport default class CorsiList extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            corsi: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                corsi: corsi\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { corsi } = this.state\r\n        \r\n        if(!corsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Lista dei corsi</h3>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={() => routerHistory.push(superAdminRoute+\"/corsi/new\")}>\r\n                <i className=\"fal fa-plus\"></i> Aggiungi corso\r\n            </button>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                \r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th>Descrizione</th>\r\n                            <th>Luogo</th>\r\n                            <th style={{width: \"10%\"}}>Azioni</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            corsi.map(c => {        \r\n                                return <tr>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{c.nome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{c.descrizione}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{c.luogo}</td>\r\n                                    <td>\r\n                                        <Tooltip title=\"Modifica\">\r\n                                            <button type=\"button\" className=\"btn btn-warning text-white circle-btn\" onClick={() => routerHistory.push(superAdminRoute+\"/corsi/edit/\" + c.idCorso)}>\r\n                                                <i className=\"fa fa-pen\"></i>\r\n                                            </button>\r\n                                        </Tooltip>\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Upload, Icon, message } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { imageFileToBase64, superAdminRoute } from \"../../utilities\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly descrizione: string\r\n    readonly luogo: string\r\n    readonly logo: string\r\n}\r\n\r\nexport default class AddNewCorso extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            descrizione: \"\",\r\n            luogo: \"\",\r\n            logo: null\r\n        }\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeDesc = (event: any) => {\r\n        let desc = event.target.value\r\n\r\n        this.setState({\r\n            descrizione: desc\r\n        })\r\n    }\r\n\r\n    changeLuogo = (event: any) => {\r\n        let luogo = event.target.value\r\n\r\n        this.setState({\r\n            luogo: luogo\r\n        })\r\n    }\r\n\r\n    aggiungiCorso = () => {\r\n        const { nome, descrizione, luogo, logo } = this.state\r\n\r\n        if(nome === \"\" || descrizione === \"\" || luogo === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        // TRIM DATI\r\n\r\n        /*************************************************/\r\n        /* CREAZIONE NUOVO CORSO E POI MOSTRARE MODAL    */\r\n        /*************************************************/\r\n\r\n        message.success(\"Corso creato con successo!\")\r\n        routerHistory.push(superAdminRoute+\"/corsi\")\r\n\r\n    }\r\n\r\n    convertImage = (file: any) => {\r\n        imageFileToBase64(file).then(result => {\r\n            this.setState({\r\n                logo: String(result)\r\n            })\r\n        })\r\n\r\n        return false\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, descrizione, luogo, logo } = this.state,\r\n        uploadButton = (\r\n            <div>\r\n                <Icon type=\"plus\" style={{ fontSize: 30, marginBottom: 5 }} />\r\n                <div className=\"ant-upload-text\">Carica immagine</div>\r\n            </div>\r\n        )\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Aggiungi un nuovo corso</h3>\r\n\r\n            <form className=\"row\">\r\n\r\n                <div className=\"form-group mr-3\">\r\n                    <label className=\"text-secondary d-block\">Logo</label>\r\n                    <Upload listType=\"picture-card\" showUploadList={false} beforeUpload={(file) => this.convertImage(file)} className=\"logo-upload\" accept=\"image/*\">\r\n                        {logo ? <img src={logo} alt=\"logo\" style={{ width: \"100%\" }} /> : uploadButton}\r\n                    </Upload>\r\n                </div>\r\n                \r\n                <div className=\"col\">\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col\">\r\n                            <label className=\"text-secondary\">Nome</label>\r\n                            <input name=\"nomecorso\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                        </div>\r\n                        <div className=\"col pr-0\">\r\n                            <label className=\"text-secondary\">Luogo</label>\r\n                            <input name=\"luogo\" type=\"text\" className=\"form-control\" value={luogo} onChange={this.changeLuogo} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col pr-0\">\r\n                            <label className=\"text-secondary\">Breve descrizione</label>\r\n                            <textarea name=\"description\" className=\"form-control\" rows={2} onChange={this.changeDesc}>{descrizione}</textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.aggiungiCorso}>Aggiungi corso</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { routerHistory } from \"../..\"\r\nimport { message, Modal } from \"antd\"\r\nimport { mountLogin, unmountLogin, siteUrl, logoUrl, superAdminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\nimport { isSuperAdmin } from \"../../models/IAdmin\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly adminName: string\r\n    readonly adminPsw: string\r\n}\r\n\r\nexport default class LoginAdmin extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            adminName: \"\",\r\n            adminPsw: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    changeInputName = (event: any) => {\r\n        let name = event.target.value\r\n\r\n        this.setState({\r\n            adminName: name\r\n        })\r\n    }\r\n\r\n    changeInputPassword = (event: any) => {\r\n        let psw = event.target.value\r\n\r\n        this.setState({\r\n            adminPsw: psw\r\n        })\r\n    }\r\n\r\n    tryLogin = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { adminName, adminPsw } = this.state\r\n        let cipher = new Cipher(),\r\n        password = cipher.encode(adminPsw)\r\n\r\n        Axios.post(siteUrl+\"/api/amministratori/loginamministratore\", {\r\n            username: adminName.trim(),\r\n            password: password\r\n        }).then(response => {\r\n            let data = response.data\r\n\r\n            if(isSuperAdmin(data)){\r\n                sessionStorage.setItem(\"superSession\", JSON.stringify(data))\r\n                routerHistory.push(superAdminRoute)\r\n                message.success(\"Login effettuato con successo!\")\r\n            }\r\n            else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Username o Password errati!\",\r\n                    centered: true,\r\n                    maskClosable: true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { adminName, adminPsw } = this.state\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.tryLogin}>\r\n                <h3 className=\"d-inline-block\">Accesso amministratori</h3>\r\n                <img src={logoUrl} height=\"40\" className=\"float-right logo\" alt=\"logo\" />\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Utente di accesso</label>\r\n                    <input name=\"username\" type=\"text\" className=\"form-control\" value={adminName} onChange={this.changeInputName} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Password di accesso</label>\r\n                    <input name=\"password\" type=\"password\" className=\"form-control\" value={adminPsw} onChange={this.changeInputPassword} />\r\n                </div>\r\n\r\n                <input type=\"submit\" value=\"Accedi\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n            </form>\r\n        </div>\r\n    }\r\n\r\n}","import React from \"react\"\r\nimport { Modal, Icon, Spin, Upload, message } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, imageFileToBase64, superAdminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{}\r\nexport interface IState{\r\n    readonly corso: ICorso\r\n    readonly nome: string\r\n    readonly descrizione: string\r\n    readonly luogo: string\r\n    readonly logo: string\r\n}\r\n\r\nexport default class EditCorso extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            corso: null,\r\n            nome: \"\",\r\n            descrizione: \"\",\r\n            luogo: \"\",\r\n            logo: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(superAdminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/corsi/\" + id).then((response) => {\r\n            let corso = response.data as ICorso\r\n\r\n            this.setState({\r\n                corso: corso,\r\n                nome: corso.nome,\r\n                descrizione: corso.descrizione,\r\n                luogo: corso.luogo,\r\n                logo: corso.logo\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeDesc = (event: any) => {\r\n        let desc = event.target.value\r\n\r\n        this.setState({\r\n            descrizione: desc\r\n        })\r\n    }\r\n\r\n    changeLuogo = (event: any) => {\r\n        let luogo = event.target.value\r\n\r\n        this.setState({\r\n            luogo: luogo\r\n        })\r\n    }\r\n\r\n    modificaCorso = () => {\r\n        const { nome, descrizione, luogo } = this.state\r\n\r\n        if(nome === \"\" || descrizione === \"\" || luogo === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        // TRIM DATI\r\n        /***************************************/\r\n        /* MODIFICA CORSO E POI MOSTRARE MODAL */\r\n        /***************************************/\r\n\r\n        message.success(\"Corso modificato con successo!\")\r\n        routerHistory.push(superAdminRoute+\"/corsi\")\r\n\r\n    }\r\n\r\n    convertImage = (file: any) => {\r\n        imageFileToBase64(file).then(result => {\r\n            this.setState({\r\n                logo: String(result)\r\n            })\r\n        })\r\n\r\n        return false\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, descrizione, luogo, corso, logo } = this.state,\r\n        uploadButton = (\r\n            <div>\r\n                <Icon type=\"plus\" style={{ fontSize: 30, marginBottom: 5 }} />\r\n                <div className=\"ant-upload-text\">Carica immagine</div>\r\n            </div>\r\n        )\r\n\r\n        if(!corso){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Modifica di un corso</h3>\r\n\r\n            <form className=\"row\">\r\n                <div className=\"form-group mr-3\">\r\n                    <label className=\"text-secondary d-block\">Logo</label>\r\n                    <Upload listType=\"picture-card\" showUploadList={false} beforeUpload={(file) => this.convertImage(file)} className=\"logo-upload\" accept=\"image/*\">\r\n                        {logo ? <img src={logo} alt=\"logo\" style={{ width: \"100%\" }} /> : uploadButton}\r\n                    </Upload>\r\n                </div>\r\n\r\n                <div className=\"col\">\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col\">\r\n                            <label className=\"text-secondary\">Nome</label>\r\n                            <input name=\"nomecorso\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <label className=\"text-secondary\">Luogo</label>\r\n                            <input name=\"luogo\" type=\"text\" className=\"form-control\" value={luogo} onChange={this.changeLuogo} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col\">\r\n                            <label className=\"text-secondary\">Breve descrizione</label>\r\n                            <textarea name=\"description\" className=\"form-control\" rows={2} onChange={this.changeDesc}>{descrizione}</textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.modificaCorso}>Modifica corso</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, superAdminRoute } from \"../../utilities\"\r\nimport { Icon, Spin, Tooltip } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { ITutor } from \"../../models/ITutor\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly tutor: ITutor[]\r\n}\r\n\r\nexport default class TutorList extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            tutor: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/tutor\").then(response => {\r\n            let tutor = response.data as ITutor[]\r\n\r\n            this.setState({\r\n                tutor: tutor\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { tutor } = this.state\r\n        \r\n        if(!tutor){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Lista dei coordinatori</h3>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={() => routerHistory.push(superAdminRoute+\"/tutor/new\")}>\r\n                <i className=\"fal fa-plus\"></i> Aggiungi coordinatore\r\n            </button>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                \r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th>Cognome</th>\r\n                            <th style={{width: \"30%\"}}>Corso</th>\r\n                            <th style={{width: \"10%\"}}>Azioni</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            tutor.map(t => {        \r\n                                return <tr>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{t.nome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{t.cognome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{t.corso}</td>\r\n                                    <td>\r\n                                        <Tooltip title=\"Modifica\">\r\n                                            <button type=\"button\" className=\"btn btn-warning text-white circle-btn\" onClick={() => routerHistory.push(superAdminRoute+\"/tutor/edit/\" + t.idTutor)}>\r\n                                                <i className=\"fa fa-pen\"></i>\r\n                                            </button>\r\n                                        </Tooltip>\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Icon, message, Spin } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, superAdminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly cf: string\r\n    readonly listaCorsi: ICorso[]\r\n    readonly corso: number\r\n}\r\n\r\nexport default class AddNewTutor extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            cf: \"\",\r\n            listaCorsi: null,\r\n            corso: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                listaCorsi: corsi,\r\n                corso: corsi[0].idCorso\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let cf = event.target.value\r\n\r\n        this.setState({\r\n            cf: cf\r\n        })\r\n    }\r\n\r\n    changeCorso = (event: any) => {\r\n        let corso = parseInt(event.target.value)\r\n\r\n        this.setState({\r\n            corso: corso\r\n        })\r\n    }\r\n\r\n    isExistingCorso = (corso: number) => {\r\n        return this.state.listaCorsi.find(c => c.idCorso === corso)\r\n    }\r\n\r\n    aggiungiTutor = () => {\r\n        const { nome, cognome, cf, corso } = this.state\r\n\r\n        if(nome === \"\" || cognome === \"\" || cf === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(cf.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!this.isExistingCorso(corso)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Corso non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        // TRIM DATI\r\n\r\n        /*************************************************/\r\n        /* CREAZIONE NUOVO CORSO E POI MOSTRARE MODAL    */\r\n        /*************************************************/\r\n\r\n        message.success(\"Tutor creato con successo!\")\r\n        routerHistory.push(superAdminRoute+\"/tutor\")\r\n\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, cf, listaCorsi } = this.state\r\n\r\n        if(!listaCorsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Aggiungi un nuovo coordinatore</h3>\r\n\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={cf} onChange={this.changeCF} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Corso gestito</label>\r\n                        <select name=\"anno\" onChange={this.changeCorso} className=\"custom-select\">\r\n                            {\r\n                                listaCorsi.map(c => {\r\n                                    return <option value={c.idCorso}>{c.nome}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.aggiungiTutor}>Aggiungi coordinatore</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Icon, message, Spin } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, superAdminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { ITutor } from \"../../models/ITutor\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly cf: string\r\n    readonly listaCorsi: ICorso[]\r\n    readonly corso: number\r\n}\r\n\r\nexport default class EditTutor extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            cf: \"\",\r\n            listaCorsi: null,\r\n            corso: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(superAdminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/tutor/\"+id).then(response => {\r\n            let tutor = response.data as ITutor\r\n\r\n            this.setState({\r\n                nome: tutor.nome,\r\n                cognome: tutor.cognome,\r\n                cf: tutor.cf,\r\n                corso: tutor.idCorso\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                listaCorsi: corsi\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let cf = event.target.value\r\n\r\n        this.setState({\r\n            cf: cf\r\n        })\r\n    }\r\n\r\n    changeCorso = (event: any) => {\r\n        let corso = parseInt(event.target.value)\r\n\r\n        this.setState({\r\n            corso: corso\r\n        })\r\n    }\r\n\r\n    isExistingCorso = (corso: number) => {\r\n        return this.state.listaCorsi.find(c => c.idCorso === corso)\r\n    }\r\n\r\n    aggiungiTutor = () => {\r\n        const { nome, cognome, cf, corso } = this.state\r\n\r\n        if(nome === \"\" || cognome === \"\" || cf === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(cf.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!this.isExistingCorso(corso)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Corso non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        // TRIM DATI\r\n\r\n        /*************************************************/\r\n        /* CREAZIONE NUOVO CORSO E POI MOSTRARE MODAL    */\r\n        /*************************************************/\r\n\r\n        message.success(\"Tutor modificato con successo!\")\r\n        routerHistory.push(superAdminRoute+\"/tutor\")\r\n\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, cf, listaCorsi, corso } = this.state\r\n\r\n        if(!listaCorsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Modifica di un coordinatore</h3>\r\n\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={cf} onChange={this.changeCF} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Corso gestito</label>\r\n                        <select name=\"anno\" onChange={this.changeCorso} className=\"custom-select\">\r\n                            {\r\n                                listaCorsi.map(c => {\r\n                                    let selected = corso === c.idCorso\r\n\r\n                                    return <option value={c.idCorso} selected={selected}>{c.nome}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"button\" className=\"btn btn-success text-uppercase w-100\" onClick={this.aggiungiTutor}>Modifica coordinatore</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"../..\"\r\nimport LogoCorso from \"../LogoCorso\"\r\nimport Page404 from \"../Page404\"\r\nimport { superAdminRoute } from \"../../utilities\"\r\nimport CorsiList from \"./CorsiList\"\r\nimport AddNewCorso from \"./AddNewCorso\"\r\nimport LoginAdmin from \"./LoginAdmin\"\r\nimport EditCorso from \"./EditCorso\"\r\nimport TutorList from \"./TutorList\"\r\nimport AddNewTutor from \"./AddNewTutor\"\r\nimport EditTutor from \"./EditTutor\"\r\n\r\nexport default class SuperDashboard extends React.Component{\r\n\r\n    componentWillUnmount = () => {\r\n        sessionStorage.removeItem(\"superSession\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n\r\n        let session = sessionStorage.getItem(\"superSession\")\r\n        \r\n        if(!session)\r\n            return <LoginAdmin />\r\n\r\n        return <div className=\"container-fluid\">\r\n            <Router history={routerHistory}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3 bg-blue p-0 menu\">\r\n                        \r\n                        <LogoCorso idCorso={0} />\r\n\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(superAdminRoute+\"/studenti\")} to={superAdminRoute+\"/tutor\"}>\r\n                            <span>Coordinatori</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(superAdminRoute+\"/corsi\")} to={superAdminRoute+\"/corsi\"}>\r\n                            <span>Corsi</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => {\r\n                            sessionStorage.removeItem(\"superSession\")\r\n                            routerHistory.push(superAdminRoute)\r\n                        }} exact to={superAdminRoute+\"/login\"}>\r\n                            <span>Esci</span>\r\n                        </NavLink>\r\n                    </div>\r\n  \r\n                    <Switch>\r\n                        <Route exact path={superAdminRoute} render={() => {\r\n                            routerHistory.push(superAdminRoute+\"/tutor\")\r\n\r\n                            return null\r\n                        }} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/tutor\"} render={() => (\r\n                            <TutorList />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/tutor/new\"} render={() => (\r\n                            <AddNewTutor />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/tutor/edit/:id\"} render={(routeProps) => (\r\n                            <EditTutor {...routeProps} />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/corsi\"} render={() => (\r\n                            <CorsiList />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/corsi/new\"} render={() => (\r\n                            <AddNewCorso />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/corsi/edit/:id\"} render={(routeProps) => (\r\n                            <EditCorso {...routeProps} />\r\n                        )} />\r\n\r\n                        <Route render={() => <Page404 goTo={superAdminRoute} />} />\r\n\r\n                    </Switch>\r\n                        \r\n                </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { createHashHistory } from \"history\"\r\nimport \"./index.scss\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\nimport Main from \"./comp/Main\"\r\nimport { Router, Switch, Route } from \"react-router-dom\"\r\nimport Dashboard from \"./comp/admin/Dashboard\"\r\nimport UserApplication from \"./comp/mobile/UserApplication\"\r\nimport DocentiDashboard from \"./comp/docenti/DocentiDashboard\"\r\nimport Page404 from \"./comp/Page404\"\r\nimport moment from \"moment\"\r\nimport \"moment/locale/it\"\r\nimport SuperDashboard from \"./comp/superadmin/SuperDashboard\"\r\nimport { superAdminRoute, adminRoute, docentiRoute } from \"./utilities\"\r\n\r\nmoment.locale(\"it\")\r\n\r\nexport const routerHistory = createHashHistory()\r\n\r\nReactDOM.render(<Router history={routerHistory}>\r\n    <Switch>\r\n        <Route exact path=\"/\" render={() => {\r\n            routerHistory.push(\"/firme/\")\r\n\r\n            return null\r\n        }} />\r\n\r\n        <Route path=\"/firme/\" render={() => (\r\n            <Main />\r\n        )} />\r\n\r\n        <Route path={adminRoute} render={() => (\r\n            <Dashboard />\r\n        )} />\r\n\r\n        <Route path=\"/userprofile\" render={() => (\r\n            <UserApplication />\r\n        )} />\r\n\r\n        <Route path={docentiRoute} render={() => (\r\n            <DocentiDashboard />\r\n        )} />\r\n\r\n        <Route path={superAdminRoute} render={() => (\r\n            <SuperDashboard />\r\n        )} />\r\n\r\n        <Route render={() => <Page404 goTo=\"/\" />} />\r\n    </Switch>\r\n</Router>, document.getElementById(\"root\"))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}