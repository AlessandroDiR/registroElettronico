{"version":3,"sources":["utilities.ts","serviceWorker.ts","models/IMessage.ts","comp/Firma.tsx","comp/Calendario.tsx","comp/LessonsCalendar.tsx","comp/Footer.tsx","comp/SceltaCorso.tsx","comp/SceltaClasse.tsx","comp/LogoCorso.tsx","comp/CodiceAccesso.tsx","comp/Main.tsx","models/Cipher.ts","comp/ForgotPassword.tsx","comp/admin/LoginTutor.tsx","models/IAdmin.ts","comp/AskConferma.tsx","comp/admin/StudentsList.tsx","comp/admin/AddNewStudent.tsx","comp/admin/PresenzeTable.tsx","comp/admin/StudentDetails.tsx","comp/admin/DocentiList.tsx","comp/admin/AddNewDocente.tsx","comp/admin/LezioniDocenteTable.tsx","comp/admin/DocenteDetails.tsx","comp/admin/EditDocente.tsx","comp/admin/EditStudente.tsx","comp/admin/StudentsImport.tsx","comp/admin/MaterieList.tsx","comp/ImageScale.tsx","comp/admin/ConfigForm.tsx","comp/admin/ConfigCalendar.tsx","comp/Page404.tsx","comp/admin/EditCodiceFirma.tsx","comp/admin/Home.tsx","comp/admin/Dashboard.tsx","comp/superadmin/CorsiList.tsx","comp/superadmin/AddNewCorso.tsx","comp/superadmin/LoginAdmin.tsx","comp/superadmin/EditCorso.tsx","comp/superadmin/TutorList.tsx","comp/superadmin/AddNewTutor.tsx","comp/superadmin/EditTutor.tsx","comp/superadmin/SuperDashboard.tsx","comp/firmacasa/CodiceSegreto.tsx","models/IStudent.ts","comp/firmacasa/FirmaCasa.tsx","comp/firmacasa/DashboardCasa.tsx","comp/Docs.tsx","comp/stage/LoginStage.tsx","comp/stage/AddForm.tsx","comp/stage/Home.tsx","comp/stage/StageDashboard.tsx","index.tsx"],"names":["siteUrl","logoUrl","adminRoute","superAdminRoute","stageRoute","Digits2","n","validateTime","time","test","formattaData","d","convert","from","split","date","Date","Number","getFullYear","getMonth","getDate","formatItalian","capitalizeFirst","name","splitStr","capitalizeQuote","toLowerCase","i","length","charAt","toUpperCase","substring","join","mountLogin","document","getElementsByTagName","classList","add","unmountLogin","remove","imageFileToBase64","file","readImageFile","a","Promise","resolve","reject","reader","FileReader","onload","e","base64Img","Buffer","target","result","toString","onerror","readAsArrayBuffer","resizePopup","mainBlock","getElementById","popup","width","clientWidth","style","checkEnter","callback","keyCode","convertFromUTC","localDate","getHours","getMinutes","getDateTime","clearDate","replace","converted","window","addEventListener","Boolean","location","hostname","match","genericError","title","icon","iconColor","message","Firma","props","maxLength","componentDidMount","id","parseInt","sessionStorage","getItem","Axios","get","then","response","corso","data","setState","changeCode","event","code","value","tryToLog","switchInput","idCorso","anno","axios","post","showMessagePopup","catch","_","disable","input","setAttribute","removeAttribute","focus","setTimeout","state","cambiaCorso","removeItem","routerHistory","push","switchFocus","this","type","spin","className","autoFocus","onChange","onFocus","onBlur","nome","indicator","height","placement","onClick","color","React","PureComponent","Calendario","calendarId","plugins","googleCalendarPlugin","dayGridPlugin","events","googleCalendarId","googleCalendarApiKey","defaultView","fixedWeekCount","firstDay","themeSystem","eventTimeFormat","hour","minute","meridiem","buttonText","today","header","right","locale","eventClick","info","jsEvent","preventDefault","Modal","maskClosable","centered","content","fontSize","start","end","extendedProps","LessonsCalendar","classe","calendar","idGoogleCalendar","Footer","inMenu","href","SceltaCorso","corsi","componentWillUnmount","chooseCorso","setItem","map","c","src","logo","alt","SceltaClasse","chooseClasse","Component","LogoCorso","catchNull","forLogin","CodiceAccesso","cambiaCodice","codice","cambiaScelta","inviaCodice","trim","error","onSubmit","Main","focusInput","confermaTutor","history","activeClassName","exact","to","path","render","Cipher","maximum","msg","shift","finalMessage","letter","charInt","charCodeAt","newInt","String","fromCharCode","ForgotPassword","cancelRecover","currentStep","email","newPassword","newPasswordConfirm","idCoordinatore","loading","closeModal","changeMail","changePassword","pass","changePasswordConfirm","increaseStep","decreaseStep","switchLoading","confirmFirstStep","isNaN","confirmSecondStep","savePassword","password","encode","success","onOk","show","Step","Steps","steps","disabled","htmlType","visible","onCancel","footer","size","current","item","key","LoginTutor","changeInputName","adminName","changeInputPassword","psw","adminPsw","tryLogin","username","obj","isAdmin","JSON","stringify","switchForgot","showForgot","askPassword","url","callType","body","preAction","customText","tutor","parse","admin","sendForm","authAdmin","idAdmin","idAmministratore","authCoordinatore","put","modal","confirm","marginLeft","ref","r","onKeyUp","destroy","okText","cancelText","StudentsList","students","showConfirm","student","cognome","d2","format","okType","theme","dataRitiro","studente","ritirato","idStudente","stu","currentList","indexOf","changeSelection","newList","selection","find","s","filter","concat","selectAll","selectionList","checked","annoFrequentazione","showHideModal","confirmModal","moveStudents","select","studenti","allRetired","group","forEach","sortbyId","b","promuoviStudent","changeFilter","filterStudentsByFilter","Panel","Collapse","TabPane","Tabs","groups","promosso","sort","ritirati","defaultActiveKey","tab","g","checkedAll","tabTitle","element","bg","maxWidth","cf","frequenza","bordered","AddNewStudent","changeNome","changeCognome","changeEmail","changeData","dataNascita","changeAnnoScolastico","annoS","annoScolastico","changeCF","CF","aggiungiStudente","PresenzeTable","presenze","p","ingresso","uscita","changeEntrata","idPresenza","entrata","editingList","changeUscita","startTimeEdit","animateTds","td1","td2","confirmEdit","presenza","idLezione","output","newPresenze","reloadTotali","getCategorie","categorie","lezione","annullaModifica","Option","Select","presences","defaultValue","showSearch","l","presenzaEdit","pre","StudentDetails","params","oreTotali","loadTotali","totPresenze","toggleModal","downloadQR","pngUrl","toDataURL","downloadLink","createElement","download","appendChild","click","removeChild","getQRCode","perc","Math","round","percent","strokeColor","suffix","decimalSeparator","groupSeparator","DocentiList","docenti","switchList","showAll","showDeleteConfirm","docente","ritiraOAnnulla","idDocente","backRetire","doc","isInCorso","docs","transform","monteOre","orePrimo","oreSecondo","AddNewDocente","materie","aggiungiDocente","corsiSel","materieSel","tenere","insegnare","m","idMateria","switchMateria","materiaId","switchCorso","corsoId","f","classname","LezioniDocenteTable","canEdit","editPresenza","DocenteDetails","display","alignItems","justifyContent","EditDocente","modificaDocente","EditStudente","modificaStudente","moment","fields","label","field","StudentsImport","splitCSV","renderOptions","rows","fileContent","changeVarPos","varName","readFile","showImportPreview","readAsText","list","cells","addList","hidePopup","confirmImport","flexDirection","accept","beforeUpload","MaterieList","showModal","nomeMateria","hideEditModal","showEditModal","nomeEdit","materiaEdit","materia","aggiungiMateria","modificaMateria","changeNomeEdit","ImageScale","scaleImage","scalable","scaled","coords","firstclass","ConfigForm","actualId","changeID","saveConfig","calendario","idCalendario","eventiScartati","warning","inizio","fine","summary","ConfigCalendar","showHelp","top","marginTop","rel","getElementsByClassName","scrollTo","Page404","goTo","EditCodiceFirma","requestCodeChange","Home","coordinatore","noLezione1","lezioneCorrente1","noLezione2","lezioneCorrente2","getContenuto","titolo","oraInizio","oraFine","oraIngresso","codiceCorso","Dashboard","session","routeProps","CorsiList","luogo","AddNewCorso","changeLuogo","aggiungiCorso","convertImage","uploadButton","marginBottom","listType","showUploadList","LoginAdmin","isSuperAdmin","EditCorso","modificaCorso","TutorList","t","AddNewTutor","listaCorsi","changeCorso","isExistingCorso","aggiungiTutor","EditTutor","modificaTutor","selected","SuperDashboard","CodiceSegreto","changeCodice","headers","isStudent","areStudent","err","FirmaCasa","caricaLezione","inviaFirma","selectedStudente","firmaDocente","scegliStudente","temp","noLezione","firmato","DashboardCasa","Docs","scrollToIndex","block","scrollIntoView","LoginStage","userEmail","userCode","cancelAction","isExisting","tryAccess","isAccessStudent","exists","AddForm","changeInizio","changeFine","changeArgomento","argomento","toggleLoading","addStage","currentDate","reloadStage","annullaAggiunta","loadOre","oreList","addNew","ore","totale","o","totaleRelativo","totaleOre","toggleAdd","floor","EPSILON","StageDashboard","createHashHistory","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ca34141c.chunk.js","sourcesContent":["// export const siteUrl = \"https://localhost:44336\"\r\nexport const siteUrl = \"https://registrofitstic.azurewebsites.net\"\r\nexport const logoUrl = \"fitstic_logo.png\"\r\n\r\nexport const adminRoute = \"/adminpanel\"\r\nexport const superAdminRoute = \"/superpanel\"\r\nexport const docentiRoute = \"/docentipanel\"\r\nexport const stageRoute = \"/stagepanel\"\r\n\r\nexport const Digits2 = (n: number) => {\r\n    return n < 10 ? \"0\" + n : n\r\n}\r\n\r\nexport const validateTime = (time: string) => {\r\n    return /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])$/.test(time)\r\n}\r\n\r\nexport const formattaData = (d: string, convert?: boolean) => {\r\n    let from = d.split(/[/-]/g),\r\n    date = convert ? new Date(Number(from[2]), Number(from[1]) - 1, Number(from[0])) : new Date(d)\r\n\r\n    return `${date.getFullYear()}-${Digits2(date.getMonth() + 1)}-${Digits2(date.getDate())}`\r\n}\r\n\r\nexport const formatItalian = (d: string) => {\r\n    let date = new Date(d)\r\n\r\n    return `${Digits2(date.getDate())}-${Digits2(date.getMonth() + 1)}-${date.getFullYear()}` \r\n}\r\n\r\nexport const capitalizeFirst = (name: string) => {\r\n    let splitStr = capitalizeQuote(name.toLowerCase()).split(\" \")\r\n\r\n    for (let i = 0; i < splitStr.length; i++) {\r\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1) \r\n    }\r\n   \r\n    return splitStr.join(\" \")\r\n}\r\n\r\nexport const capitalizeQuote = (name: string) => {\r\n    let splitStr = name.toLowerCase().split(\"'\")\r\n\r\n    for (let i = 0; i < splitStr.length; i++) {\r\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1)\r\n    }\r\n   \r\n    return splitStr.join(\"'\")\r\n}\r\n\r\nexport const mountLogin = () => {\r\n    let body = document.getElementsByTagName(\"body\")[0]\r\n\r\n    body.classList.add(\"login\")\r\n}\r\nexport const unmountLogin = () => {\r\n    let body = document.getElementsByTagName(\"body\")[0]\r\n\r\n    body.classList.remove(\"login\")\r\n}\r\n\r\nexport const imageFileToBase64 = async (file: any) => {\r\n    function readImageFile(file: any){\r\n        return new Promise((resolve, reject) => {\r\n            let reader = new FileReader()\r\n        \r\n            reader.onload = e => {\r\n                let base64Img = new Buffer(e.target.result as any, \"binary\").toString(\"base64\"),\r\n                src = \"data:image/png;base64,\" + base64Img\r\n\r\n                resolve(src)\r\n            }\r\n        \r\n            reader.onerror = reject\r\n        \r\n            reader.readAsArrayBuffer(file)\r\n        })     \r\n    }\r\n\r\n    return readImageFile(file)\r\n}\r\n\r\nexport const resizePopup = () => {\r\n    let mainBlock = document.getElementById(\"mainBlock\"),\r\n    popup = document.getElementById(\"popup\"),\r\n    width = mainBlock ? mainBlock.clientWidth : 0\r\n\r\n    if(mainBlock && popup)\r\n        popup.style.width = width + \"px\"\r\n}\r\n\r\nexport const checkEnter = (e: any, callback: any) => {\r\n    if(e.keyCode === 13)\r\n        callback()\r\n}\r\n\r\nexport const convertFromUTC = (date: string) => {\r\n    let localDate = new Date(date)\r\n\r\n    return `${Digits2(localDate.getHours())}:${Digits2(localDate.getMinutes())}`\r\n}\r\n\r\nexport const getDateTime = (date: string) => {\r\n    let clearDate = date.replace(\"Z\", \"\"),\r\n    converted = new Date(clearDate)\r\n\r\n    return `${Digits2(converted.getHours())}:${Digits2(converted.getMinutes())}`\r\n}\r\n\r\nwindow.addEventListener(\"load\", resizePopup)\r\nwindow.addEventListener(\"resize\", resizePopup)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export interface IMessage{\r\n    readonly title: string\r\n    readonly icon: string\r\n    readonly iconColor: string\r\n    readonly message: string\r\n    readonly time: number\r\n    readonly type?: string\r\n}\r\n\r\nexport const genericError = {\r\n    title: \"Ops!\",\r\n    icon: \"fa-times-circle\",\r\n    iconColor: \"#de1e30\",\r\n    message: \"È stato riscontrato un errore durante l'accesso.\",\r\n    time: 3000\r\n}","import React from \"react\"\r\nimport axios from \"axios\"\r\nimport { IMessage, genericError } from \"../models/IMessage\"\r\nimport { siteUrl, resizePopup } from \"../utilities\"\r\nimport { routerHistory } from \"..\"\r\nimport { Divider, Tooltip, Spin, Icon } from \"antd\"\r\nimport { ICorso } from \"../models/ICorso\"\r\nimport Axios from \"axios\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly code: string\r\n    readonly popup: IMessage\r\n    readonly corso: ICorso\r\n    readonly focus: boolean\r\n}\r\n\r\nexport default class Firma extends React.PureComponent<IProps, IState>{\r\n    maxLength = 16\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            code: \"\",\r\n            popup: genericError,\r\n            corso: null,\r\n            focus: false\r\n        }\r\n    }\r\n    \r\n    componentDidMount = () => {\r\n        let id = parseInt(sessionStorage.getItem(\"corso\"))\r\n\r\n        Axios.get(siteUrl+\"/api/corsi/\"+id).then(response => {\r\n            let corso = response.data as ICorso\r\n\r\n            this.setState({\r\n                corso: corso\r\n            })\r\n        })\r\n\r\n        resizePopup()\r\n    }\r\n\r\n    changeCode = (event: any) => {\r\n        let code = event.target.value\r\n\r\n        this.setState({\r\n            code: code\r\n        })\r\n\r\n        this.tryToLog(code)\r\n    }\r\n\r\n    tryToLog = (code: string) => {\r\n        if(code.length < this.maxLength) return false\r\n\r\n        this.switchInput(true)\r\n\r\n        let idCorso = parseInt(sessionStorage.getItem(\"corso\")),\r\n        anno = parseInt(sessionStorage.getItem(\"classe\"))\r\n        \r\n        axios.post(siteUrl + \"/api/firma\", {\r\n            code: code,\r\n            idCorso: idCorso,\r\n            anno: anno\r\n        }).then(response => {\r\n            this.setState({\r\n                popup: response.data as IMessage\r\n            })\r\n\r\n            this.showMessagePopup()\r\n        }).catch((_) => {\r\n            this.setState({\r\n                popup: genericError\r\n            })\r\n\r\n            this.showMessagePopup()\r\n        })\r\n    }\r\n\r\n    switchInput = (disable: boolean) => {\r\n        let input = document.getElementById(\"mainInput\") as HTMLInputElement\r\n\r\n        if(!input) return\r\n\r\n        if(disable)\r\n            input.setAttribute(\"disabled\", \"disabled\")\r\n        else{\r\n            this.setState({\r\n                code: \"\"\r\n            })\r\n            input.removeAttribute(\"disabled\")\r\n            input.focus()\r\n        }\r\n    }\r\n\r\n    showMessagePopup = () => {\r\n        let popup = document.getElementById(\"popup\")\r\n\r\n        if(!popup) return\r\n\r\n        popup.classList.add(\"show\")\r\n\r\n        setTimeout(() => {\r\n            popup.classList.remove(\"show\")\r\n            this.switchInput(false)\r\n        }, this.state.popup.time)\r\n    }\r\n\r\n    cambiaCorso = () => {\r\n        sessionStorage.removeItem(\"corso\")\r\n        sessionStorage.removeItem(\"classe\")\r\n        sessionStorage.removeItem(\"confermaTutor\")\r\n\r\n        routerHistory.push(\"/\")\r\n    }\r\n\r\n    switchFocus = () => {\r\n        this.setState({\r\n            focus: !this.state.focus\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { popup, corso, focus } = this.state\r\n        let icon = <Icon type=\"loading\" spin />\r\n\r\n        return <div className=\"col\" id=\"mainBlock\">\r\n            <div className=\"text-center w-100\">\r\n                <h2 className=\"mb-1 font-weight-normal\">Scannerizza il codice</h2>\r\n                <h6 className=\"mb-1 text-muted font-weight-normal\">(alza la luminosità del dispositivo)</h6>\r\n                <input autoFocus type=\"password\" value={this.state.code} onChange={this.changeCode} maxLength={this.maxLength} id=\"mainInput\" onFocus={this.switchFocus} onBlur={this.switchFocus}/>\r\n\r\n                <Icon type=\"scan\" className=\"fa-9x d-block text-blue\" />\r\n\r\n                {\r\n                    !focus ? <div className=\"text-danger text-center mt-2\">Clicca sulla pagina per ristabilire il focus e firmare.</div>  : \"\"\r\n                }\r\n\r\n                <div className=\"top-info\">\r\n                    {\r\n                        corso ? corso.nome : <Spin indicator={icon} />\r\n                    }\r\n                        <Divider type=\"vertical\" style={{ height: 20 }} />\r\n                    {\r\n                        parseInt(sessionStorage.getItem(\"classe\")) === 1 ? \"Primo anno\" : \"Secondo anno\"\r\n                    }\r\n                        <Divider type=\"vertical\" style={{ height: 20 }} />\r\n                    <Tooltip placement=\"bottomRight\" title=\"Cambia il corso o la classe per firmare\">\r\n                        <button type=\"button\" className=\"btn btn-sm btn-blue\" onClick={this.cambiaCorso}>\r\n                            <i className=\"far fa-repeat-alt fa-fw mr-1\"></i>\r\n                            Cambia\r\n                        </button>\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"popup\">\r\n                <div className=\"w-100\">\r\n                    <i className={\"fal fa-fw fa-lg fa-6x \" + popup.icon} style={{ color: popup.iconColor}}></i>\r\n                    <h2 className=\"mt-5\">{popup.title}</h2>\r\n                    <div className=\"mt-2\">{popup.message}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport FullCalendar from \"@fullcalendar/react\"\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\"\r\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\"\r\nimport { Modal } from \"antd\"\r\nimport { Digits2 } from \"../utilities\"\r\nimport \"@fullcalendar/core/main.css\"\r\nimport \"@fullcalendar/timegrid/main.css\"\r\n\r\nexport interface IProps{\r\n    readonly calendarId: string\r\n}\r\nexport interface IState{}\r\n\r\nexport default class Calendario extends React.PureComponent<IProps, IState>{\r\n    render(): JSX.Element{\r\n        const { calendarId } = this.props\r\n\r\n        return <FullCalendar\r\n            plugins={[ googleCalendarPlugin, dayGridPlugin ]}\r\n            events={{ googleCalendarId: calendarId }}\r\n            googleCalendarApiKey={\"AIzaSyCEEaAbHOYhofQs-iLdHd_J8-KyD_IlRbE\"}\r\n            defaultView=\"dayGridMonth\"\r\n            fixedWeekCount={false}\r\n            firstDay={1}\r\n            themeSystem={\"bootstrap\"}\r\n            eventTimeFormat={{\r\n                hour: \"2-digit\",\r\n                minute: \"2-digit\",\r\n                meridiem: false\r\n            }}\r\n            buttonText={{\r\n                today: \"Mese corrente\"\r\n            }}\r\n            header={{\r\n                right: \"prev, next\"\r\n            }}\r\n            locale={\"it\"}\r\n            eventClick={\r\n                function(info){\r\n                    info.jsEvent.preventDefault()\r\n                    let event = info.event\r\n                    \r\n                    Modal.info({\r\n                        maskClosable: true,\r\n                        centered: true,\r\n                        icon: null,\r\n                        title: event.title,\r\n                        content: <div className=\"mt-3\" style={{ fontSize: 20 }}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3 pr-0\">\r\n                                    <span className=\"label\">Inizio</span>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <span className=\"desc\">\r\n                                        { Digits2(event.start.getHours()) }:{ Digits2(event.start.getMinutes()) }\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3 pr-0\">\r\n                                    <span className=\"label\">Fine</span>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <span className=\"desc\">\r\n                                        { Digits2(event.end.getHours()) }:{ Digits2(event.end.getMinutes()) }\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            {  \r\n                                event.extendedProps.location && <div className=\"row\">\r\n                                    <div className=\"col-3 pr-0\">\r\n                                        <span className=\"label\">Luogo</span>\r\n                                    </div>\r\n                                    <div className=\"col-9\" style={{ fontSize: 15 }}>\r\n                                        {event.extendedProps.location}\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    })\r\n                }\r\n            }\r\n        />\r\n    }\r\n}","import React from \"react\"\r\nimport { siteUrl } from \"../utilities\"\r\nimport { Icon, Spin } from \"antd\"\r\nimport { ICalendar } from \"../models/ICalendar\"\r\nimport Axios from \"axios\"\r\nimport Calendario from \"./Calendario\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly calendar: ICalendar\r\n}\r\n\r\nexport default class LessonsCalendar extends React.PureComponent<IProps, IState> {\r\n    constructor(props: IProps){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            calendar: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let idCorso = parseInt(sessionStorage.getItem(\"corso\")),\r\n        classe = parseInt(sessionStorage.getItem(\"classe\"))\r\n        \r\n        Axios.get(siteUrl+\"/api/calendari/\"+idCorso+\"/\"+classe).then(response => {\r\n            let calendar = response.data as ICalendar\r\n\r\n            this.setState({\r\n                calendar: calendar\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { calendar } = this.state\r\n    \r\n        if(!calendar){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-3\" id=\"mainBlock\">\r\n            <Calendario calendarId={calendar.idGoogleCalendar} />\r\n        </div>\r\n    }\r\n  \r\n  }","import React from \"react\"\r\nimport { adminRoute, superAdminRoute, siteUrl } from \"../utilities\"\r\n\r\nexport interface IProps{\r\n    readonly inMenu?: boolean\r\n}\r\nexport interface IState{}\r\n\r\nexport default class Footer extends React.PureComponent<IProps, IState>{\r\n    render(): JSX.Element{\r\n        if(this.props.inMenu){\r\n            return <div className=\"copyright\">\r\n                &copy; {(new Date()).getFullYear()} FITSTIC - <a href={siteUrl+\"/#/documentazione\"} className=\"text-white u-hover\">Documentazione</a>\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"w-100 bg-white p-3 mt-3 rounded shadow px-2 text-center\">\r\n            <div>\r\n                &copy; {(new Date()).getFullYear()} FITSTIC\r\n            </div>\r\n\r\n            <a href={siteUrl+\"/#\"+adminRoute} className=\"text-blue u-hover\">Coordinatori</a> - <a href={siteUrl+\"/#\"+superAdminRoute} className=\"text-blue u-hover\">Amministratori</a> - <a href={siteUrl+\"/#/documentazione\"} className=\"text-blue u-hover\">Documentazione</a> - <a href={siteUrl+\"/#/firmacasa\"} className=\"text-blue u-hover\">Firma da remoto</a>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { siteUrl, mountLogin, unmountLogin } from \"../utilities\"\r\nimport { ICorso } from \"../models/ICorso\"\r\nimport Axios from \"axios\"\r\nimport { Spin, Icon } from \"antd\"\r\nimport { routerHistory } from \"..\"\r\nimport Footer from \"./Footer\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly corsi: ICorso[]\r\n}\r\n\r\nexport default class SceltaCorso extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            corsi: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                corsi: corsi\r\n            })\r\n        })\r\n\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    chooseCorso = (id: number) => {\r\n        sessionStorage.setItem(\"corso\", id.toString())\r\n        routerHistory.push(\"/\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { corsi } = this.state\r\n\r\n        if(!corsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50, color: \"#fff\" }} spin />\r\n\r\n            return <div className=\"col-12 px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100\">\r\n                <div className=\"w-100 bg-white py-3 rounded shadow px-2 text-center\">\r\n                    <h3 className=\"text-center\">Scegli il corso</h3>\r\n\r\n                    {\r\n                        corsi.map(c => {\r\n                            return <div className=\"p-3 mx-2 text-center pointer corso-item d-inline-block rounded\" onClick={() => this.chooseCorso(c.idCorso)}>\r\n                                <img src={c.logo} alt=\"logo\" height=\"60\" />\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}","import React from \"react\"\r\nimport { mountLogin, unmountLogin } from \"../utilities\"\r\nimport { routerHistory } from \"..\"\r\nimport Footer from \"./Footer\"\r\n\r\nexport default class SceltaClasse extends React.Component{\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    chooseClasse = (id: number) => {\r\n        sessionStorage.setItem(\"classe\", id.toString())\r\n        routerHistory.push(\"/\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100\">\r\n                <div className=\"w-100 bg-white py-3 rounded shadow\">\r\n                    <h3 className=\"text-center\">Scegli la classe</h3>\r\n\r\n                    <div className=\"py-2 text-center pointer corso-item\" onClick={() => this.chooseClasse(1)}>\r\n                        Primo anno\r\n                    </div>\r\n                    <div className=\"py-2 text-center pointer corso-item\" onClick={() => this.chooseClasse(2)}>\r\n                        Secondo anno\r\n                    </div>\r\n                </div>\r\n                \r\n                <Footer />\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}","import React from \"react\"\r\nimport { Icon, Spin } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, logoUrl } from \"../utilities\"\r\nimport { ICorso } from \"../models/ICorso\"\r\n\r\nexport interface IProps{\r\n    readonly idCorso?: string | number\r\n    readonly forLogin?: boolean\r\n}\r\nexport interface IState{\r\n    readonly logo: string\r\n}\r\n\r\nexport default class LogoCorso extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            logo: null\r\n        }\r\n    }\r\n\r\n    catchNull = () => {\r\n        this.setState({\r\n            logo: logoUrl\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.idCorso){\r\n            this.catchNull()\r\n            return\r\n        }\r\n        \r\n        Axios.get(siteUrl+\"/api/corsi/\"+this.props.idCorso).then(response => {\r\n            let corso = response.data as ICorso\r\n\r\n            if(!corso.logo){\r\n                this.catchNull()\r\n                return\r\n            }\r\n\r\n            this.setState({\r\n                logo: corso.logo\r\n            })\r\n        }).catch(_ =>{\r\n            this.catchNull()\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { logo } = this.state\r\n        \r\n        if(!logo){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50, color: \"#fff\" }} spin />\r\n\r\n            return <div className=\"text-center py-4\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        if(this.props.forLogin){\r\n            return <img src={logo} height=\"40\" className=\"float-right logo\" alt=\"logo\" />\r\n        }else{\r\n            return <div className=\"logo-block px-3 py-4\">\r\n                <img src={logo} height=\"100\" className=\"mx-auto d-block logo\" alt=\"logo\" />\r\n            </div>\r\n        }\r\n    }\r\n}","import React from \"react\"\r\nimport { mountLogin, unmountLogin, siteUrl } from \"../utilities\"\r\nimport { routerHistory } from \"..\"\r\nimport Axios from \"axios\"\r\nimport { Modal } from \"antd\"\r\nimport Footer from \"./Footer\"\r\n\r\nexport interface IProps{\r\n    readonly idCorso: number\r\n}\r\nexport interface IState{\r\n    readonly codice: string\r\n}\r\nexport default class CodiceAccesso extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            codice: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    cambiaCodice = (e: any) => {\r\n        let codice = e.target.value\r\n\r\n        this.setState({\r\n            codice: codice\r\n        })\r\n    }\r\n\r\n    cambiaScelta = () => {\r\n        sessionStorage.removeItem(\"corso\")\r\n        sessionStorage.removeItem(\"classe\")\r\n\r\n        routerHistory.push(\"/\")\r\n    }\r\n\r\n    inviaCodice = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        if(this.state.codice === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire il campo.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.post(siteUrl+\"/api/firma/accedi\", {\r\n            idCorso: this.props.idCorso,\r\n            codice: this.state.codice\r\n        }).then(response => {\r\n\r\n            if(response.data.trim() === \"success\"){\r\n                sessionStorage.setItem(\"confermaTutor\", \"true\")\r\n                routerHistory.push(\"/\")\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Codice non valido.\"\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100\">\r\n                <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.inviaCodice}>\r\n                    <h3 className=\"text-center\">Conferma del coordinatore</h3>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Codice di conferma</label>\r\n                        <input name=\"codice\" type=\"password\" className=\"form-control\" value={this.state.codice} onChange={this.cambiaCodice} />\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"pr-1 col-6\">\r\n                            <input type=\"button\" value=\"Annulla scelta\" className=\"btn btn-lg btn-link text-danger w-100 text-uppercase\" onClick={this.cambiaScelta} />\r\n                        </div>\r\n                        <div className=\"pl-1 col\">\r\n                            <input type=\"submit\" value=\"Prosegui\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"..\"\r\nimport Firma from \"./Firma\"\r\nimport LessonsCalendar from \"./LessonsCalendar\"\r\nimport SceltaCorso from \"./SceltaCorso\"\r\nimport SceltaClasse from \"./SceltaClasse\"\r\nimport LogoCorso from \"./LogoCorso\"\r\nimport CodiceAccesso from \"./CodiceAccesso\"\r\nimport Footer from \"./Footer\"\r\n\r\nexport default class Main extends React.Component{\r\n\r\n    focusInput = () => {\r\n        let input = document.getElementById(\"mainInput\") as HTMLInputElement\r\n\r\n        if(input)\r\n            input.focus()\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        let idCorso = sessionStorage.getItem(\"corso\"),\r\n        classe = sessionStorage.getItem(\"classe\"),\r\n        confermaTutor = sessionStorage.getItem(\"confermaTutor\")\r\n\r\n        if(!idCorso)\r\n            return <SceltaCorso />\r\n\r\n        if(!classe)\r\n            return <SceltaClasse />\r\n\r\n        if(!confermaTutor)\r\n            return <CodiceAccesso idCorso={parseInt(idCorso)} />\r\n\r\n        return <div className=\"container-fluid\" onClick={this.focusInput}>\r\n\r\n            <Router history={routerHistory}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3 bg-blue p-0 menu\">\r\n                        \r\n                        <LogoCorso idCorso={sessionStorage.getItem(\"corso\")} />\r\n\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/\")} exact to=\"/firme/\">\r\n                            <span><i className=\"fal fa-home-alt fa-fw mr-1\"></i> Home</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(\"/calendar\")} exact to=\"/firme/calendar\">\r\n                            <span><i className=\"fal fa-calendar-alt fa-fw mr-1\"></i> Calendario</span>\r\n                        </NavLink>\r\n\r\n                        <Footer inMenu={true} />\r\n                    </div>\r\n\r\n                    <Switch>\r\n                        <Route exact path=\"/firme/\" render={() => (\r\n                            <Firma />\r\n                        )} />\r\n\r\n                        <Route exact path=\"/firme/calendar\" render={() => (\r\n                            <LessonsCalendar />\r\n                        )} />\r\n                    </Switch>\r\n                        \r\n                </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}","export class Cipher{\r\n    private maximum = 65535\r\n\r\n    public encode(msg: string, shift: number = -4){\r\n        let finalMessage = \"\"\r\n    \r\n        if(shift < 0)\r\n            shift = -shift\r\n    \r\n        for(let i = 0; i < msg.length; i++){\r\n            let letter = msg[i],\r\n            charInt = letter.charCodeAt(0),\r\n            newInt = charInt + shift\r\n\r\n            if(newInt > this.maximum)\r\n                newInt = newInt - (this.maximum + 1)\r\n\r\n            letter = String.fromCharCode(newInt)\r\n\r\n            finalMessage += letter\r\n        }\r\n        \r\n        return finalMessage\r\n    }\r\n\r\n    public decode(msg: string, shift: number = -4){\r\n        let finalMessage = \"\"\r\n    \r\n        if(shift < 0)\r\n            shift = -shift\r\n    \r\n        for(let i = 0; i < msg.length; i++){\r\n            let letter = msg[i],\r\n            charInt = letter.charCodeAt(0),\r\n            newInt = charInt - shift\r\n\r\n            if(newInt < 0)\r\n                newInt = this.maximum + (newInt + 1)\r\n\r\n            letter = String.fromCharCode(newInt)\r\n\r\n            finalMessage += letter\r\n        }\r\n        \r\n        return finalMessage\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Steps, Button } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl } from \"../utilities\"\r\nimport { Cipher } from \"../models/Cipher\"\r\n\r\nexport interface IProps{\r\n    readonly show: boolean\r\n    readonly closeModal: () => void\r\n}\r\nexport interface IState{\r\n    readonly currentStep: number\r\n    readonly email: string\r\n    readonly code: string\r\n    readonly newPassword: string\r\n    readonly newPasswordConfirm: string\r\n    readonly idCoordinatore: number\r\n    readonly loading: boolean\r\n}\r\n\r\nexport default class ForgotPassword extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            currentStep: 0,\r\n            email: \"\",\r\n            code: \"\",\r\n            newPassword: \"\",\r\n            newPasswordConfirm: \"\",\r\n            idCoordinatore: null,\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    cancelRecover = () => {\r\n        this.setState({\r\n            currentStep: 0,\r\n            email: \"\",\r\n            code: \"\",\r\n            newPassword: \"\",\r\n            newPasswordConfirm: \"\",\r\n            idCoordinatore: null,\r\n            loading: false\r\n        })\r\n\r\n        this.props.closeModal()\r\n    }\r\n\r\n    changeMail = (e: any) => {\r\n        let email = e.target.value.trim()\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n\r\n    changeCode = (e: any) => {\r\n        let code = e.target.value.trim()\r\n\r\n        this.setState({\r\n            code: code\r\n        })\r\n    }\r\n\r\n    changePassword = (e: any) => {\r\n        let pass = e.target.value\r\n\r\n        this.setState({\r\n            newPassword: pass\r\n        })\r\n    }\r\n\r\n    changePasswordConfirm = (e: any) => {\r\n        let pass = e.target.value\r\n\r\n        this.setState({\r\n            newPasswordConfirm: pass\r\n        })\r\n    }\r\n\r\n    increaseStep = () => {\r\n        this.setState({\r\n            currentStep: this.state.currentStep + 1\r\n        })\r\n    }\r\n\r\n    decreaseStep = () => {\r\n        this.setState({\r\n            currentStep: this.state.currentStep - 1\r\n        })\r\n    }\r\n\r\n    switchLoading = () => {\r\n        this.setState({\r\n            loading: !this.state.loading\r\n        })\r\n    }\r\n\r\n    confirmFirstStep = (e: any) => {\r\n        e.preventDefault()\r\n        \r\n        const { email } = this.state\r\n\r\n        if(email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        this.switchLoading()\r\n\r\n        Axios.post(siteUrl+\"/api/coordinatori/recuperocoordinatori\", {\r\n            email\r\n        }).then(response => {\r\n            let data = response.data,\r\n            idCoordinatore = parseInt(data)\r\n\r\n            if(!isNaN(idCoordinatore)){\r\n                this.setState({\r\n                    idCoordinatore: idCoordinatore,\r\n                    loading: false\r\n                })\r\n\r\n                this.increaseStep()\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Questa e-mail non corrisponde a nessun coordinatore.\",\r\n                    maskClosable: true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    confirmSecondStep = (e: any) => {\r\n        e.preventDefault()\r\n        \r\n        if(this.state.code === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire il campo.\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        this.increaseStep()\r\n    }\r\n\r\n    savePassword = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { newPassword, newPasswordConfirm, idCoordinatore, code } = this.state\r\n\r\n        if(newPassword === \"\" || newPasswordConfirm === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(newPassword.length < 8){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"La password deve avere almeno 8 caratteri.\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(newPassword !== newPasswordConfirm){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Le password non corrispondono.\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        this.switchLoading()\r\n\r\n        let cipher = new Cipher(),\r\n        password = cipher.encode(newPassword)\r\n\r\n        Axios.post(siteUrl+\"/api/coordinatori/cambiopassword\", {\r\n            idCoordinatore,\r\n            password,\r\n            codice: code\r\n        }).then(response => {\r\n            let msg = response.data\r\n\r\n            if(msg.trim() === \"success\"){\r\n                Modal.success({\r\n                    title: \"Complimenti!\",\r\n                    content: \"Password modificata con successo.\",\r\n                    centered: true,\r\n                    onOk: this.cancelRecover\r\n                })\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Non è stato possibile completare l'operazione.\",\r\n                    onOk: () => {\r\n                        this.setState({\r\n                            loading: false\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { show } = this.props\r\n        const { currentStep, email, code, newPassword, newPasswordConfirm, loading } = this.state\r\n        const { Step } = Steps\r\n\r\n        const steps = [{\r\n            title: \"E-mail\",\r\n            content: <form onSubmit={this.confirmFirstStep}>\r\n                <div className=\"form-group my-3\">\r\n                    <label className=\"text-muted\">Inserisci la tua e-mail</label>\r\n                    <input type=\"email\" name=\"email\" value={email} className=\"form-control\" onChange={this.changeMail} disabled={loading} />\r\n                </div>\r\n\r\n                <Button htmlType=\"submit\" className=\"float-right\" type=\"primary\" loading={loading}>Prosegui</Button>\r\n\r\n                <div className=\"clearfix\"></div>\r\n            </form>\r\n        },\r\n        {\r\n            title: \"Codice\",\r\n            content: <form onSubmit={this.confirmSecondStep}>\r\n                <div className=\"form-group my-3\">\r\n                    <label className=\"text-muted\">Inserisci il codice ricevuto via e-mail</label>\r\n                    <input type=\"text\" name=\"code\" value={code} className=\"form-control\" onChange={this.changeCode} disabled={loading} />\r\n                </div>\r\n\r\n                <div className=\"float-right\">\r\n                    <Button className=\"mr-2\" onClick={this.decreaseStep}>Indietro</Button>\r\n\r\n                    <Button htmlType=\"submit\" type=\"primary\" loading={loading}>Prosegui</Button>\r\n                </div>\r\n\r\n                <div className=\"clearfix\"></div>\r\n            </form>\r\n        },\r\n        {\r\n            title: \"Nuova password\",\r\n            content: <form onSubmit={this.savePassword}>\r\n                <div className=\"form-group my-3\">\r\n                    <label className=\"text-muted\">Crea la tua nuova password</label>\r\n                    <input type=\"password\" name=\"newpassword\" value={newPassword} className=\"form-control\" onChange={this.changePassword} disabled={loading} />\r\n                </div>\r\n\r\n                <div className=\"form-group my-3\">\r\n                    <label className=\"text-muted\">Conferma la nuova password</label>\r\n                    <input type=\"password\" name=\"newpassword_conf\" value={newPasswordConfirm} className=\"form-control\" onChange={this.changePasswordConfirm} disabled={loading} />\r\n                </div>\r\n\r\n                <div className=\"float-right\">\r\n                    <Button className=\"mr-2\" onClick={this.decreaseStep}>Indietro</Button>\r\n\r\n                    <Button htmlType=\"submit\" type=\"primary\" loading={loading}>Salva la password</Button>\r\n                </div>\r\n\r\n                <div className=\"clearfix\"></div>\r\n            </form>\r\n        }]\r\n\r\n        return <Modal visible={show} title=\"Recupero della password\" onCancel={this.cancelRecover} footer={null} maskClosable={false}>\r\n            <Steps size=\"small\" current={currentStep}>\r\n                {\r\n                    steps.map(item => {\r\n                        return <Step key={item.title} title={item.title} />\r\n                    })\r\n                }\r\n            </Steps>\r\n\r\n            <div className=\"steps-content\">\r\n                {steps[currentStep].content}\r\n            </div>\r\n        </Modal>\r\n    }\r\n}","import React from \"react\"\r\nimport { routerHistory } from \"../..\"\r\nimport { message, Modal } from \"antd\"\r\nimport { mountLogin, unmountLogin, siteUrl, logoUrl, adminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\nimport { isAdmin } from \"../../models/IAdmin\"\r\nimport ForgotPassword from \"../ForgotPassword\"\r\nimport Footer from \"../Footer\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly adminName: string\r\n    readonly adminPsw: string\r\n    readonly showForgot: boolean\r\n}\r\n\r\nexport default class LoginTutor extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            adminName: \"\",\r\n            adminPsw: \"\",\r\n            showForgot: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    changeInputName = (event: any) => {\r\n        let name = event.target.value\r\n\r\n        this.setState({\r\n            adminName: name\r\n        })\r\n    }\r\n\r\n    changeInputPassword = (event: any) => {\r\n        let psw = event.target.value\r\n\r\n        this.setState({\r\n            adminPsw: psw\r\n        })\r\n    }\r\n\r\n    tryLogin = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { adminName, adminPsw } = this.state\r\n        let cipher = new Cipher(),\r\n        password = cipher.encode(adminPsw)\r\n\r\n        Axios.post(siteUrl+\"/api/coordinatori/logincoordinatore\", {\r\n            username: adminName.trim(),\r\n            password: password\r\n        }).then(response => {\r\n            let data = response.data\r\n\r\n            if(isAdmin(data)){\r\n                data.password = password\r\n                sessionStorage.setItem(\"adminSession\", JSON.stringify(data))\r\n                routerHistory.push(adminRoute)\r\n                message.success(\"Login effettuato con successo!\")\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Username o Password errati!\",\r\n                    centered: true,\r\n                    maskClosable: true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    switchForgot = () => {\r\n        this.setState({\r\n            showForgot: !this.state.showForgot\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { adminName, adminPsw, showForgot } = this.state\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100\">\r\n                <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.tryLogin}>\r\n                    <h3 className=\"d-inline-block\">Accesso coordinatori</h3>\r\n                    <img src={logoUrl} height=\"40\" className=\"float-right logo\" alt=\"logo\" />\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Utente di accesso</label>\r\n                        <input name=\"username\" type=\"text\" className=\"form-control\" value={adminName} onChange={this.changeInputName} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Password di accesso</label>\r\n                        <input name=\"password\" type=\"password\" className=\"form-control\" value={adminPsw} onChange={this.changeInputPassword} />\r\n                    </div>\r\n\r\n                    <input type=\"submit\" value=\"Accedi\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n\r\n                    <span className=\"link-blue u-hover d-block mt-3 text-center\" onClick={this.switchForgot}>Hai dimenticato la password?</span>\r\n                </form>\r\n\r\n                <Footer />\r\n            </div>\r\n\r\n            <ForgotPassword show={showForgot} closeModal={this.switchForgot} />\r\n        </div>\r\n    }\r\n\r\n}","export interface IAdmin{\r\n    readonly idCoordinatore?: number\r\n    readonly idAmministratore?: number\r\n    readonly idCorso: number\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly codiceCorso?: string\r\n    readonly password?: string\r\n}\r\n\r\nexport const isAdmin = (obj: any) => {\r\n    try{\r\n        return \"idCorso\" in obj && \"nome\" in obj && \"cognome\" in obj\r\n    }catch{\r\n        return false\r\n    }\r\n}\r\n\r\nexport const isSuperAdmin = (obj: any) => {\r\n    try{\r\n        return \"nome\" in obj && \"cognome\" in obj\r\n    }catch{\r\n        return false\r\n    }\r\n}","import React from \"react\"\r\nimport Axios from \"axios\"\r\nimport { Modal, Icon } from \"antd\"\r\nimport { IAdmin } from \"../models/IAdmin\"\r\nimport { checkEnter } from \"../utilities\"\r\n\r\nexport const askPassword = (url: string, callType: string, body?: any, callback?: any, preAction?: any, customText?: string) => {\r\n    let input: HTMLInputElement,\r\n    tutor = JSON.parse(sessionStorage.getItem(\"adminSession\")) as IAdmin,\r\n    admin = JSON.parse(sessionStorage.getItem(\"superSession\")) as IAdmin\r\n\r\n    const sendForm = () => {\r\n\r\n        if(preAction)\r\n            preAction()\r\n\r\n        if(admin){\r\n            body.authAdmin = {\r\n                idAdmin: admin.idAmministratore,\r\n                password: admin.password\r\n            }\r\n        }\r\n        else if(tutor){\r\n            body.authCoordinatore = {\r\n                idCoordinatore: tutor.idCoordinatore,\r\n                password: tutor.password\r\n            }\r\n        }else{\r\n            if(input.value === \"\"){\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Riempire il campo.\",\r\n                    centered: true,\r\n                    maskClosable: true\r\n                })\r\n                \r\n                return true\r\n            }\r\n            \r\n            body.password = input.value.trim()\r\n        }\r\n\r\n        if(callType === \"post\"){\r\n            Axios.post(url, body).then(callback).catch(_ => {\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"C'è stato un problema. Forse sei stato disconnesso: prova a riefettuare il login.\"\r\n                })\r\n            })\r\n        }else if(callType === \"put\"){\r\n            Axios.put(url, body).then(callback).catch(_ => {\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"C'è stato un problema. Forse sei stato disconnesso: prova a riefettuare il login.\"\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    if(tutor || admin){\r\n        sendForm()\r\n    }else{\r\n        let modal = Modal.confirm({\r\n            title: \"Prima di procedere...\",\r\n            content: <div style={{ marginLeft: -38 }}>\r\n                <div className=\"form-group mb-0\">\r\n                    <label className=\"text-secondary\">\r\n                        {customText ? customText : \"Inserisci la tua password per confermare l'identità\"}\r\n                    </label>\r\n                    <input type=\"password\" ref={r => input = r} className=\"form-control\" onKeyUp={(e) => checkEnter(e, () => {\r\n                        if(!sendForm())\r\n                            modal.destroy()\r\n                    })} />\r\n                </div>\r\n            </div>,\r\n            okText: \"Conferma identità\",\r\n            cancelText: \"Annulla\",\r\n            onOk: sendForm,\r\n            icon: <Icon type=\"lock\" style={{ color: \"var(--danger)\" }} />,\r\n            centered: true\r\n        })\r\n\r\n        setTimeout(() => {\r\n            input.focus()\r\n        }, 300)\r\n    }\r\n}","import React from \"react\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport { routerHistory } from \"../..\"\r\nimport { Modal, Tooltip, Spin, Icon, Checkbox, Collapse, DatePicker, message, Tabs, Input } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, formattaData, adminRoute } from \"../../utilities\"\r\nimport locale from \"antd/es/date-picker/locale/it_IT\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly students: IStudent[]\r\n    readonly selection: IStudent[]\r\n    readonly confirmModal: boolean\r\n    readonly filter: string\r\n}\r\n\r\nexport default class StudentsList extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            students: null,\r\n            selection: [],\r\n            confirmModal: false,\r\n            filter: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/studenti/\"+this.props.corso).then(response => {\r\n            this.setState({\r\n                students: response.data as IStudent[]\r\n            })\r\n        })\r\n    }\r\n\r\n    showConfirm = (student: IStudent) => {\r\n        const { students } = this.state\r\n        let date: string = \"\"\r\n\r\n        Modal.confirm({\r\n            title: `${student.nome} ${student.cognome}`,\r\n            content: <div style={{ marginLeft: -38 }}>\r\n                <p>Confermi di voler ritirare questo studente dal corso?</p>\r\n                <label className=\"text-secondary\">Data di ritiro</label>\r\n                \r\n                <DatePicker locale={locale} className=\"w-100\" onChange={(_, d2) => date = d2} format=\"DD-MM-YYYY\" />\r\n            </div>,\r\n            okText: \"Conferma ritiro\",\r\n            okType: \"danger\",\r\n            cancelText: \"Annulla\",\r\n            icon: <Icon type=\"warning\" className=\"text-danger\" theme=\"filled\" />,\r\n            onOk: () => {\r\n                if(date === \"\"){\r\n                    Modal.error({\r\n                        title: \"Errore!\",\r\n                        content: \"Seleziona una data valida.\"\r\n                    })\r\n\r\n                    return true\r\n                }\r\n\r\n                let dataRitiro = formattaData(date, true),\r\n                studente = student as any\r\n                studente.ritirato = \"true\"\r\n                studente.dataRitiro = dataRitiro\r\n                \r\n                askPassword(siteUrl+\"/api/studenti/\" + student.idStudente, \"put\", {\r\n                    studente: studente\r\n                }, (response: any) => {\r\n\r\n                    let stu = response.data as IStudent,\r\n                    currentList = students as any,\r\n                    editingStudent = students.indexOf(student)\r\n                    \r\n                    currentList[editingStudent] = stu\r\n\r\n                    this.setState({\r\n                        students: currentList as IStudent[]\r\n                    })\r\n\r\n                    message.success(\"Studente ritirato con successo!\")\r\n                }, () => {\r\n                    this.setState({\r\n                        students: null\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    changeSelection = (student: IStudent) => {\r\n        let find = this.state.selection.find(s => s === student),\r\n        newList = find ? this.state.selection.filter(s => s.idStudente !== student.idStudente) : this.state.selection.concat(student)\r\n\r\n        this.setState({\r\n            selection: newList\r\n        })\r\n    }\r\n\r\n    selectAll = (anno: number, event: any) => {\r\n        let selectionList = event.target.checked ? this.state.students.filter(s => s.annoFrequentazione === anno && !s.ritirato) : this.state.selection.filter(s => s.annoFrequentazione !== anno)\r\n\r\n        this.setState({\r\n            selection: selectionList\r\n        })\r\n    }\r\n\r\n    showHideModal = () => {\r\n        if(!this.state.selection.length){\r\n            Modal.info({\r\n                title: \"Attenzione!\",\r\n                content: \"Devi selezionare almeno uno studente.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            confirmModal: !this.state.confirmModal\r\n        })\r\n    }\r\n\r\n    moveStudents = () => {\r\n        let select = document.getElementById(\"moveToClass\") as HTMLSelectElement,\r\n        value = parseInt(select.value),\r\n        studenti = this.state.selection.map(s => {\r\n            let stu = s as any\r\n            stu.idCorso = this.props.corso\r\n            stu.annoFrequentazione = value\r\n\r\n            return stu\r\n        })\r\n\r\n        if(value !== 1 && value !== 2){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"L'anno selezionato non è valido.\"\r\n            })\r\n        }\r\n\r\n        askPassword(siteUrl+\"/api/studenti\", \"put\", {\r\n            studenti: studenti\r\n        }, (response: any) => {\r\n            this.setState({\r\n                students: response.data as IStudent[],\r\n                confirmModal: false\r\n            })\r\n\r\n            message.success(\"Studenti spostati con successo!\")\r\n        }, () => {\r\n            this.setState({\r\n                students: null,\r\n                selection: []\r\n            })\r\n        })\r\n    }\r\n\r\n    allRetired = (group: IStudent[]) => {\r\n        let allRetired = true\r\n\r\n        group.forEach(s => {\r\n            if(!s.ritirato)\r\n                allRetired = false\r\n        })\r\n\r\n        return !allRetired\r\n    }\r\n\r\n    sortbyId = (a: IStudent, b: IStudent) => { \r\n        if(a.idStudente > b.idStudente)\r\n            return-1\r\n        if(a.idStudente < b.idStudente)\r\n            return 1\r\n\r\n        return 0\r\n    }\r\n\r\n    promuoviStudent = (s: IStudent) => {\r\n        Modal.confirm({\r\n            title: `${s.nome} ${s.cognome}`,\r\n            content: \"Confermi di voler segnare questo studente come archiviato?\",\r\n            okText: \"Conferma\",\r\n            okType: \"primary\",\r\n            cancelText: \"Annulla\",\r\n            onOk: () => {\r\n                askPassword(siteUrl+\"/api/studenti/promuovistudente\", \"put\", {\r\n                    idStudente: s.idStudente\r\n                }, (response: any) => {\r\n                    \r\n                    let studenti = response.data as IStudent[]\r\n        \r\n                    this.setState({\r\n                        students: studenti\r\n                    })\r\n        \r\n                    message.success(\"Studente archiviato con successo!\")\r\n                }, () => {\r\n                    this.setState({\r\n                        students: null\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    changeFilter = (e: any) => {\r\n        let filter = e.target.value\r\n\r\n        this.setState({\r\n            filter: filter\r\n        })\r\n    }\r\n\r\n    filterStudentsByFilter = () => {\r\n        const { students, filter } = this.state\r\n\r\n        return students.filter(s => s.nome.toLowerCase().indexOf(filter.toLowerCase()) !== -1 || s.cognome.toLowerCase().indexOf(filter.toLowerCase()) !== -1)\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { students, selection, filter } = this.state,\r\n        { Panel } = Collapse,\r\n        { TabPane } = Tabs\r\n        \r\n        if(!students){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n        \r\n        let firstYear = students.filter(s => s.annoFrequentazione === 1 && !s.promosso).sort(this.sortbyId).sort((a, _) => a.ritirato ? 0 : -1),\r\n        secondYear = students.filter(s => s.annoFrequentazione === 2 && !s.promosso).sort(this.sortbyId).sort((a, _) => a.ritirato ? 0 : -1),\r\n        groups = [firstYear, secondYear],\r\n        studentiRitirati = filter.trim() === \"\" ? students : this.filterStudentsByFilter(),\r\n        ritirati = studentiRitirati.filter(s => s.promosso).sort(this.sortbyId).sort((a, _) => a.ritirato ? 0 : -1)\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Studenti del corso</h3>\r\n\r\n            <Tabs defaultActiveKey=\"1\">\r\n                <TabPane tab={<span><i className=\"fal fa-user fa-fw mr-1\"></i> Studenti attivi</span>} key=\"1\">\r\n                    <button className=\"btn btn-success float-right mr-1\" type=\"button\" onClick={() => routerHistory.push(adminRoute+\"/studenti/new\")}>\r\n                        <i className=\"fal fa-plus fa-fw\"></i> Aggiungi studente\r\n                    </button>\r\n\r\n                    <button className=\"btn btn-orange float-right mr-2\" type=\"button\" onClick={this.showHideModal}>\r\n                        <i className=\"fa fa-arrows-alt fa-fw\"></i> Sposta studenti\r\n                    </button>\r\n\r\n                    <button className=\"btn btn-blue float-right mr-2\" type=\"button\" onClick={() => routerHistory.push(adminRoute+\"/studenti/import\")}>\r\n                        <i className=\"fa fa-file-csv fa-fw\"></i> Importa da CSV\r\n                    </button>\r\n\r\n                    <div className=\"clearfix\"></div>\r\n\r\n                    <Tabs defaultActiveKey=\"0\">\r\n                        \r\n                        {\r\n                            groups.map((g, i) => {\r\n                                if(!g[0])\r\n                                    return false\r\n                                    \r\n                                let checkedAll = this.allRetired(g),\r\n                                tabTitle = g[0].annoFrequentazione === 1 ? \"Primo\" : \"Secondo\"\r\n\r\n                                g.forEach(element => {\r\n                                    if(selection.indexOf(element) === -1 && !element.ritirato)\r\n                                        checkedAll = false\r\n                                })\r\n\r\n                                return <TabPane tab={tabTitle + \" anno\"} key={i.toString()}>\r\n                                    <table className=\"table table-bordered text-center\">\r\n\r\n                                        <tbody className=\"border-top-0\">\r\n                                            <tr>\r\n                                                <th style={{width: \"5%\"}}>\r\n                                                    <Tooltip title=\"Seleziona tutti\">\r\n                                                        <Checkbox onChange={(e) => this.selectAll(g[0].annoFrequentazione, e)} checked={checkedAll} />\r\n                                                    </Tooltip>\r\n                                                </th>\r\n                                                <th>Studente</th>\r\n                                                <th>Codice Fiscale</th>\r\n                                                <th style={{width: \"15%\"}}>Frequenza</th>\r\n                                                <th style={{width: \"26%\"}}>Azioni</th>\r\n                                            </tr>\r\n                                \r\n                                            {\r\n                                                g.map(s => {\r\n                                                    let checked = this.state.selection.find(n => n === s) ? true : false,\r\n                                                    bg = s.ritirato ? \"light font-italic\" : \"white\"\r\n                            \r\n                                                    return <tr className={\"bg-\"+bg}>\r\n                                                        <td>\r\n                                                            {\r\n                                                                s.ritirato ? <Checkbox disabled={true} /> : <Checkbox onChange={() => this.changeSelection(s)} checked={checked} />\r\n                                                            }\r\n                                                        </td>\r\n                                                        <Tooltip title={s.nome + \" \" + s.cognome}>\r\n                                                            <td style={{maxWidth: 0}} className=\"text-truncate\">{s.nome} {s.cognome}</td>\r\n                                                        </Tooltip>\r\n                                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cf}</td>\r\n                                                        <td style={{maxWidth: 0}} className=\"text-truncate\">\r\n                                                            {isNaN(s.frequenza) ? 0 : s.frequenza}%\r\n                                                        </td>\r\n                                                        \r\n                                                        <td>\r\n                                                            <Tooltip title=\"Dettagli\">\r\n                                                                <button type=\"button\" className=\"btn btn-info circle-btn\" onClick={() => routerHistory.push(adminRoute+\"/studenti/\" + s.idStudente)}>\r\n                                                                    <i className=\"fa fa-info\"></i>\r\n                                                                </button>\r\n                                                            </Tooltip>\r\n                                                            \r\n                                                            {\r\n                                                                !s.ritirato && <Tooltip title=\"Modifica\">\r\n                                                                    <button type=\"button\" className=\"btn btn-warning text-white circle-btn ml-2\" onClick={() => routerHistory.push(adminRoute+\"/studenti/edit/\" + s.idStudente)}>\r\n                                                                        <i className=\"fa fa-pen\"></i>\r\n                                                                    </button>\r\n                                                                </Tooltip>\r\n                                                            }\r\n                                                            {\r\n                                                                !s.ritirato && <Tooltip title=\"Segna come ritirato\">\r\n                                                                    <button type=\"button\" className=\"btn btn-danger circle-btn ml-2\" onClick={() => this.showConfirm(s)}>\r\n                                                                        <i className=\"fa fa-user-times\"></i>\r\n                                                                    </button>\r\n                                                                </Tooltip>\r\n                                                            }\r\n\r\n                                                            {\r\n                                                                s.ritirato && <Tooltip title=\"Studente ritirato\">\r\n                                                                    <button type=\"button\" className=\"circle-btn ml-2 border-0\">\r\n                                                                        <i className=\"fa fa-user-slash\"></i>\r\n                                                                    </button>\r\n                                                                </Tooltip>\r\n                                                            }\r\n\r\n                                                            <Tooltip title=\"Archivia studente\">\r\n                                                                <button type=\"button\" className=\"btn btn-success circle-btn ml-2\" onClick={() => this.promuoviStudent(s)}>\r\n                                                                    <i className=\"fa fa-user-check\"></i>\r\n                                                                </button>\r\n                                                            </Tooltip>\r\n                                                            \r\n                                                        </td>\r\n                                                    </tr>\r\n                                                })\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </TabPane>\r\n                            })\r\n                        }\r\n                    </Tabs>\r\n                </TabPane>\r\n\r\n                <TabPane tab={<span><i className=\"fal fa-user-graduate fa-fw mr-1\"></i> Studenti archiviati</span>} key=\"2\">\r\n                    <div className=\"float-right mr-1 mb-2\">\r\n                        <label className=\"d-inline-block text-secondary mr-2\">Filtra studenti: </label>\r\n                        <Input value={filter} onChange={this.changeFilter} className=\"w-auto\" />\r\n                    </div>\r\n\r\n                    <table className=\"table table-bordered text-center\">\r\n                        <tbody className=\"border-top-0\">\r\n\r\n                            <tr>\r\n                                <th><i className=\"fa fa-check-circle fa-lg text-success\"></i></th>\r\n                                <th>Studente</th>\r\n                                <th>Codice Fiscale</th>\r\n                                <th style={{width: \"15%\"}}>Anno</th>\r\n                                <th style={{width: \"15%\"}}>Frequenza</th>\r\n                                <th style={{width: \"20%\"}}>Azioni</th>\r\n                            </tr>\r\n                            \r\n                            {\r\n                                ritirati.map(s => {\r\n                                    let bg = s.ritirato ? \"light font-italic\" : \"white\"\r\n\r\n                                    return <tr className={\"bg-\"+bg}>\r\n                                        <td>\r\n                                            {\r\n                                                !s.ritirato ? <i className=\"fa fa-check-circle fa-lg text-success\"></i> : <i className=\"fa fa-times-circle fa-lg text-danger\"></i>\r\n                                            }\r\n                                        </td>\r\n                                        <Tooltip title={s.nome + \" \" + s.cognome}>\r\n                                            <td style={{maxWidth: 0}} className=\"text-truncate\">{s.nome} {s.cognome}</td>\r\n                                        </Tooltip>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cf}</td>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">\r\n                                            {s.annoFrequentazione === 1 ? \"Primo\" : \"Secondo\"}\r\n                                        </td>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">\r\n                                            {isNaN(s.frequenza) ? 0 : s.frequenza}%\r\n                                        </td>\r\n                                        \r\n                                        <td>\r\n                                            <Tooltip title=\"Dettagli\">\r\n                                                <button type=\"button\" className=\"btn btn-info circle-btn\" onClick={() => routerHistory.push(adminRoute+\"/studenti/\" + s.idStudente)}>\r\n                                                    <i className=\"fa fa-info\"></i>\r\n                                                </button>\r\n                                            </Tooltip>                                            \r\n                                        </td>\r\n                                    </tr>\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </TabPane>\r\n            </Tabs>\r\n\r\n            <Modal title=\"Sposta studenti\" visible={this.state.confirmModal} onCancel={this.showHideModal} cancelText=\"Annulla\" okText=\"Conferma\" onOk={this.moveStudents}>\r\n                <label className=\"text-secondary\">Scegliere l'anno in cui spostare gli studenti</label>\r\n                <select className=\"custom-select\" id=\"moveToClass\">\r\n                    <option value=\"1\">Primo anno</option>\r\n                    <option value=\"2\">Secondo anno</option>\r\n                </select>\r\n\r\n                <Collapse bordered={false}>\r\n                    <Panel header=\"Mostra studenti selezionati\" key={1}>\r\n                        { \r\n                            selection.map(s => {\r\n                                return <span className=\"d-block\">\r\n                                    <strong>{s.nome} {s.cognome}</strong> ({s.annoFrequentazione}° anno)\r\n                                </span>\r\n                            })\r\n                        }\r\n                    </Panel>\r\n                </Collapse>\r\n            </Modal>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, message, DatePicker } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, formattaData, adminRoute } from \"../../utilities\"\r\nimport locale from \"antd/es/date-picker/locale/it_IT\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly dataNascita: string\r\n    readonly cf: string\r\n    readonly email: string\r\n    readonly annoScolastico: number\r\n}\r\n\r\nexport default class AddNewStudent extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            cf: \"\",\r\n            annoScolastico: 1,\r\n            email: \"\",\r\n            dataNascita: \"\"\r\n        }\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n    \r\n    changeData = (data: string) => {\r\n        this.setState({\r\n            dataNascita: data\r\n        })\r\n    }\r\n\r\n    changeAnnoScolastico = (event: any) => {\r\n        let annoS = event.target.value\r\n\r\n        this.setState({\r\n            annoScolastico: Number(annoS)\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let CF = event.target.value.trim()\r\n\r\n        this.setState({\r\n            cf: CF\r\n        })\r\n    }\r\n\r\n    aggiungiStudente = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { nome, cognome, dataNascita, cf, annoScolastico, email } = this.state\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || dataNascita === \"\" || cf === \"\" || !annoScolastico || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(cf.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        let students = [{\r\n            nome: nome.trim(),\r\n            cognome: cognome.trim(),\r\n            cf: cf,\r\n            password: cf,\r\n            email: email,\r\n            annoFrequentazione: annoScolastico,\r\n            dataNascita: formattaData(dataNascita, true),\r\n            idCorso: this.props.corso\r\n        }]\r\n\r\n        askPassword(siteUrl+\"/api/studenti\", \"post\", {\r\n            studenti: students\r\n        }, (_: any) => {\r\n            message.success(\"Studente creato con successo!\")\r\n            routerHistory.push(adminRoute+\"/studenti\")\r\n        })\r\n\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, cf, email } = this.state\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Aggiungi un nuovo studente</h3>\r\n\r\n            <form onSubmit={this.aggiungiStudente}>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Anno frequentato</label>\r\n                        <select name=\"anno\" onChange={this.changeAnnoScolastico} className=\"custom-select\">\r\n                            <option value={1}>Primo anno</option>\r\n                            <option value={2}>Secondo anno</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Data di nascita</label>\r\n                        <DatePicker locale={locale} className=\"w-100 select-date\" onChange={(_, d2) => this.changeData(d2)} format=\"DD-MM-YYYY\" />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={cf} onChange={this.changeCF} />\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-success text-uppercase w-100\">Aggiungi studente</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { IPresenze } from \"../../models/IPresenze\"\r\nimport { Tooltip, Icon, Spin, Modal, Select } from \"antd\"\r\nimport { siteUrl, formatItalian, validateTime, checkEnter, convertFromUTC, getDateTime } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { askPassword } from \"../AskConferma\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\n\r\nexport interface IProps{\r\n    readonly studente: IStudent\r\n    reloadTotali(): void\r\n}\r\nexport interface IState{\r\n    readonly presenze: IPresenze[]\r\n    readonly editingList: IPresenze[]\r\n    readonly filter: string\r\n}\r\n\r\nexport default class PresenzeTable extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            presenze: null,\r\n            editingList: [],\r\n            filter: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { studente } = this.props\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/getdetailedpresences/\"+studente.idStudente).then(response => {\r\n\r\n            let presenze = response.data as IPresenze[]\r\n\r\n            this.setState({\r\n                presenze: presenze.map(p => {\r\n                    p.ingresso = convertFromUTC(p.ingresso)\r\n                    p.uscita = getDateTime(p.uscita) === \"00:00\" ? \"Non firmata\" : convertFromUTC(p.uscita)\r\n\r\n                    return p\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    changeEntrata = (e: any, idPresenza: number) => {\r\n        let entrata = e.target.value.trim(),\r\n        presenze = this.state.editingList.map(p => {\r\n            if(p.idPresenza === idPresenza)\r\n                p.ingresso = entrata\r\n\r\n            return p\r\n        }) \r\n\r\n        this.setState({\r\n            editingList: presenze\r\n        })\r\n    }\r\n\r\n    changeUscita = (e: any, idPresenza: number) => {\r\n        let uscita = e.target.value.trim(),\r\n        presenze = this.state.editingList.map(p => {\r\n            if(p.idPresenza === idPresenza)\r\n                p.uscita = uscita\r\n\r\n            return p\r\n        }) \r\n\r\n        this.setState({\r\n            editingList: presenze\r\n        })\r\n    }\r\n\r\n    startTimeEdit = (p: IPresenze) => {\r\n        this.setState({\r\n            editingList: this.state.editingList.concat(p)\r\n        })\r\n    }\r\n\r\n    animateTds = (td1: HTMLElement, td2: HTMLElement) => {\r\n        td1.classList.add(\"edited\")\r\n        td2.classList.add(\"edited\")\r\n\r\n        setTimeout(() => {\r\n            td1.classList.remove(\"edited\")\r\n            td2.classList.remove(\"edited\")\r\n        }, 1000)\r\n    }\r\n\r\n    confirmEdit = (id: number, td1: HTMLElement, td2: HTMLElement) => {\r\n        const { presenze, editingList } = this.state,\r\n        presenza = editingList.find(p => p.idPresenza === id)\r\n\r\n        if(!validateTime(presenza.ingresso) || !validateTime(presenza.uscita)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Orari non validi. (ore:minuti)\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        let data = new Date()\r\n\r\n        askPassword(siteUrl+\"/api/presenze/\" + id, \"put\", {\r\n            idPresenza: presenza.idPresenza,\r\n            idStudente: presenza.idStudente,\r\n            ingresso: new Date(`${data.getFullYear()}-${data.getMonth() + 1}-${data.getDate()} ${presenza.ingresso}`),\r\n            uscita: new Date(`${data.getFullYear()}-${data.getMonth() + 1}-${data.getDate()} ${presenza.uscita}`),\r\n            idLezione: presenza.idLezione\r\n        }, (response: any) => {\r\n            let output = response.data\r\n\r\n            if(output.trim() === \"success\"){\r\n                let newPresenze = presenze.map(p => {\r\n                    if(p.idPresenza === id){\r\n                        return presenza\r\n                    }\r\n\r\n                    return p\r\n                })\r\n\r\n                this.setState({\r\n                    presenze: newPresenze,\r\n                    editingList: editingList.filter(p => p.idPresenza !== presenza.idPresenza)\r\n                })\r\n\r\n                this.animateTds(td1, td2)\r\n                this.props.reloadTotali()\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: output\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    getCategorie = () => {\r\n        const { presenze } = this.state \r\n        let categorie: string[] = []\r\n\r\n        presenze.forEach(p => {\r\n            if(categorie.indexOf(p.lezione) === -1)\r\n                categorie.push(p.lezione)\r\n        })\r\n\r\n        return categorie\r\n    }\r\n\r\n    changeFilter = (filter: string) => {\r\n        this.setState({\r\n            filter: filter === \"\" ? null : filter\r\n        })\r\n    }\r\n\r\n    annullaModifica = (presenza: IPresenze) => {\r\n        this.setState({\r\n            editingList: this.state.editingList.filter(p => p.idPresenza !== presenza.idPresenza)\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { presenze, editingList, filter } = this.state,\r\n        { studente } = this.props,\r\n        { Option } = Select\r\n\r\n        if(!presenze){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div>\r\n                <Spin indicator={icon} className=\"mt-3\" />\r\n            </div>\r\n        }\r\n\r\n        let presences = filter ? presenze.filter(p => p.lezione.toLowerCase() === filter.toLowerCase()) : presenze\r\n\r\n        return <div className=\"mt-3\">\r\n\r\n            <h3 className=\"d-inline-block\">Presenze dello studente</h3>\r\n\r\n            <div className=\"float-right\">\r\n                <label className=\"d-inline-block text-secondary mr-2\">Filtra per materia: </label>\r\n                <Select defaultValue=\"\" style={{ width: 150 }} onChange={this.changeFilter} showSearch>\r\n                    <Option value=\"\">Nessuna</Option>\r\n                    {\r\n                        this.getCategorie().map(l =>{\r\n                            return <Option value={l}>{l}</Option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            </div>\r\n            \r\n            <div className=\"clearfix\"></div>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Giorno</th>\r\n                        <th>Entrata</th>\r\n                        <th>Uscita</th>\r\n                        <th>Lezione</th>\r\n                        {\r\n                            !studente.promosso && <th style={{ width: \"20%\" }}>Azioni</th>\r\n                        }\r\n                    </tr>\r\n\r\n                    {\r\n                        presences.map(p => {\r\n                            let presenzaEdit = editingList.find(pre => pre.idPresenza === p.idPresenza),\r\n                            td1: HTMLElement,\r\n                            td2: HTMLElement\r\n\r\n                            return <tr>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\">{formatItalian(p.data)}</td>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\" ref={r => td1 = r}>\r\n                                    {\r\n                                        presenzaEdit ? <input type=\"text\" className=\"form-control edit-time\" value={presenzaEdit.ingresso} onChange={(e) => this.changeEntrata(e, p.idPresenza)} onKeyUp={(e) => checkEnter(e, () => this.confirmEdit(p.idPresenza, td1, td2))} /> : <span>{p.ingresso}</span>\r\n                                    }\r\n                                </td>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\" ref={r => td2 = r}>\r\n                                    {\r\n                                        presenzaEdit ? <input type=\"text\" className=\"form-control edit-time\" value={presenzaEdit.uscita} onChange={(e) => this.changeUscita(e, p.idPresenza)} onKeyUp={(e) => checkEnter(e, () => this.confirmEdit(p.idPresenza, td1, td2))} /> : <span>{p.uscita}</span>\r\n                                    }\r\n                                </td>\r\n                                <Tooltip title={p.lezione}>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{p.lezione}</td>\r\n                                </Tooltip>\r\n                                {\r\n                                    !studente.promosso && <td>\r\n                                        {\r\n                                            presenzaEdit ? <div>\r\n                                                <Tooltip title=\"Annulla\">\r\n                                                    <button type=\"button\" className=\"btn btn-danger circle-btn\" onClick={() => this.annullaModifica(p)} >\r\n                                                        <i className=\"fa fa-times\"></i>\r\n                                                    </button>\r\n                                                </Tooltip>\r\n\r\n                                                <Tooltip title=\"Conferma modifiche\">\r\n                                                    <button type=\"button\" className=\"btn btn-success circle-btn ml-2\" onClick={() => this.confirmEdit(p.idPresenza, td1, td2)} >\r\n                                                        <i className=\"fa fa-check\"></i>\r\n                                                    </button>\r\n                                                </Tooltip>\r\n                                            </div> : <Tooltip title=\"Modifica orari\">\r\n                                                <button type=\"button\" className=\"btn btn-orange circle-btn\" onClick={() => this.startTimeEdit(p)}>\r\n                                                    <i className=\"fa fa-user-edit\"></i>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                        }\r\n                                    </td>\r\n                                }\r\n                            </tr>\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { RouteComponentProps } from \"react-router\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport { routerHistory } from \"../..\"\r\nimport { Icon, Spin, Progress, Statistic, Modal, Button } from \"antd\"\r\nimport PresenzeTable from \"./PresenzeTable\"\r\nimport Axios from \"axios\"\r\nimport { formatItalian, siteUrl, adminRoute } from \"../../utilities\"\r\nimport QRCode from \"qrcode.react\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly student: IStudent\r\n    readonly totPresenze: number\r\n    readonly oreTotali: number\r\n    readonly modal: boolean\r\n}\r\n\r\nexport default class StudentDetails extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            student: null,\r\n            totPresenze: null,\r\n            oreTotali: null,\r\n            modal: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(adminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/getstudentibyid/\" + id).then(response => {\r\n            this.setState({\r\n                student: response.data as IStudent\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/gettotaleorelezioni/\" + id).then(response => {\r\n            this.setState({\r\n                oreTotali: response.data as number\r\n            })\r\n        })\r\n\r\n        this.loadTotali()\r\n    }\r\n\r\n    loadTotali = () => {\r\n        this.setState({\r\n            totPresenze: null\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/gethoursamount/\" + this.props.match.params.id).then(response => {\r\n            this.setState({\r\n                totPresenze: response.data as number\r\n            })\r\n        })\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    downloadQR = () => {\r\n        const { student } = this.state,\r\n        canvas = document.getElementById(\"qr-code-image\") as any\r\n        const pngUrl = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\")\r\n        let downloadLink = document.createElement(\"a\")\r\n        downloadLink.href = pngUrl\r\n        downloadLink.download = `qrcode${student.nome}${student.cognome}.png`\r\n        document.body.appendChild(downloadLink)\r\n        downloadLink.click()\r\n        document.body.removeChild(downloadLink)\r\n    }\r\n\r\n    getQRCode = () => {\r\n        const { student } = this.state\r\n\r\n        return student.codice\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { student, totPresenze, oreTotali, modal } = this.state\r\n        \r\n        if(!student){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        let perc = student.frequenza !== null ? Math.round(100 * totPresenze / oreTotali) : null,\r\n        color = perc >= 80 ? \"var(--success)\" : \"var(--danger)\"\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <div className=\"row mx-0\">\r\n                <div className=\"col-12 col-md-6 pl-md-0 mb-2 mb-md-0\">\r\n                    <div className=\"p-3 bg-white border rounded\">\r\n                        <span className=\"border-text\">\r\n                            {\r\n                                student.ritirato ? \"Ritirato: \" + formatItalian(student.dataRitiro) : student.annoFrequentazione === 1 ? \"Primo anno\" : \"Secondo anno\"\r\n                            }\r\n                        </span>\r\n                        <h4 className=\"text-uppercase mb-2 text-truncate\">{student.nome} {student.cognome}</h4>\r\n                        <p className=\"mb-0\"><strong>Data di nascita</strong>: {formatItalian(student.dataNascita)}</p>\r\n                        <p className=\"mb-0\"><strong>E-mail</strong>: {student.email}</p>\r\n                        <Button onClick={this.toggleModal} className=\"float-right\" type=\"link\">\r\n                            Mostra codice QR\r\n                        </Button>\r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 pr-md-0\">\r\n                    <div className=\"p-3 bg-white border rounded\">\r\n                        {\r\n                            perc !== null ? <Progress type=\"circle\" percent={perc} width={80} className=\"float-left mr-3\" strokeColor={color} format={percent => `${percent}%`}  /> : <Spin indicator={<Icon type=\"loading\" spin />} />\r\n                        }\r\n\r\n                        {\r\n                            oreTotali !== null && totPresenze !== null ? <Statistic title=\"Presenze totali (ore)\" value={totPresenze} suffix={\"/ \"+oreTotali} decimalSeparator=\",\" groupSeparator=\".\" /> : <Spin indicator={<Icon type=\"loading\" spin />} />\r\n                        }\r\n                        \r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <PresenzeTable studente={student} reloadTotali={this.loadTotali} />\r\n            \r\n            <Modal visible={modal} maskClosable={true} centered title={\r\n                <span>\r\n                    <i className=\"far fa-qrcode fa-fw fa-lg text-primary mr-2\"></i>Codice QR dello studente\r\n                </span>\r\n            } onCancel={this.toggleModal} width={350} onOk={this.downloadQR}\r\n            footer={[\r\n                <Button type=\"primary\" onClick={this.downloadQR}>\r\n                    <i className=\"far fa-arrow-to-bottom mr-2\"></i> Salva codice\r\n                </Button>,\r\n                <Button type=\"default\" onClick={this.toggleModal}>Chiudi</Button>\r\n            ]}>\r\n                <div className=\"text-center\">\r\n                    <p>Salva il codice sottostante e condividilo con <strong>{student.nome} {student.cognome}.</strong></p>\r\n                    <div className=\"my-2\">\r\n                        <QRCode id=\"qr-code-image\" value={this.getQRCode()} size={200} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { IDocente } from \"../../models/IDocente\"\r\nimport { routerHistory } from \"../..\"\r\nimport { Modal, Tooltip, Spin, Icon, Switch, message } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, adminRoute } from \"../../utilities\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly docenti: IDocente[]\r\n    readonly showAll: boolean\r\n}\r\n\r\nexport default class DocentiList extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            docenti: null,\r\n            showAll: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/docenti\").then(response => {\r\n            this.setState({\r\n                docenti: response.data as IDocente[]\r\n            })\r\n        })\r\n    }\r\n\r\n    switchList = () => {\r\n        this.setState({\r\n            showAll: !this.state.showAll\r\n        })\r\n    }\r\n\r\n    showDeleteConfirm = (docente: IDocente) => {\r\n        Modal.confirm({\r\n            title: `ATTENZIONE: si sta per ritirare un docente (${docente.nome} ${docente.cognome})`,\r\n            content: \"I dati identificativi del docente, le lezioni e le presenze verranno comunque mantenuti, ma il docente verrà ritirato da tutti i corsi in cui insegna. In seguito sarà possibile reintegrarlo nel corso se necessario.\",\r\n            okText: \"Confermo\",\r\n            okType: \"danger\",\r\n            cancelText: \"Annulla\",\r\n            onOk: () => this.ritiraOAnnulla(docente.idDocente, \"Docente ritirato con successo!\")\r\n        })\r\n    }\r\n\r\n    ritiraOAnnulla = (idDocente: number, msg: string) => {\r\n        askPassword(siteUrl+\"/api/docenti/ritiradocente\", \"put\", {\r\n            idDocente: idDocente\r\n        }, (response: any) => {\r\n\r\n            let docenti = response.data as IDocente[]\r\n\r\n            this.setState({\r\n                docenti: docenti\r\n            })\r\n\r\n            message.success(msg)\r\n        }, () => {\r\n            this.setState({\r\n                docenti: null\r\n            })\r\n        })\r\n    }\r\n\r\n    sortbyId = (a: IDocente, b: IDocente) => { \r\n        if(a.idDocente > b.idDocente)\r\n            return 1\r\n        if(a.idDocente < b.idDocente)\r\n            return -1\r\n\r\n        return 0\r\n    }\r\n\r\n    backRetire = (doc: IDocente) => {\r\n        Modal.confirm({\r\n            title: `${doc.nome} ${doc.cognome}`,\r\n            content: \"Questo docente verrà reintegrato all'interno del corso.\",\r\n            okText: \"Confermo\",\r\n            okType: \"danger\",\r\n            cancelText: \"Annulla\",\r\n            onOk: () => this.ritiraOAnnulla(doc.idDocente, \"Docente reintegrato con successo!\")\r\n        })\r\n    }\r\n\r\n    isInCorso = (doc: IDocente) => {\r\n        return doc.corsi.indexOf(this.props.corso) !== -1\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { docenti, showAll } = this.state\r\n\r\n        if(!docenti){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        let lista = showAll ? docenti : docenti.filter(d => this.isInCorso(d)),\r\n        docs = lista.sort(this.sortbyId).sort((a, _) => a.ritirato ? 0 : -1)\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Docenti del corso</h3>\r\n\r\n            <label className=\"pointer\" style={{ transform: \"translateY(50%)\" }}>\r\n                <Switch checked={!showAll} onChange={this.switchList} className=\"mr-1 align-top\" /> Mostra solo i docenti del mio corso\r\n            </label>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={() => routerHistory.push(adminRoute+\"/docenti/new\")}>\r\n                <i className=\"fal fa-plus fa-fw\"></i> Aggiungi docente\r\n            </button>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                \r\n                    <tbody>\r\n                        <tr>\r\n                            <th style={{width: \"35%\"}}>Docente</th>\r\n                            <th style={{width: \"15%\"}}>Ore 1° anno</th>\r\n                            <th style={{width: \"15%\"}}>Ore 2° anno</th>\r\n                            <th style={{width: \"20%\"}}>Azioni</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            docs.map(d => {   \r\n                                let bg = d.ritirato ? \"light font-italic\" : !this.isInCorso(d) ? \"transblue\" :\"white\"\r\n\r\n                                return <tr className={\"bg-\"+bg}>\r\n                                    <Tooltip title={d.nome + \" \" + d.cognome}>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{d.nome} {d.cognome}</td>\r\n                                    </Tooltip>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{d.monteOre.orePrimo}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{d.monteOre.oreSecondo}</td>\r\n                                    <td>\r\n                                        <Tooltip title=\"Dettagli\">\r\n                                            <button type=\"button\" className=\"btn btn-info circle-btn\" onClick={() => routerHistory.push(adminRoute+\"/docenti/\" + d.idDocente)}>\r\n                                                <i className=\"fa fa-info\"></i>\r\n                                            </button>\r\n                                        </Tooltip>\r\n\r\n                                        {\r\n                                            !d.ritirato && <Tooltip title=\"Modifica\">\r\n                                                <button type=\"button\" className=\"btn btn-warning text-white circle-btn ml-2\" onClick={() => routerHistory.push(adminRoute+\"/docenti/edit/\" + d.idDocente)}>\r\n                                                    <i className=\"fa fa-pen\"></i>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                        }\r\n                                        \r\n                                        {\r\n                                            !d.ritirato && <Tooltip title=\"Segna come ritirato\">\r\n                                                <button type=\"button\" className=\"btn btn-danger circle-btn ml-2\" onClick={() => this.showDeleteConfirm(d)}>\r\n                                                    <i className=\"fa fa-user-times\"></i>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                        }\r\n\r\n                                        {\r\n                                            d.ritirato && <Tooltip title=\"Reintegra nel corso\">\r\n                                                <button type=\"button\" className=\"btn btn-danger circle-btn ml-2\" onClick={() => this.backRetire(d)}>\r\n                                                    <i className=\"fa fa-reply\"></i>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, message, Icon, Spin, Checkbox } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, adminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { IMateria } from \"../../models/IMateria\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly CF: string\r\n    readonly email: string\r\n    readonly materie: IMateria[]\r\n    readonly corsi: ICorso[]\r\n    readonly materieSel: number[]\r\n    readonly corsiSel: number[] \r\n}\r\n\r\nexport default class AddNewDocente extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            CF: \"\",\r\n            email: \"\",\r\n            corsi: null,\r\n            materie: null,\r\n            corsiSel: [],\r\n            materieSel: []\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                corsi: corsi\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/materie/getmateriebycorso/\"+this.props.corso).then(response => {\r\n            let materie = response.data as IMateria[]\r\n\r\n            this.setState({\r\n                materie: materie\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let CF = event.target.value.trim()\r\n\r\n        this.setState({\r\n            CF: CF\r\n        })\r\n    }\r\n\r\n    aggiungiDocente = (e: any) => {\r\n        e.preventDefault()\r\n        \r\n        const { nome, cognome,CF, email, corsiSel, materieSel } = this.state\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || CF === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(CF.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!materieSel.length){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Scegliere almeno una materia.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!corsiSel.length){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Scegliere almeno un corso.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        let cipher = new Cipher(),\r\n        password = cipher.encode(CF)\r\n\r\n        askPassword(siteUrl+\"/api/docenti\", \"post\", {\r\n            docente: {\r\n                nome: nome.trim(),\r\n                cognome: cognome.trim(),\r\n                cf: CF,\r\n                password: password,\r\n                email: email,\r\n                tenere: corsiSel.map(c => { return { idCorso: c, idDocente: 0 } }),\r\n                insegnare: materieSel.map(m => { return { idMateria: m, idDocente: 0 } }),\r\n            }\r\n        }, (_: any) => {\r\n            message.success(\"Docente creato con successo!\")\r\n            routerHistory.push(adminRoute+\"/docenti\")\r\n        })\r\n    }\r\n\r\n    switchMateria = (materiaId: number) => {\r\n        let find = this.state.materieSel.find(m => m === materiaId),\r\n        newList = find ? this.state.materieSel.filter(m => m !== materiaId) : this.state.materieSel.concat(materiaId)\r\n\r\n        this.setState({\r\n            materieSel: newList\r\n        })\r\n    }\r\n\r\n    switchCorso = (corsoId: number) => {\r\n        let find = this.state.corsiSel.find(m => m === corsoId),\r\n        newList = find ? this.state.corsiSel.filter(m => m !== corsoId) : this.state.corsiSel.concat(corsoId)\r\n\r\n        this.setState({\r\n            corsiSel: newList\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, CF, email, materie, materieSel, corsi, corsiSel } = this.state\r\n\r\n        if(!materie || !corsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        if(!materie.length){\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                È necessario creare almeno una materia per poter inserire un nuovo docente.\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Aggiungi un nuovo docente</h3>\r\n\r\n            <form onSubmit={this.aggiungiDocente}>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={CF} onChange={this.changeCF} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Materie insegnate dal docente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                materie.map(m => {\r\n                                    let find = materieSel.find(f => f === m.idMateria),\r\n                                    checked = find ? true : false,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n\r\n                                    return <label className={\"option \" + classname}>\r\n                                        <Checkbox className=\"mr-2\" onChange={() => this.switchMateria(m.idMateria)} checked={checked} /> {m.nome}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Corsi del docente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                corsi.map(m => {\r\n                                    let find = corsiSel.find(f => f === m.idCorso),\r\n                                    checked = find ? true : false,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n\r\n                                    return <label className={\"option \" + classname}>\r\n                                        <Checkbox className=\"mr-2\" onChange={() => this.switchCorso(m.idCorso)} checked={checked} /> {m.nome}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-success text-uppercase w-100\">Aggiungi docente</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Tooltip, Icon, Spin, Modal, Select } from \"antd\"\r\nimport { siteUrl, formatItalian, validateTime, checkEnter, convertFromUTC, getDateTime } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { IPresenzaDocente } from \"../../models/IPresenzaDocente\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IProps{\r\n    readonly idDocente: number\r\n    readonly canEdit: boolean\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly presenze: IPresenzaDocente[]\r\n    readonly editingList: IPresenzaDocente[]\r\n    readonly filter: string\r\n}\r\n\r\nexport default class LezioniDocenteTable extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            presenze: null,\r\n            editingList: [],\r\n            filter: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { corso, idDocente } = this.props\r\n\r\n        Axios.get(siteUrl+\"/api/lezioni/getlezionidocente/\"+idDocente+\"/\"+corso).then(response => {\r\n            let presenze = response.data as IPresenzaDocente[]\r\n\r\n            this.setState({\r\n                presenze: presenze.map(p => {\r\n                    p.ingresso = convertFromUTC(p.ingresso)\r\n                    p.uscita = getDateTime(p.uscita) === \"00:00\" ? \"Non firmata\" : convertFromUTC(p.uscita)\r\n\r\n                    return p\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    changeEntrata = (e: any, idPresenza: number) => {\r\n        let entrata = e.target.value.trim(),\r\n        presenze = this.state.editingList.map(p => {\r\n            if(p.idPresenza === idPresenza)\r\n                p.ingresso = entrata\r\n            \r\n            return p\r\n        })\r\n\r\n        this.setState({\r\n            editingList: presenze\r\n        })\r\n    }\r\n\r\n    changeUscita = (e: any, idPresenza: number) => {\r\n        let uscita = e.target.value.trim(),\r\n        presenze = this.state.editingList.map(p => {\r\n            if(p.idPresenza === idPresenza)\r\n                p.uscita = uscita\r\n            \r\n            return p\r\n        })\r\n\r\n        this.setState({\r\n            editingList: presenze\r\n        })\r\n    }\r\n\r\n    startTimeEdit = (p: IPresenzaDocente) => {\r\n        this.setState({\r\n            editingList: this.state.editingList.concat(p)\r\n        })\r\n    }\r\n\r\n    animateTds = (td1: HTMLElement, td2: HTMLElement) => {\r\n        td1.classList.add(\"edited\")\r\n        td2.classList.add(\"edited\")\r\n\r\n        setTimeout(() => {\r\n            td1.classList.remove(\"edited\")\r\n            td2.classList.remove(\"edited\")\r\n        }, 1000)\r\n    }\r\n\r\n    confirmEdit = (id: number, td1: HTMLElement, td2: HTMLElement) => {\r\n        const { editingList, presenze } = this.state,\r\n        presenza = editingList.find(p => p.idPresenza === id)\r\n        \r\n        if(!validateTime(presenza.ingresso) || !validateTime(presenza.uscita)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Orari non validi. (ore:minuti)\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        let data = new Date()\r\n\r\n        askPassword(siteUrl+\"/api/presenzedocente/\" + id, \"put\", {\r\n            idPresenza: id,\r\n            ingresso: new Date(`${data.getFullYear()}-${data.getMonth() + 1}-${data.getDate()} ${presenza.ingresso}`),\r\n            uscita: new Date(`${data.getFullYear()}-${data.getMonth() + 1}-${data.getDate()} ${presenza.uscita}`),\r\n            idDocente: presenza.idDocente,\r\n            idLezione: presenza.idLezione\r\n        }, (response: any) => {\r\n            let output = response.data\r\n\r\n            if(output.trim() === \"success\"){\r\n                let newPresenze = presenze.map(p => {\r\n                    if(p.idPresenza === id){\r\n                        return presenza\r\n                    }\r\n\r\n                    return p\r\n                })\r\n\r\n                this.setState({\r\n                    presenze: newPresenze,\r\n                    editingList: editingList.filter(p => p.idPresenza !== presenza.idPresenza)\r\n                })\r\n                \r\n                this.animateTds(td1, td2)\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: output\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    getCategorie = () => {\r\n        const { presenze } = this.state \r\n        let categorie: string[] = []\r\n\r\n        presenze.forEach(p => {\r\n            if(categorie.indexOf(p.lezione) === -1)\r\n                categorie.push(p.lezione)\r\n        })\r\n\r\n        return categorie\r\n    }\r\n\r\n    changeFilter = (filter: string) => {\r\n        this.setState({\r\n            filter: filter === \"\" ? null : filter\r\n        })\r\n    }\r\n\r\n    annullaModifica = (presenza: IPresenzaDocente) => {\r\n        this.setState({\r\n            editingList: this.state.editingList.filter(p => p.idPresenza !== presenza.idPresenza)\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { presenze, editingList, filter } = this.state,\r\n        { canEdit } = this.props,\r\n        { Option } = Select\r\n\r\n        if(!presenze){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div>\r\n                <Spin indicator={icon} className=\"mt-3\" />\r\n            </div>\r\n        }\r\n\r\n        let presences = filter ? presenze.filter(p => p.lezione.toLowerCase() === filter.toLowerCase()) : presenze\r\n\r\n        return <div className=\"mt-3\">\r\n            <h3 className=\"d-inline-block\">Lezioni tenute dal docente</h3>\r\n\r\n            <div className=\"float-right\">\r\n                <label className=\"d-inline-block text-secondary mr-2\">Filtra per materia: </label>\r\n                <Select defaultValue=\"\" style={{ width: 150 }} onChange={this.changeFilter} showSearch>\r\n                    <Option value=\"\">Nessuna</Option>\r\n                    {\r\n                        this.getCategorie().map(l =>{\r\n                            return <Option value={l}>{l}</Option>\r\n                        })\r\n                    }\r\n                </Select>\r\n            </div>\r\n\r\n            <div className=\"clearfix\"></div>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                <tbody>\r\n                    <tr className=\"thead-light\">\r\n                        <th>Giorno</th>\r\n                        <th>Entrata</th>\r\n                        <th>Uscita</th>\r\n                        <th>Lezione</th>\r\n                        {\r\n                            canEdit && <th style={{ width: \"20%\" }}>Azioni</th>\r\n                        }\r\n                    </tr>\r\n\r\n                    {\r\n                        presences.map(p => {\r\n                            let editPresenza = editingList.find(pre => pre.idPresenza === p.idPresenza),\r\n                            td1: HTMLElement,\r\n                            td2: HTMLElement\r\n\r\n                            return <tr>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\">{formatItalian(p.data)}</td>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\" ref={r => td1 = r}>\r\n                                    {\r\n                                        editPresenza ? <input type=\"text\" className=\"form-control edit-time\" value={editPresenza.ingresso} onChange={(e) => this.changeEntrata(e, p.idPresenza)} onKeyUp={(e) => checkEnter(e, () => this.confirmEdit(p.idPresenza, td1, td2))} /> : <span>{p.ingresso}</span>\r\n                                    }\r\n                                </td>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\" ref={r => td2 = r}>\r\n                                    {\r\n                                        editPresenza ? <input type=\"text\" className=\"form-control edit-time\" value={editPresenza.uscita} onChange={(e) => this.changeUscita(e, p.idPresenza)} onKeyUp={(e) => checkEnter(e, () => this.confirmEdit(p.idPresenza, td1, td2))} /> : <span>{p.uscita}</span>\r\n                                    }\r\n                                </td>\r\n                                <Tooltip title={p.lezione}>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{p.lezione}</td>\r\n                                </Tooltip>\r\n                                {\r\n                                    canEdit && <td>\r\n                                        {\r\n                                            editPresenza ? <div>\r\n                                                <Tooltip title=\"Annulla\">\r\n                                                    <button type=\"button\" className=\"btn btn-danger circle-btn\" onClick={() => this.annullaModifica(p)}>\r\n                                                        <i className=\"fa fa-times\"></i>\r\n                                                    </button>\r\n                                                </Tooltip>\r\n\r\n                                                <Tooltip title=\"Conferma modifiche\">\r\n                                                    <button type=\"button\" className=\"btn btn-success circle-btn ml-2\" onClick={() => this.confirmEdit(p.idPresenza, td1, td2)}>\r\n                                                        <i className=\"fa fa-check\"></i>\r\n                                                    </button>\r\n                                                </Tooltip>\r\n                                            </div> : <Tooltip title=\"Modifica orari\">\r\n                                                <button type=\"button\" className=\"btn btn-orange circle-btn\" onClick={() => this.startTimeEdit(p)}>\r\n                                                    <i className=\"fa fa-user-edit\"></i>\r\n                                                </button>\r\n                                            </Tooltip>\r\n                                        }\r\n                                        \r\n                                    </td>\r\n                                }\r\n                            </tr>\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { RouteComponentProps } from \"react-router\"\r\nimport { routerHistory } from \"../..\"\r\nimport { Icon, Spin, Modal, Button, Statistic } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { IDocente } from \"../../models/IDocente\"\r\nimport LezioniDocenteTable from \"./LezioniDocenteTable\"\r\nimport { siteUrl, adminRoute } from \"../../utilities\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\nimport QRCode from \"qrcode.react\"\r\n\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly docente: IDocente\r\n    readonly modal: boolean\r\n}\r\n\r\nexport default class DocenteDetails extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            docente: null,\r\n            modal: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(adminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/docenti/getdocentibyid/\" + id).then(response => {\r\n            this.setState({\r\n                docente: response.data as IDocente\r\n            })\r\n        })\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    downloadQR = () => {\r\n        const { docente } = this.state,\r\n        canvas = document.getElementById(\"qr-code-image\") as any\r\n        const pngUrl = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\")\r\n        let downloadLink = document.createElement(\"a\")\r\n        downloadLink.href = pngUrl\r\n        downloadLink.download = `qrcode${docente.nome}${docente.cognome}.png`\r\n        document.body.appendChild(downloadLink)\r\n        downloadLink.click()\r\n        document.body.removeChild(downloadLink)\r\n    }\r\n\r\n    getQRCode = () => {\r\n        const { docente } = this.state\r\n        let cipher = new Cipher(),\r\n        code = cipher.encode(docente.cf)\r\n\r\n        return code\r\n    }\r\n\r\n    isInCorso = (doc: IDocente) => {\r\n        return doc.corsi.indexOf(this.props.corso) !== -1\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { docente, modal } = this.state\r\n\r\n        if(!docente){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <div className=\"row mx-0\">\r\n                <div className=\"col-12 col-md-6 pl-md-0 mb-2 mb-md-0\">\r\n\r\n                    <div className=\"p-3 bg-white border rounded\">\r\n                        {\r\n                            docente.ritirato && <span className=\"border-text\">Ritirato</span>\r\n                        }\r\n\r\n                        <h4 className=\"text-uppercase mb-2 text-truncate\">{docente.nome} {docente.cognome}</h4>\r\n                        <p className=\"mb-0\"><strong>E-mail</strong>: {docente.email}</p>\r\n                        <Button onClick={this.toggleModal} className=\"float-right\" type=\"link\">\r\n                            Mostra codice QR\r\n                        </Button>\r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3 pr-md-0\">\r\n                    <div className=\"p-3 bg-white border rounded text-center\" style={{ display: \"flex\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                        <Statistic title=\"Ore svolte\" value={docente.monteOre} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <LezioniDocenteTable idDocente={docente.idDocente} canEdit={this.isInCorso(docente)} corso={this.props.corso} />\r\n\r\n            <Modal visible={modal} maskClosable={true} centered title={\r\n                <span>\r\n                    <i className=\"far fa-qrcode fa-fw fa-lg text-primary mr-2\"></i>Codice QR del docente\r\n                </span>\r\n            } onCancel={this.toggleModal} width={350} onOk={this.downloadQR}\r\n            footer={[\r\n                <Button type=\"primary\" onClick={this.downloadQR}>\r\n                    <i className=\"far fa-arrow-to-bottom mr-2\"></i> Salva codice\r\n                </Button>,\r\n                <Button type=\"default\" onClick={this.toggleModal}>Chiudi</Button>\r\n            ]}>\r\n                <div className=\"text-center\">\r\n                    <p>Salva il codice sottostante e condividilo con <strong>{docente.nome} {docente.cognome}.</strong></p>\r\n                    <div className=\"my-2\">\r\n                        <QRCode id=\"qr-code-image\" value={this.getQRCode()} size={200} />\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Icon, Spin, Checkbox, message } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, adminRoute } from \"../../utilities\"\r\nimport { IDocente } from \"../../models/IDocente\"\r\nimport Axios from \"axios\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { IMateria } from \"../../models/IMateria\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly docente: IDocente\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly CF: string\r\n    readonly email: string\r\n    readonly materie: IMateria[]\r\n    readonly corsi: ICorso[]\r\n    readonly materieSel: number[]\r\n    readonly corsiSel: number[] \r\n}\r\n\r\nexport default class EditDocente extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            docente: null,\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            CF: \"\",\r\n            email: \"\",\r\n            materie: [],\r\n            materieSel: [],\r\n            corsi: [],\r\n            corsiSel: []\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(adminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/docenti/getdocentibyid/\" + id).then(response => {\r\n            let doc = response.data as IDocente\r\n\r\n            this.setState({\r\n                docente: doc,\r\n                nome: doc.nome,\r\n                cognome: doc.cognome,\r\n                CF: doc.cf,\r\n                email: doc.email,\r\n                materieSel: doc.materie && doc.materie.length ? doc.materie : [],\r\n                corsiSel: doc.corsi && doc.corsi.length ? doc.corsi : []\r\n            })\r\n        })\r\n        \r\n        Axios.get(siteUrl+\"/api/materie/getmateriebycorso/\"+this.props.corso).then(response => {\r\n            let materie = response.data as IMateria[]\r\n            \r\n            this.setState({\r\n                materie: materie\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n            \r\n            this.setState({\r\n                corsi: corsi\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let CF = event.target.value.trim()\r\n\r\n        this.setState({\r\n            CF: CF\r\n        })\r\n    }\r\n\r\n    modificaDocente = (e: any) => {\r\n        e.preventDefault()\r\n        \r\n        const { docente, nome, cognome, CF, email, corsiSel, materieSel } = this.state\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || CF === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!materieSel.length){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Scegliere almeno una materia.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!corsiSel.length){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Scegliere almeno un corso.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(CF.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        askPassword(siteUrl+\"/api/docenti/\" + this.props.match.params.id, \"put\", {\r\n            docente: {\r\n                idDocente: parseInt(this.props.match.params.id),\r\n                nome: nome.trim(),\r\n                cognome: cognome.trim(),\r\n                email: email,\r\n                cf: CF,\r\n                tenere: corsiSel.map(c => { return { idCorso: c, idDocente: docente.idDocente } }),\r\n                insegnare: materieSel.map(m => { return { idMateria: m, idDocente: docente.idDocente } }),\r\n                ritirato: docente.ritirato\r\n            }\r\n        }, (_: any) => {\r\n            message.success(\"Docente modificato con successo!\")\r\n            routerHistory.push(adminRoute+\"/docenti\")\r\n        })\r\n    }\r\n\r\n    switchMateria = (materiaId: number) => {\r\n        let find = this.state.materieSel.find(m => m === materiaId),\r\n        newList = find ? this.state.materieSel.filter(m => m !== materiaId) : this.state.materieSel.concat(materiaId)\r\n\r\n        this.setState({\r\n            materieSel: newList\r\n        })\r\n    }\r\n\r\n    switchCorso = (corsoId: number) => {\r\n        let find = this.state.corsiSel.find(m => m === corsoId),\r\n        newList = find ? this.state.corsiSel.filter(m => m !== corsoId) : this.state.corsiSel.concat(corsoId)\r\n\r\n        this.setState({\r\n            corsiSel: newList\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, CF, docente, email, materie, materieSel, corsi, corsiSel } = this.state\r\n\r\n        if(!docente || !materie.length || !corsi.length){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Modifica di un docente</h3>\r\n\r\n            <form onSubmit={this.modificaDocente}>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={CF} onChange={this.changeCF} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Materie insegnate dal docente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                materie.map(m => {\r\n                                    let find = materieSel.find(f => f === m.idMateria),\r\n                                    checked = find ? true : false,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n\r\n                                    return <label className={\"option \" + classname}>\r\n                                        <Checkbox className=\"mr-2\" onChange={() => this.switchMateria(m.idMateria)} checked={checked} /> {m.nome}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Corsi del docente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                corsi.map(m => {\r\n                                    let find = corsiSel.find(f => f === m.idCorso),\r\n                                    checked = find ? true : false,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n\r\n                                    return <label className={\"option \" + classname}>\r\n                                        <Checkbox className=\"mr-2\" onChange={() => this.switchCorso(m.idCorso)} checked={checked} /> {m.nome}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-success text-uppercase w-100\">Modifica docente</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Icon, Spin, message, DatePicker } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, formattaData, formatItalian, adminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport locale from \"antd/es/date-picker/locale/it_IT\"\r\nimport moment from \"moment\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly studente: IStudent\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly dataNascita: string\r\n    readonly CF: string\r\n    readonly email: string\r\n}\r\n\r\nexport default class EditStudente extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            studente: null,\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            dataNascita: \"\",\r\n            CF: \"\",\r\n            email: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(adminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/getstudentibyid/\" + id).then(response => {\r\n            let stu = response.data as IStudent\r\n\r\n            this.setState({\r\n                studente: stu,\r\n                nome: stu.nome,\r\n                cognome: stu.cognome,\r\n                CF: stu.cf,\r\n                dataNascita: formatItalian(stu.dataNascita),\r\n                email: stu.email\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeData = (data: string) => {\r\n        this.setState({\r\n            dataNascita: data\r\n        })\r\n    }\r\n\r\n    changeCF = (event: any) => {\r\n        let CF = event.target.value.trim()\r\n\r\n        this.setState({\r\n            CF: CF\r\n        })\r\n    }\r\n\r\n    modificaStudente = (e: any) => {\r\n        e.preventDefault()\r\n        \r\n        const { nome, cognome, dataNascita, CF, email, studente } = this.state\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || dataNascita === \"\" || CF === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(CF.length !== 16){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Codice Fiscale non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        askPassword(siteUrl+\"/api/studenti/\" + studente.idStudente, \"put\", {\r\n            studente: {\r\n                idStudente: studente.idStudente,\r\n                nome: nome.trim(),\r\n                cognome: cognome.trim(),\r\n                email: email,\r\n                cf: CF,\r\n                idCorso: this.props.corso,\r\n                annoFrequentazione: studente.annoFrequentazione,\r\n                dataNascita: formattaData(dataNascita, true),\r\n                ritirato: studente.ritirato,\r\n                promosso: studente.promosso\r\n            }\r\n        }, (_: any) => {\r\n            message.success(\"Studente modificato con successo!\")\r\n            routerHistory.push(adminRoute+\"/studenti\")\r\n        })\r\n        \r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, dataNascita, CF, studente, email } = this.state\r\n\r\n        if(!studente){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Modifica di uno studente</h3>\r\n\r\n            <form onSubmit={this.modificaStudente}>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Data di nascita</label>\r\n                        <DatePicker locale={locale} className=\"w-100 select-date\" onChange={(_, d2) => this.changeData(d2)} format=\"DD-MM-YYYY\" defaultValue={moment(dataNascita, \"DD-MM-YYYY\")} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Codice Fiscale</label>\r\n                        <input name=\"cf\" type=\"text\" className=\"form-control\" maxLength={16} value={CF} onChange={this.changeCF} />\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-success text-uppercase w-100\">Modifica studente</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport Dragger from \"antd/lib/upload/Dragger\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport { Modal, Tooltip, Icon, message } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { formattaData, capitalizeFirst, siteUrl, resizePopup, formatItalian, adminRoute } from \"../../utilities\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly addList: IStudent[]\r\n    readonly fileContent: string\r\n    readonly fields: any\r\n}\r\n\r\nconst fields = [{\r\n    label: \"Nome\",\r\n    field: \"nome\"\r\n},{\r\n    label: \"Cognome\",\r\n    field: \"cognome\"\r\n},{\r\n    label: \"Codice Fiscale\",\r\n    field: \"cf\"\r\n},{\r\n    label: \"Data di nascita\",\r\n    field: \"dataNascita\"\r\n},{\r\n    label: \"E-mail\",\r\n    field: \"email\"\r\n}]\r\n\r\nexport default class StudentsImport extends React.PureComponent<IProps, IState>{\r\n    \r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            addList: [],\r\n            fileContent: \"\",\r\n            fields: {\r\n                nome: 0,\r\n                cognome: 0,\r\n                cf: 0,\r\n                dataNascita: 0,\r\n                email: 0,\r\n                annoFrequentazione: 1\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        resizePopup()\r\n    }\r\n\r\n    splitCSV = (data: string) => {\r\n        let regex = /([\"'])(?:(?=(\\\\?))\\2.)*?\\1/g,\r\n        pieces = data.match(regex)\r\n\r\n        return pieces.map(p => { return p.replace(/[\"]/g, '') })\r\n    }\r\n\r\n    renderOptions = () => {\r\n        let rows = this.state.fileContent.split(\"\\n\"),\r\n        cells = this.splitCSV(rows[0]),\r\n        options = cells.map((c, i) => {\r\n            if(c === \"\")\r\n                return null\r\n\r\n            return <option value={i}>{c}</option>\r\n        })\r\n\r\n        return options\r\n    }\r\n\r\n    changeVarPos = (e: any, varName: string) => {\r\n        let value = e.target.value,\r\n        obj = this.state.fields\r\n\r\n        obj[varName] = value\r\n\r\n        this.setState({\r\n            fields: obj\r\n        })\r\n    }\r\n\r\n    readFile = (file: any) => {\r\n        const reader = new FileReader()\r\n\r\n        reader.onload = e => {\r\n            this.setState({\r\n                fileContent: String(e.target.result).trim()\r\n            })\r\n\r\n            Modal.info({\r\n                width: 500,\r\n                centered: true,\r\n                title: \"Selezionare i campi da abbinare\",\r\n                icon: <Icon type=\"api\" style={{ color: \"var(--success)\" }} />,\r\n                maskClosable: true,\r\n                content: <div style={{ marginLeft: -38 }}>\r\n                    <div className=\"row mt-3 px-0\">\r\n                        <div className=\"col-4\">\r\n                            <label className=\"mt-2\">Classe: </label>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <select className=\"custom-select pointer\" style={{ height: 35 }} onChange={(e) => this.changeVarPos(e, \"annoFrequentazione\")}>\r\n                                <option value=\"1\">Primo anno</option>\r\n                                <option value=\"2\">Secondo anno</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        fields.map(f => {\r\n                            return <div className=\"row mt-3 px-0\">\r\n                                <div className=\"col-4\">\r\n                                    <label className=\"mt-2\">{f.label}: </label>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <select className=\"custom-select pointer\" style={{ height: 35 }} onChange={(e) => this.changeVarPos(e, f.field)}>\r\n                                        {this.renderOptions()}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>,\r\n                onOk: this.showImportPreview,\r\n                okText: \"Prosegui\"\r\n            })\r\n        }\r\n\r\n        reader.readAsText(file, \"ISO-8859-1\")\r\n\r\n        return false\r\n    }\r\n\r\n    showImportPreview = () => {\r\n        const { fileContent, fields} = this.state\r\n\r\n        let rows = fileContent.split(\"\\n\"),\r\n        list: IStudent[] = [],\r\n        popup = document.getElementById(\"popup\")\r\n\r\n        rows.forEach(r => {\r\n            let cells = this.splitCSV(r)\r\n\r\n            let student: IStudent = {\r\n                idCorso: this.props.corso,\r\n                nome: capitalizeFirst(cells[fields['nome']]),\r\n                cognome: capitalizeFirst(cells[fields['cognome']]),\r\n                annoFrequentazione: parseInt(fields['annoFrequentazione']),\r\n                cf: cells[fields['cf']],\r\n                dataNascita: formattaData(cells[fields['dataNascita']], true),\r\n                email: cells[fields['email']],\r\n                password: cells[fields['cf']]\r\n            }\r\n\r\n            list.push(student)\r\n        })\r\n\r\n        this.setState({\r\n            addList: list\r\n        })\r\n\r\n        popup.classList.add(\"show\")\r\n    }\r\n\r\n    hidePopup = () => {\r\n        let popup = document.getElementById(\"popup\")\r\n\r\n        this.setState({\r\n            addList: [],\r\n            fields: {\r\n                nome: 0,\r\n                cognome: 0,\r\n                cf: 0,\r\n                dataNascita: 0,\r\n                email: 0,\r\n                annoFrequentazione: 0\r\n            }\r\n        })\r\n\r\n        popup.classList.remove(\"show\")\r\n    }\r\n\r\n    confirmImport = () => {\r\n        askPassword(siteUrl+\"/api/studenti\", \"post\", {\r\n            studenti: this.state.addList\r\n        }, (_: any) => {\r\n            message.success(\"Importazione eseguita con successo!\")\r\n            routerHistory.push(adminRoute+\"/studenti\")\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { addList } = this.state\r\n\r\n        return <div className=\"col p-5 right-block\" id=\"mainBlock\" style={{flexDirection: \"column\"}}>\r\n            <h3 className=\"text-center w-100\">Importa studenti da CSV</h3>\r\n\r\n            <label>\r\n                Prima di proseguire, esportare il CSV da <strong>Sifer</strong>.\r\n            </label>\r\n\r\n            <div className=\"uploader mt-2 w-100\">\r\n                <Dragger accept=\".csv\" beforeUpload={file => this.readFile(file)}>\r\n                    <p className=\"ant-upload-drag-icon\">\r\n                        <i className=\"fa fa-file-csv fa-5x\"></i>\r\n                    </p>\r\n                    <p className=\"ant-upload-text\">Clicca o trascina un file su quest'aerea</p>\r\n                    <p className=\"ant-upload-hint\">\r\n                        Assicurati che il file abbia l'estensione <strong>.csv</strong>.\r\n                    </p>\r\n                </Dragger>\r\n            </div>\r\n\r\n            <div id=\"popup\" className=\"preview px-0\">\r\n                <div className=\"w-100 h-100 inner overflow-auto px-5 py-4\">\r\n                    <h3 className=\"mb-3 text-center\">Anteprima dati da importare</h3>\r\n                    {\r\n                        addList.length && <table className=\"table table-bordered text-center\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th>Nome</th>\r\n                                    <th>Cognome</th>\r\n                                    <th>Anno</th>\r\n                                    <th>Codice Fiscale</th>\r\n                                    <th>Data di Nascita</th>\r\n                                    <th style={{width: \"25%\"}}>E-mail</th>\r\n                                </tr>\r\n\r\n                                {\r\n                                    addList.map(s => {                \r\n                                        return <tr>\r\n                                            <Tooltip title={s.nome}>\r\n                                                <td style={{maxWidth: 0}} className=\"text-truncate\">{s.nome}</td>\r\n                                            </Tooltip>\r\n                                            <Tooltip title={s.cognome}>\r\n                                                <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cognome}</td>\r\n                                            </Tooltip>\r\n                                            <td style={{maxWidth: 0}} className=\"text-truncate\">{s.annoFrequentazione}</td>\r\n                                            <Tooltip title={s.cf}>\r\n                                                <td style={{maxWidth: 0}} className=\"text-truncate\">{s.cf}</td>\r\n                                            </Tooltip>\r\n                                            <td style={{maxWidth: 0}} className=\"text-truncate\">{formatItalian(s.dataNascita)}</td>\r\n                                            <Tooltip title={s.email}>\r\n                                                <td style={{maxWidth: 0}} className=\"text-truncate\">{s.email}</td>\r\n                                            </Tooltip>\r\n                                        </tr>\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"bottom-side p-3 text-right\">\r\n                    <button className=\"btn btn-danger mr-2\" onClick={this.hidePopup}>Annulla</button>\r\n                    <button className=\"btn btn-success\" onClick={this.confirmImport}>Conferma importazione</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Tooltip, Spin, Icon, Modal, message, Button } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl } from \"../../utilities\"\r\nimport { IMateria } from \"../../models/IMateria\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly materie: IMateria[]\r\n    readonly showModal: boolean\r\n    readonly nomeMateria: string\r\n    readonly showEditModal: boolean\r\n    readonly materiaEdit: IMateria\r\n    readonly nomeEdit: string\r\n}\r\n\r\nexport default class MaterieList extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            materie: null,\r\n            showModal: false,\r\n            nomeMateria: \"\",\r\n            showEditModal: false,\r\n            materiaEdit: null,\r\n            nomeEdit: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/materie/getmateriebycorso/\" + this.props.corso).then(response => {\r\n            this.setState({\r\n                materie: response.data as IMateria[]\r\n            })\r\n        })\r\n    }\r\n\r\n    showHideModal = () => {\r\n        this.setState({\r\n            showModal: !this.state.showModal,\r\n            nomeMateria: \"\"\r\n        })\r\n    }\r\n\r\n    hideEditModal = () => {\r\n        this.setState({\r\n            showEditModal: false,\r\n            nomeEdit: \"\",\r\n            materiaEdit: null\r\n        })\r\n    }\r\n\r\n    showEditModal = (materia: IMateria) => {\r\n        this.setState({\r\n            showEditModal: true,\r\n            nomeEdit: materia.nome,\r\n            materiaEdit: materia\r\n        })\r\n    }\r\n\r\n    aggiungiMateria = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { nomeMateria } = this.state\r\n\r\n        if(nomeMateria.trim() === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n           return\r\n        }\r\n\r\n        askPassword(siteUrl+\"/api/materie/\" + this.props.corso, \"post\", {\r\n            materia: {\r\n                nome: nomeMateria.trim()\r\n            }\r\n        }, (response: any) => {\r\n            let materie = response.data as IMateria[]\r\n\r\n            this.setState({\r\n                materie: materie\r\n            })\r\n\r\n            message.success(\"Materia aggiunta con successo!\")\r\n        }, () => {\r\n            this.setState({\r\n                materie: null,\r\n                showModal: false\r\n            })\r\n        })\r\n    }\r\n\r\n    modificaMateria = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { nomeEdit, materiaEdit } = this.state\r\n\r\n        if(nomeEdit === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n           return\r\n        }\r\n\r\n        askPassword(siteUrl+\"/api/materie/\" + materiaEdit.idMateria, \"put\", {\r\n            materia: {\r\n                idMateria: materiaEdit.idMateria,\r\n                nome: nomeEdit.trim()\r\n            }\r\n        }, (response: any) => {\r\n            let materie = response.data as IMateria[]\r\n\r\n            this.setState({\r\n                materie: materie,\r\n                materiaEdit: null,\r\n                nomeEdit: \"\",\r\n            })\r\n\r\n            message.success(\"Materia modificata con successo!\")\r\n        }, () => {\r\n            this.setState({\r\n                materie: null,\r\n                showEditModal: false\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nomeMateria: nome\r\n        })\r\n    }\r\n\r\n    changeNomeEdit = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nomeEdit: nome\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { materie, nomeMateria, showModal, showEditModal, materiaEdit, nomeEdit } = this.state\r\n        \r\n        if(!materie){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Lista delle materie</h3>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={this.showHideModal}>\r\n                <i className=\"fal fa-plus fa-fw\"></i> Aggiungi materia\r\n            </button>\r\n\r\n            <div className=\"clearfix\"></div>\r\n\r\n            <div className=\"row mx-0\">\r\n                {\r\n                    materie.map(m => {    \r\n                        return <div className=\"col-12 col-md-3 col-lg-3 p-0 p-md-1 mb-1\">\r\n                            <div className=\"border rounded p-2\">\r\n                                <Tooltip title=\"Modifica\">\r\n                                    <span onClick={() => this.showEditModal(m)} className=\"float-right link-warning ml-2\">\r\n                                        <i className=\"fa fa-pen\"></i>\r\n                                    </span>\r\n                                </Tooltip>\r\n\r\n                                <div className=\"text-truncate\">{m.nome}</div>\r\n                            </div>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <Modal title=\"Aggiungi una materia\" visible={showModal} footer={[\r\n                <Button type=\"primary\" onClick={this.aggiungiMateria}>Aggiungi</Button>,\r\n                <Button type=\"default\" onClick={this.showHideModal}>Annulla</Button>\r\n            ]} onCancel={this.showHideModal}>\r\n                <form onSubmit={this.aggiungiMateria}>\r\n                    <div className=\"form-group mb-0\">\r\n                        <label className=\"text-secondary\">Nome della materia</label>\r\n                        <input type=\"text\" value={nomeMateria} onChange={this.changeNome} className=\"form-control\" />\r\n                    </div>\r\n\r\n                    <input type=\"submit\" className=\"d-none\" />\r\n                </form>\r\n            </Modal>\r\n\r\n            {\r\n                materiaEdit && <Modal title=\"Modifica di una materia\" visible={showEditModal} footer={[\r\n                    <Button type=\"primary\" onClick={this.modificaMateria}>Modifica</Button>,\r\n                    <Button type=\"default\" onClick={this.hideEditModal}>Annulla</Button>\r\n                ]} onCancel={this.hideEditModal}>\r\n                    <form onSubmit={this.modificaMateria}>\r\n                        <div className=\"form-group mb-0\">\r\n                            <label className=\"text-secondary\">Nome della materia</label>\r\n                            <input type=\"text\" value={nomeEdit} onChange={this.changeNomeEdit} className=\"form-control\" />\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"d-none\" />\r\n                    </form>\r\n                </Modal>\r\n            }\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Tooltip } from \"antd\"\r\n\r\nexport interface IProps{\r\n    readonly src: string\r\n    readonly width?: number | string\r\n    readonly height?: number | string\r\n    readonly scalable?: boolean\r\n    readonly style?: React.CSSProperties\r\n}\r\nexport interface IState{\r\n    readonly scaled: boolean\r\n    readonly coords: number[]\r\n}\r\n\r\nexport default class ImageScale extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            scaled: false,\r\n            coords: [0, 0]\r\n        }\r\n    }\r\n\r\n    scaleImage = () => {\r\n        if(!this.props.scalable) return\r\n\r\n        this.setState({\r\n            scaled: !this.state.scaled\r\n        })\r\n        \r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { src, width, height, scalable, style } = this.props\r\n        const { scaled } = this.state\r\n        let firstclass = scalable ? \"scalable \" : \"\",\r\n        classname = scaled ? \"scaled\" : \"\",\r\n        title = scalable ? \"Cliccare per \" + (scaled ? \"rimpicciolire\" : \"ingrandire\") : null\r\n\r\n        return <Tooltip title={title}>\r\n            <img alt=\"scale\" style={style} className={\"imagescale \"+firstclass+classname} src={src} width={width} height={height} onClick={this.scaleImage} />\r\n        </Tooltip>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, message, Icon, Spin, Collapse } from \"antd\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, formatItalian } from \"../../utilities\"\r\nimport { ICalendar } from \"../../models/ICalendar\"\r\nimport Calendario from \"../Calendario\"\r\nimport { askPassword } from \"../AskConferma\"\r\nimport { ICalendarEvent } from \"../../models/ICalendarEvent\"\r\n\r\nexport interface IProps{\r\n    readonly anno: number\r\n    readonly corso: number\r\n}\r\nexport interface IState{\r\n    readonly calendarId: string\r\n    readonly calendar: ICalendar\r\n    readonly actualId: string\r\n}\r\n\r\nexport default class ConfigForm extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            calendarId: null,\r\n            calendar: null,\r\n            actualId: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { corso, anno } = this.props\r\n\r\n        Axios.get(siteUrl+\"/api/calendari/\"+corso+\"/\"+anno).then(response => {\r\n            let calendar = response.data as ICalendar\r\n\r\n            this.setState({\r\n                calendarId: calendar.idGoogleCalendar,\r\n                actualId: calendar.idGoogleCalendar,\r\n                calendar: calendar\r\n            })\r\n        })\r\n    }\r\n\r\n    changeID = (e: any) => {\r\n        let calendarId = e.target.value\r\n\r\n        this.setState({\r\n            calendarId: calendarId\r\n        })\r\n    }\r\n\r\n    saveConfig = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { corso, anno } = this.props\r\n        const { calendarId, calendar } = this.state\r\n\r\n        if(calendarId === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n        \r\n        askPassword(siteUrl+\"/api/calendari\", \"post\", {\r\n            calendario: {\r\n                idCalendario: calendar ? calendar.idCalendario : \"0\",\r\n                idCorso: corso,\r\n                anno: anno,\r\n                idGoogleCalendar: calendarId\r\n            }\r\n        }, (response: any) => {\r\n            let eventiScartati = response.data as ICalendarEvent[],\r\n            { Panel } = Collapse\r\n\r\n            if(eventiScartati.length){\r\n                Modal.warning({\r\n                    title: \"Attenzione!\",\r\n                    content: <div style={{ marginLeft: -38 }}>\r\n                        <p className=\"text-muted\">I seguenti eventi sono stati scartati durante l'inserimento. Assicurati che siano scritti nel giusto modo (<strong>LUOGO: DOCENTE - MATERIA</strong>), che le materie e i docenti siano stati creati, e che la materia sia effettivamente assegnata al docente.</p>\r\n\r\n                        <Collapse bordered={false}>\r\n                            <Panel header=\"Espandi per visualizzare gli eventi\" key={1}>\r\n                                { \r\n                                    eventiScartati.map(e => {\r\n                                        return <span className=\"d-block\">\r\n                                            <strong>{formatItalian(e.date)} ({e.inizio} - {e.fine})</strong>: {e.summary}\r\n                                        </span>\r\n                                    })\r\n                                }\r\n                            </Panel>\r\n                        </Collapse>\r\n                    </div>\r\n                })\r\n            }\r\n            \r\n            this.setState({\r\n                actualId: calendarId\r\n            })\r\n\r\n            message.success(\"Configurazione calendario salvata!\")\r\n        }, () => {\r\n            this.setState({\r\n                actualId: null\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { calendarId, actualId } = this.state\r\n\r\n        if(calendarId === null){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"text-center\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <form onSubmit={this.saveConfig}>\r\n            <div className=\"form-group row mx-1\">\r\n                <div className=\"col px-0\">\r\n                    <label className=\"text-secondary\">ID Calendario</label>\r\n                    <input name=\"calendarID\" type=\"text\" className=\"form-control\" value={calendarId} onChange={this.changeID} />\r\n                </div>\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-success float-right mr-1 mb-3\">\r\n                {\r\n                    actualId === null && <Icon type=\"loading\" className=\"mr-2 loadable-btn\" spin />\r\n                }\r\n                Salva configurazione\r\n            </button>\r\n\r\n            <div className=\"clearfix\"></div>\r\n\r\n            <div className=\"p-1\">\r\n                <h4>Anteprima visualizzazione</h4>\r\n                <Calendario calendarId={actualId} />\r\n            </div> \r\n        </form>\r\n    }\r\n}","import React from \"react\"\r\nimport { Icon, Modal, Tooltip, Tabs } from \"antd\"\r\nimport ImageScale from \"../ImageScale\"\r\nimport ConfigForm from \"./ConfigForm\"\r\n\r\nexport interface IProps{\r\n    readonly corso: number\r\n}\r\nexport interface IState{}\r\n\r\nexport default class ConfigCalendar extends React.PureComponent<IProps, IState>{\r\n    showHelp = () => {\r\n        Modal.info({\r\n            width: 700,\r\n            style: { top: 24 },\r\n            centered: false,\r\n            maskClosable: true,\r\n            icon: <Icon type=\"question-circle\" style={{ marginTop: 6, fontSize: 28, color: \"orange\" }} />,\r\n            okText: \"Ho capito\",\r\n            content: <div className=\"text-justify\">\r\n                <strong>Dove mi trovo?</strong>\r\n                <p>In questa pagina potrai configurare il calendario dal quale verranno caricate le lezioni del corso.</p>\r\n                <strong>Come si configura il calendario?</strong>\r\n                <p>Per configurare il calendario avrai bisogno di un codice univoco, che ti permetterà di collegare il calendario al sito.</p>\r\n                <strong>ID del calendario</strong>\r\n                <p>Per trovare l'ID (identificativo) del calendario, basterà effettuare l'accesso su <a href=\"https://calendar.google.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Google Calendar <i className=\"far fa-external-link\"></i></a> con un account che abbia integrato il calendario del corso. Bisognerà poi premere sul simbolo <i className=\"far fa-cog\"></i> in alto a destra e successivamente su <strong>Impostazioni</strong> nel menu che comparirà. Scorrere quindi la lista a sinistra della pagina, e cliccare sul calendario che si desidera integrare. Recarsi sotto la voce <strong>Integra calendario</strong> e copiare (subito in basso) il codice identificativo del calendario (<strong>ID calendario</strong>), per poi incollarlo in questa pagina di configurazione.</p>\r\n                <p><u>Assicurati che il calendario sia <strong>pubblico</strong>, altrimenti non sarà possibile visualizzarlo.</u></p>\r\n                <strong className=\"d-block mb-2\">Galleria immagini</strong>\r\n                <ImageScale src=\"https://i.imgur.com/e3H0hXX.png\" height={100} scalable={true} />\r\n            </div>\r\n        })\r\n\r\n        setTimeout(() => document.getElementsByClassName(\"ant-modal-wrap\")[0].scrollTo(0, 0), 100)\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { TabPane } = Tabs\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">\r\n                Configurazione calendario\r\n                <Tooltip title=\"Informazioni\">\r\n                    <button type=\"button\" className=\"btn btn-outline-info circle-btn float-right\" onClick={this.showHelp}>\r\n                        <i className=\"fa fa-question\"></i>\r\n                    </button>\r\n                </Tooltip>\r\n                <div className=\"clearfix\"></div>\r\n            </h3>\r\n\r\n            <Tabs>\r\n                <TabPane tab=\"Primo anno\" key=\"1\">\r\n                    <ConfigForm anno={1} corso={this.props.corso} />\r\n                </TabPane>\r\n                <TabPane tab=\"Secondo anno\" key=\"2\">\r\n                    <ConfigForm anno={2} corso={this.props.corso} />\r\n                </TabPane>\r\n            </Tabs>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { routerHistory } from \"..\"\r\n\r\nexport interface IProps{\r\n    readonly goTo: string\r\n}\r\nexport interface IState{}\r\n\r\nexport default class Page404 extends React.PureComponent<IProps, IState>{\r\n    render(): JSX.Element{\r\n        return <div id=\"mainBlock\" className=\"col\">\r\n            <div className=\"text-center text-grey w-100\">\r\n                <i className=\"fal fa-exclamation-triangle mb-2\" style={{ fontSize: 150}}></i>\r\n                <h1 className=\"mb-2 text-grey font-weight-normal\">Errore 404</h1>\r\n                <p style={{ fontSize: 20 }}>La pagina che stati cercando non esiste.</p>\r\n                <button onClick={() => routerHistory.push(this.props.goTo)} type=\"button\" className=\"btn btn-blue btn-lg text-uppercase\">\r\n                    <i className=\"fa fa-shield-check fa-lg fa-fw mr-2\"></i>\r\n                    Torna al sicuro\r\n                </button>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal } from \"antd\"\r\nimport { siteUrl } from \"../../utilities\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{}\r\n\r\nexport default class EditCodiceFirma extends React.PureComponent<IProps, IState>{\r\n    requestCodeChange = (anno: number) => {\r\n        askPassword(siteUrl+\"/api/corsi/generacodiceanno\", \"post\", {\r\n            anno: anno\r\n        }, (response: any) => {\r\n            let codice = response.data\r\n\r\n            Modal.info({\r\n                title: \"Codice generato\",\r\n                content: <span>\r\n                    Il nuovo codice è: <strong>{codice}</strong>\r\n                </span>\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-4 text-center\">Gestione firma da casa</h3>\r\n\r\n            <div className=\"py-4 px-3 text-justify border rounded shadow-sm mb-4\">\r\n                <div className=\"row mx-0\">\r\n                    <div className=\"col-1 text-left\">\r\n                        <i className=\"fal fa-question-circle fa-3x text-warning\"></i>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <p>Nel caso in cui ce ne fosse bisogno, è possibile dare agli studenti la possibilità di firmare le loro presenze da casa.</p>\r\n                        <p>Tramite <a href={siteUrl+\"/#/firmacasa\"} target=\"_blank\" rel=\"noopener noreferrer\">questo url</a> (da condividere con gli studenti) è possibile eseguire tale operazione, ma per farlo è necessario generare, tramite la pagina corrente, un codice univoco che permetta l'accesso alla schermata. Basterà quindi digitarlo nell'apposito campo di testo e si accederà alla lista degli studenti presenti nella classe.</p>\r\n                        <p>Lo studente sarà poi libero di scegliere il proprio nome nella lista, e confermando la propria identità tramite password avrà la possibilità di firmare.</p>\r\n                        <p className=\"mb-0\">Il codice sarà differente in base all'anno di appartenenza.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <strong className=\"mr-2\">Genera codice:</strong>\r\n            <button className=\"btn btn-blue mr-2\" onClick={() => this.requestCodeChange(1)}>Primo anno</button>\r\n            <button className=\"btn btn-danger\" onClick={() => this.requestCodeChange(2)}>Secondo anno</button>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { IAdmin } from \"../../models/IAdmin\"\r\nimport { ILezioneCorrente } from \"../../models/ILezioneCorrente\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, convertFromUTC } from \"../../utilities\"\r\nimport { Tabs, Icon, Spin, Tooltip } from \"antd\"\r\n\r\nexport interface IProps{\r\n    readonly coordinatore: IAdmin\r\n}\r\nexport interface IState{\r\n    readonly lezioneCorrente1: ILezioneCorrente\r\n    readonly noLezione1: boolean\r\n    readonly lezioneCorrente2: ILezioneCorrente\r\n    readonly noLezione2: boolean\r\n}\r\n\r\nexport default class Home extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            lezioneCorrente1: null,\r\n            noLezione1: false,\r\n            lezioneCorrente2: null,\r\n            noLezione2: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { coordinatore } = this.props\r\n\r\n        Axios.get(siteUrl+\"/api/lezioni/getstudentiatlezione/\"+coordinatore.idCorso+\"/1\").then(response => {\r\n            if(typeof(response.data) === \"string\"){\r\n                this.setState({\r\n                    noLezione1: true\r\n                })\r\n            }else{\r\n                let data = response.data as ILezioneCorrente\r\n\r\n                this.setState({\r\n                    lezioneCorrente1: data\r\n                })\r\n            }\r\n        }).catch(_ => {\r\n            this.setState({\r\n                noLezione1: true\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/lezioni/getstudentiatlezione/\"+coordinatore.idCorso+\"/2\").then(response => {\r\n            if(typeof(response.data) === \"string\"){\r\n                this.setState({\r\n                    noLezione2: true\r\n                })\r\n            }else{\r\n                let data = response.data as ILezioneCorrente\r\n\r\n                this.setState({\r\n                    lezioneCorrente2: data\r\n                })\r\n            }\r\n        }).catch(_ => {\r\n            this.setState({\r\n                noLezione2: true\r\n            })\r\n        })\r\n    }\r\n\r\n    getContenuto = (lezione: ILezioneCorrente) => {\r\n        return <div>\r\n            <div className=\"col-12 col-md-6 mb-2 px-2\">\r\n                <div className=\"p-3 bg-white border rounded\">\r\n                    <Tooltip title={lezione.lezione.titolo}>\r\n                        <h4 className=\"text-uppercase mb-2 text-truncate\">{lezione.lezione.titolo}</h4>\r\n                    </Tooltip>\r\n                    <span className=\"text-muted\">{convertFromUTC(lezione.lezione.oraInizio)} - {convertFromUTC(lezione.lezione.oraFine)}</span>\r\n                </div>\r\n            </div>\r\n\r\n            <h6 className=\"mt-3 mb-2 ml-2\">Studenti presenti</h6>\r\n            <div className=\"row mx-0\">\r\n                {\r\n                    lezione.studenti.map(s => {\r\n                        return <div className=\"col-12 col-md-3 mb-md-0 p-1 p-md-2\">\r\n                            <div className=\"border rounded p-2 text-truncate\">\r\n                                <div>{s.nome} {s.cognome}</div>\r\n                                <span className=\"text-muted\">Entrata: {convertFromUTC(s.oraIngresso)}</span>\r\n                            </div>\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { coordinatore } = this.props,\r\n        { lezioneCorrente1, lezioneCorrente2, noLezione1, noLezione2 } = this.state,\r\n        { TabPane } = Tabs,\r\n        icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Home coordinatore</h3>\r\n\r\n            <div className=\"col-12 col-md-6 mb-2 mb-md-0 p-3 bg-white border rounded\">\r\n                <span className=\"border-text\">Dati personali</span>\r\n                <h4 className=\"text-uppercase mb-2 text-truncate\">{coordinatore.nome} {coordinatore.cognome}</h4>\r\n\r\n                Codice di accesso alla firma: <strong>{coordinatore.codiceCorso}</strong>\r\n            </div>\r\n\r\n            <h4 className=\"mt-3 mb-2\">Lezioni in corso</h4>\r\n\r\n            <Tabs>\r\n                <TabPane tab=\"Primo anno\" key=\"1\">\r\n                    {\r\n                        !lezioneCorrente1 && !noLezione1 && <div className=\"text-center\">\r\n                            <Spin indicator={icon} />\r\n                        </div>\r\n                    }\r\n                    {\r\n                        !lezioneCorrente1 && noLezione1 && <div className=\"text-center\">\r\n                            Non ci sono lezioni in corso.\r\n                        </div>\r\n                    }\r\n                    {\r\n                        lezioneCorrente1 && !noLezione1 && this.getContenuto(lezioneCorrente1)\r\n                    }\r\n                </TabPane>\r\n                <TabPane tab=\"Secondo anno\" key=\"2\">\r\n                {\r\n                        !lezioneCorrente2 && !noLezione2 && <div className=\"text-center\">\r\n                            <Spin indicator={icon} />\r\n                        </div>\r\n                    }\r\n                    {\r\n                        !lezioneCorrente2 && noLezione2 && <div className=\"text-center\">\r\n                            Non ci sono lezioni in corso.\r\n                        </div>\r\n                    }\r\n                    {\r\n                        lezioneCorrente2 && !noLezione2 && this.getContenuto(lezioneCorrente2)\r\n                    }\r\n                </TabPane>\r\n            </Tabs>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"../..\"\r\nimport LoginTutor from \"./LoginTutor\"\r\nimport StudentsList from \"./StudentsList\"\r\nimport AddNewStudent from \"./AddNewStudent\"\r\nimport StudentDetails from \"./StudentDetails\"\r\nimport DocentiList from \"./DocentiList\"\r\nimport AddNewDocente from \"./AddNewDocente\"\r\nimport DocenteDetails from \"./DocenteDetails\"\r\nimport EditDocente from \"./EditDocente\"\r\nimport EditStudente from \"./EditStudente\"\r\nimport StudentsImport from \"./StudentsImport\"\r\nimport MaterieList from \"./MaterieList\"\r\nimport ConfigCalendar from \"./ConfigCalendar\"\r\nimport { IAdmin } from \"../../models/IAdmin\"\r\nimport LogoCorso from \"../LogoCorso\"\r\nimport Page404 from \"../Page404\"\r\nimport { adminRoute } from \"../../utilities\"\r\nimport EditCodiceFirma from \"./EditCodiceFirma\"\r\nimport Footer from \"../Footer\"\r\nimport Home from \"./Home\"\r\n\r\nexport default class Dashboard extends React.Component{\r\n\r\n    componentWillUnmount = () => {\r\n        sessionStorage.removeItem(\"adminSession\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n\r\n        let session = sessionStorage.getItem(\"adminSession\")\r\n        \r\n        if(!session)\r\n            return <LoginTutor />\r\n\r\n        let admin = JSON.parse(session) as IAdmin\r\n\r\n        return <div className=\"container-fluid\">\r\n            <Router history={routerHistory}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3 bg-blue p-0 menu\">\r\n                        \r\n                        <LogoCorso idCorso={admin.idCorso} />\r\n\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/home\")} to={adminRoute+\"/home\"}>\r\n                            <span><i className=\"fal fa-home-alt fa-fw mr-1\"></i> Home</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/studenti\")} to={adminRoute+\"/studenti\"}>\r\n                            <span><i className=\"fal fa-users-class fa-fw mr-1\"></i> Studenti</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/docenti\")} to={adminRoute+\"/docenti\"}>\r\n                            <span><i className=\"fal fa-chalkboard-teacher fa-fw mr-1\"></i> Docenti</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/materie\")} to={adminRoute+\"/materie\"}>\r\n                            <span><i className=\"fal fa-list-alt fa-fw mr-1\"></i> Materie</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/config\")} to={adminRoute+\"/config\"}>\r\n                            <span><i className=\"fal fa-calendar-edit fa-fw mr-1\"></i> Configura calendario</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(adminRoute+\"/codicefirma\")} to={adminRoute+\"/codicefirma\"}>\r\n                            <span><i className=\"fal fa-house-signal fa-fw mr-1\"></i> Firma da casa</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => {\r\n                            sessionStorage.removeItem(\"adminSession\")\r\n                            routerHistory.push(adminRoute)\r\n                        }} exact to={adminRoute+\"/login\"}>\r\n                            <span><i className=\"fal fa-power-off fa-fw mr-1\"></i> Esci</span>\r\n                        </NavLink>\r\n\r\n                        <Footer inMenu={true} />\r\n                    </div>\r\n  \r\n                    <Switch>\r\n                        <Route exact path={adminRoute} render={() => {\r\n                            routerHistory.push(adminRoute+\"/home\")\r\n\r\n                            return null\r\n                        }} />\r\n\r\n                        <Route exact path={adminRoute+\"/home\"} render={() => (\r\n                            <Home coordinatore={admin} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti\"} render={() => (\r\n                            <StudentsList corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti/new\"} render={() => (\r\n                            <AddNewStudent corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti/import\"} render={() => (\r\n                            <StudentsImport corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti/:id\"} render={(routeProps) => (\r\n                            <StudentDetails {...routeProps} corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/studenti/edit/:id\"} render={(routeProps) => (\r\n                            <EditStudente {...routeProps} corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/docenti\"} render={() => (\r\n                            <DocentiList corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/docenti/new\"} render={() => (\r\n                            <AddNewDocente corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/docenti/:id\"} render={(routeProps) => (\r\n                            <DocenteDetails {...routeProps} corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/docenti/edit/:id\"} render={(routeProps) => (\r\n                            <EditDocente {...routeProps} corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/materie\"} render={() => (\r\n                            <MaterieList corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/config\"} render={() => (\r\n                            <ConfigCalendar corso={admin.idCorso} />\r\n                        )} />\r\n\r\n                        <Route exact path={adminRoute+\"/codicefirma\"} render={() => (\r\n                            <EditCodiceFirma />\r\n                        )} />\r\n\r\n                        <Route render={() => <Page404 goTo={adminRoute} />} />\r\n\r\n                    </Switch>\r\n                        \r\n                </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, superAdminRoute } from \"../../utilities\"\r\nimport { Icon, Spin, Tooltip } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly corsi: ICorso[]\r\n}\r\n\r\nexport default class CorsiList extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            corsi: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                corsi: corsi\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { corsi } = this.state\r\n        \r\n        if(!corsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Lista dei corsi</h3>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={() => routerHistory.push(superAdminRoute+\"/corsi/new\")}>\r\n                <i className=\"fal fa-plus fa-fw\"></i> Aggiungi corso\r\n            </button>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th style={{width: \"15%\"}}>Logo</th>\r\n                        <th>Nome</th>\r\n                        <th>Luogo</th>\r\n                        <th style={{width: \"10%\"}}>Azioni</th>\r\n                    </tr>\r\n\r\n                    {\r\n                        corsi.map(c => {        \r\n                            return <tr>\r\n                                <td><img width=\"55\" src={c.logo} alt=\"logo\" /></td>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\">{c.nome}</td>\r\n                                <td style={{maxWidth: 0}} className=\"text-truncate\">{c.luogo}</td>\r\n                                <td>\r\n                                    <Tooltip title=\"Modifica\">\r\n                                        <button type=\"button\" className=\"btn btn-warning text-white circle-btn\" onClick={() => routerHistory.push(superAdminRoute+\"/corsi/edit/\" + c.idCorso)}>\r\n                                            <i className=\"fa fa-pen\"></i>\r\n                                        </button>\r\n                                    </Tooltip>\r\n                                </td>\r\n                            </tr>\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Upload, Icon, message } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { imageFileToBase64, superAdminRoute, siteUrl } from \"../../utilities\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly luogo: string\r\n    readonly logo: string\r\n}\r\n\r\nexport default class AddNewCorso extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            luogo: \"\",\r\n            logo: null\r\n        }\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeLuogo = (event: any) => {\r\n        let luogo = event.target.value\r\n\r\n        this.setState({\r\n            luogo: luogo\r\n        })\r\n    }\r\n\r\n    aggiungiCorso = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { nome, luogo, logo } = this.state\r\n\r\n        if(nome.trim() === \"\" || luogo.trim() === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        askPassword(siteUrl+\"/api/corsi\", \"post\", {\r\n            corso: {\r\n                nome: nome.trim(),\r\n                luogo: luogo.trim(),\r\n                logo: logo ? logo.trim() : \"\"\r\n            }\r\n        }, (_: any) => {\r\n            message.success(\"Corso creato con successo!\")\r\n            routerHistory.push(superAdminRoute+\"/corsi\")\r\n        })\r\n    }\r\n\r\n    convertImage = (file: any) => {\r\n        imageFileToBase64(file).then(result => {\r\n            this.setState({\r\n                logo: String(result)\r\n            })\r\n        })\r\n\r\n        return false\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, luogo, logo } = this.state,\r\n        uploadButton = (\r\n            <div>\r\n                <Icon type=\"plus\" style={{ fontSize: 30, marginBottom: 5 }} />\r\n                <div className=\"ant-upload-text\">Carica immagine</div>\r\n            </div>\r\n        )\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Aggiungi un nuovo corso</h3>\r\n\r\n            <form className=\"row\" onSubmit={this.aggiungiCorso}>\r\n\r\n                <div className=\"form-group mr-3\">\r\n                    <label className=\"text-secondary d-block\">Logo</label>\r\n                    <Upload listType=\"picture-card\" showUploadList={false} beforeUpload={(file) => this.convertImage(file)} className=\"logo-upload\" accept=\"image/*\">\r\n                        {logo ? <img src={logo} alt=\"logo\" style={{ width: \"100%\" }} /> : uploadButton}\r\n                    </Upload>\r\n                </div>\r\n                \r\n                <div className=\"col pr-0\">\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"nomecorso\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Luogo</label>\r\n                        <input name=\"luogo\" type=\"text\" className=\"form-control\" value={luogo} onChange={this.changeLuogo} />\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-success text-uppercase w-100\">Aggiungi corso</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { routerHistory } from \"../..\"\r\nimport { message, Modal } from \"antd\"\r\nimport { mountLogin, unmountLogin, siteUrl, logoUrl, superAdminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { Cipher } from \"../../models/Cipher\"\r\nimport { isSuperAdmin } from \"../../models/IAdmin\"\r\nimport Footer from \"../Footer\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly adminName: string\r\n    readonly adminPsw: string\r\n}\r\n\r\nexport default class LoginAdmin extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            adminName: \"\",\r\n            adminPsw: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    changeInputName = (event: any) => {\r\n        let name = event.target.value\r\n\r\n        this.setState({\r\n            adminName: name\r\n        })\r\n    }\r\n\r\n    changeInputPassword = (event: any) => {\r\n        let psw = event.target.value\r\n\r\n        this.setState({\r\n            adminPsw: psw\r\n        })\r\n    }\r\n\r\n    tryLogin = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { adminName, adminPsw } = this.state\r\n        let cipher = new Cipher(),\r\n        password = cipher.encode(adminPsw)\r\n\r\n        Axios.post(siteUrl+\"/api/amministratori/loginamministratori\", {\r\n            username: adminName.trim(),\r\n            password: password\r\n        }).then(response => {\r\n            let data = response.data\r\n\r\n            if(isSuperAdmin(data)){\r\n                data.password = password\r\n                sessionStorage.setItem(\"superSession\", JSON.stringify(data))\r\n                routerHistory.push(superAdminRoute)\r\n                message.success(\"Login effettuato con successo!\")\r\n            }\r\n            else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Username o Password errati!\",\r\n                    centered: true,\r\n                    maskClosable: true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { adminName, adminPsw } = this.state\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100\">\r\n                <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.tryLogin}>\r\n                    <h3 className=\"d-inline-block\">Accesso amministratori</h3>\r\n                    <img src={logoUrl} height=\"40\" className=\"float-right logo\" alt=\"logo\" />\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Utente di accesso</label>\r\n                        <input name=\"username\" type=\"text\" className=\"form-control\" value={adminName} onChange={this.changeInputName} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Password di accesso</label>\r\n                        <input name=\"password\" type=\"password\" className=\"form-control\" value={adminPsw} onChange={this.changeInputPassword} />\r\n                    </div>\r\n\r\n                    <input type=\"submit\" value=\"Accedi\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n                </form>\r\n\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}","import React from \"react\"\r\nimport { Modal, Icon, Spin, Upload, message } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, imageFileToBase64, superAdminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{}\r\nexport interface IState{\r\n    readonly corso: ICorso\r\n    readonly nome: string\r\n    readonly luogo: string\r\n    readonly logo: string\r\n}\r\n\r\nexport default class EditCorso extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            corso: null,\r\n            nome: \"\",\r\n            luogo: \"\",\r\n            logo: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(superAdminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/corsi/\" + id).then(response => {\r\n            let corso = response.data as ICorso\r\n\r\n            this.setState({\r\n                corso: corso,\r\n                nome: corso.nome,\r\n                luogo: corso.luogo,\r\n                logo: corso.logo\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeLuogo = (event: any) => {\r\n        let luogo = event.target.value\r\n\r\n        this.setState({\r\n            luogo: luogo\r\n        })\r\n    }\r\n\r\n    modificaCorso = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { nome, luogo, corso, logo } = this.state\r\n\r\n        if(nome.trim() === \"\" || luogo.trim() === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        askPassword(siteUrl+\"/api/corsi/\" + corso.idCorso, \"put\", {\r\n            corso: {\r\n                idCorso: corso.idCorso,\r\n                nome: nome.trim(),\r\n                luogo: luogo.trim(),\r\n                logo: logo ? logo.trim() : \"\"\r\n            }\r\n        }, (_: any) => {\r\n            message.success(\"Corso modificato con successo!\")\r\n            routerHistory.push(superAdminRoute+\"/corsi\")\r\n        })\r\n    }\r\n\r\n    convertImage = (file: any) => {\r\n        imageFileToBase64(file).then(result => {\r\n            this.setState({\r\n                logo: String(result)\r\n            })\r\n        })\r\n\r\n        return false\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, luogo, corso, logo } = this.state,\r\n        uploadButton = (\r\n            <div>\r\n                <Icon type=\"plus\" style={{ fontSize: 30, marginBottom: 5 }} />\r\n                <div className=\"ant-upload-text\">Carica immagine</div>\r\n            </div>\r\n        )\r\n\r\n        if(!corso){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Modifica di un corso</h3>\r\n\r\n            <form className=\"row\" onSubmit={this.modificaCorso}>\r\n                <div className=\"form-group mr-3\">\r\n                    <label className=\"text-secondary d-block\">Logo</label>\r\n                    <Upload listType=\"picture-card\" showUploadList={false} beforeUpload={(file) => this.convertImage(file)} className=\"logo-upload\" accept=\"image/*\">\r\n                        {logo ? <img src={logo} alt=\"logo\" style={{ width: \"100%\" }} /> : uploadButton}\r\n                    </Upload>\r\n                </div>\r\n\r\n                <div className=\"col pr-0\">\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"nomecorso\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Luogo</label>\r\n                        <input name=\"luogo\" type=\"text\" className=\"form-control\" value={luogo} onChange={this.changeLuogo} />\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-success text-uppercase w-100\">Modifica corso</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport Axios from \"axios\"\r\nimport { siteUrl, superAdminRoute } from \"../../utilities\"\r\nimport { Icon, Spin, Tooltip } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { ITutor } from \"../../models/ITutor\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly tutor: ITutor[]\r\n}\r\n\r\nexport default class TutorList extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            tutor: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/coordinatori\").then(response => {\r\n            let tutor = response.data as ITutor[]\r\n\r\n            this.setState({\r\n                tutor: tutor\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { tutor } = this.state\r\n        \r\n        if(!tutor){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-3 text-center\">Lista dei coordinatori</h3>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={() => routerHistory.push(superAdminRoute+\"/tutor/new\")}>\r\n                <i className=\"fal fa-plus fa-fw\"></i> Aggiungi coordinatore\r\n            </button>\r\n\r\n            <table className=\"table table-bordered text-center\">\r\n                \r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th>Cognome</th>\r\n                            <th style={{width: \"30%\"}}>Corso</th>\r\n                            <th style={{width: \"10%\"}}>Azioni</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            tutor.map(t => {        \r\n                                return <tr>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{t.nome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{t.cognome}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{t.corso}</td>\r\n                                    <td>\r\n                                        <Tooltip title=\"Modifica\">\r\n                                            <button type=\"button\" className=\"btn btn-warning text-white circle-btn\" onClick={() => routerHistory.push(superAdminRoute+\"/tutor/edit/\" + t.idCoordinatore)}>\r\n                                                <i className=\"fa fa-pen\"></i>\r\n                                            </button>\r\n                                        </Tooltip>\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Icon, message, Spin } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, superAdminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly email: string\r\n    readonly listaCorsi: ICorso[]\r\n    readonly corso: number\r\n}\r\n\r\nexport default class AddNewTutor extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            email: \"\",\r\n            listaCorsi: null,\r\n            corso: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                listaCorsi: corsi,\r\n                corso: corsi.length ? corsi[0].idCorso : 0\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n\r\n    changeCorso = (event: any) => {\r\n        let corso = parseInt(event.target.value)\r\n\r\n        this.setState({\r\n            corso: corso\r\n        })\r\n    }\r\n\r\n    isExistingCorso = (corso: number) => {\r\n        return this.state.listaCorsi.find(c => c.idCorso === corso)\r\n    }\r\n\r\n    aggiungiTutor = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { nome, cognome, email, corso } = this.state\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!this.isExistingCorso(corso)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Corso non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        askPassword(siteUrl+\"/api/coordinatori\", \"post\", {\r\n            coordinatore: {\r\n                nome: nome.trim(),\r\n                cognome: cognome.trim(),\r\n                email: email,\r\n                idCorso: corso\r\n            }\r\n        }, (_: any) => {\r\n            message.success(\"Tutor creato con successo!\")\r\n            routerHistory.push(superAdminRoute+\"/tutor\")\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, email, listaCorsi } = this.state\r\n\r\n        if(!listaCorsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        if(!listaCorsi.length){\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                È necessario creare almeno un corso per poter inserire un nuovo coordinatore.\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Aggiungi un nuovo coordinatore</h3>\r\n\r\n            <form onSubmit={this.aggiungiTutor}>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Corso gestito</label>\r\n                        <select name=\"anno\" onChange={this.changeCorso} className=\"custom-select\">\r\n                            {\r\n                                listaCorsi.map(c => {\r\n                                    return <option value={c.idCorso}>{c.nome}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-success text-uppercase w-100\">Aggiungi coordinatore</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Icon, message, Spin } from \"antd\"\r\nimport { routerHistory } from \"../..\"\r\nimport { siteUrl, superAdminRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { ICorso } from \"../../models/ICorso\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { ITutor } from \"../../models/ITutor\"\r\nimport { askPassword } from \"../AskConferma\"\r\n\r\nexport interface IRouteParams{\r\n    readonly id: string\r\n}\r\nexport interface IProps extends RouteComponentProps<IRouteParams>{}\r\nexport interface IState{\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly email: string\r\n    readonly listaCorsi: ICorso[]\r\n    readonly corso: number\r\n}\r\n\r\nexport default class EditTutor extends React.PureComponent<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nome: \"\",\r\n            cognome: \"\",\r\n            email: \"\",\r\n            listaCorsi: null,\r\n            corso: null\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let id = Number(this.props.match.params.id)\r\n\r\n        if(isNaN(id))\r\n            routerHistory.push(superAdminRoute)\r\n\r\n        Axios.get(siteUrl+\"/api/coordinatori/\"+id).then(response => {\r\n            let tutor = response.data as ITutor\r\n\r\n            this.setState({\r\n                nome: tutor.nome,\r\n                cognome: tutor.cognome,\r\n                email: tutor.email,\r\n                corso: tutor.idCorso\r\n            })\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/corsi\").then(response => {\r\n            let corsi = response.data as ICorso[]\r\n\r\n            this.setState({\r\n                listaCorsi: corsi\r\n            })\r\n        })\r\n    }\r\n\r\n    changeNome = (event: any) => {\r\n        let nome = event.target.value\r\n\r\n        this.setState({\r\n            nome: nome\r\n        })\r\n    }\r\n\r\n    changeCognome = (event: any) => {\r\n        let cognome = event.target.value\r\n\r\n        this.setState({\r\n            cognome: cognome\r\n        })\r\n    }\r\n\r\n    changeEmail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            email: email\r\n        })\r\n    }\r\n\r\n    changeCorso = (event: any) => {\r\n        let corso = parseInt(event.target.value)\r\n\r\n        this.setState({\r\n            corso: corso\r\n        })\r\n    }\r\n\r\n    isExistingCorso = (corso: number) => {\r\n        return this.state.listaCorsi.find(c => c.idCorso === corso)\r\n    }\r\n\r\n    modificaTutor = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { nome, cognome, email, corso } = this.state\r\n        const idCoordinatore = this.props.match.params.id\r\n\r\n        if(nome.trim() === \"\" || cognome.trim() === \"\" || email === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!this.isExistingCorso(corso)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Corso non valido.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        askPassword(siteUrl+\"/api/coordinatori/\" + idCoordinatore, \"put\", {\r\n            coordinatore: {\r\n                idCoordinatore: idCoordinatore,\r\n                nome: nome.trim(),\r\n                cognome: cognome.trim(),\r\n                email: email,\r\n                idCorso: corso\r\n            }\r\n        }, (_: any) => {\r\n            message.success(\"Tutor modificato con successo!\")\r\n            routerHistory.push(superAdminRoute+\"/tutor\")\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { nome, cognome, email, listaCorsi, corso } = this.state\r\n\r\n        if(!listaCorsi){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            <h3 className=\"mb-2 text-center\">Modifica di un coordinatore</h3>\r\n\r\n            <form onSubmit={this.modificaTutor}>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Nome</label>\r\n                        <input name=\"name\" type=\"text\" className=\"form-control\" value={nome} onChange={this.changeNome} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Cognome</label>\r\n                        <input name=\"surname\" type=\"text\" className=\"form-control\" value={cognome} onChange={this.changeCognome} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={email} onChange={this.changeEmail} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <label className=\"text-secondary\">Corso gestito</label>\r\n                        <select name=\"anno\" onChange={this.changeCorso} className=\"custom-select\">\r\n                            {\r\n                                listaCorsi.map(c => {\r\n                                    let selected = corso === c.idCorso\r\n\r\n                                    return <option value={c.idCorso} selected={selected}>{c.nome}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-success text-uppercase w-100\">Modifica coordinatore</button>\r\n            </form>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"../..\"\r\nimport LogoCorso from \"../LogoCorso\"\r\nimport Page404 from \"../Page404\"\r\nimport { superAdminRoute } from \"../../utilities\"\r\nimport CorsiList from \"./CorsiList\"\r\nimport AddNewCorso from \"./AddNewCorso\"\r\nimport LoginAdmin from \"./LoginAdmin\"\r\nimport EditCorso from \"./EditCorso\"\r\nimport TutorList from \"./TutorList\"\r\nimport AddNewTutor from \"./AddNewTutor\"\r\nimport EditTutor from \"./EditTutor\"\r\nimport Footer from \"../Footer\"\r\n\r\nexport default class SuperDashboard extends React.Component{\r\n\r\n    componentWillUnmount = () => {\r\n        sessionStorage.removeItem(\"superSession\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n\r\n        let session = sessionStorage.getItem(\"superSession\")\r\n        \r\n        if(!session)\r\n            return <LoginAdmin />\r\n\r\n        return <div className=\"container-fluid\">\r\n            <Router history={routerHistory}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3 bg-blue p-0 menu\">\r\n                        \r\n                        <LogoCorso idCorso={0} />\r\n\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(superAdminRoute+\"/studenti\")} to={superAdminRoute+\"/tutor\"}>\r\n                            <span><i className=\"fal fa-users-crown fa-fw mr-1\"></i> Coordinatori</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(superAdminRoute+\"/corsi\")} to={superAdminRoute+\"/corsi\"}>\r\n                            <span><i className=\"fal fa-list-alt fa-fw mr-1\"></i> Corsi</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => {\r\n                            sessionStorage.removeItem(\"superSession\")\r\n                            routerHistory.push(superAdminRoute)\r\n                        }} exact to={superAdminRoute+\"/login\"}>\r\n                            <span><i className=\"fal fa-power-off fa-fw mr-1\"></i> Esci</span>\r\n                        </NavLink>\r\n\r\n                        <Footer inMenu={true} />\r\n                    </div>\r\n  \r\n                    <Switch>\r\n                        <Route exact path={superAdminRoute} render={() => {\r\n                            routerHistory.push(superAdminRoute+\"/tutor\")\r\n\r\n                            return null\r\n                        }} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/tutor\"} render={() => (\r\n                            <TutorList />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/tutor/new\"} render={() => (\r\n                            <AddNewTutor />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/tutor/edit/:id\"} render={(routeProps) => (\r\n                            <EditTutor {...routeProps} />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/corsi\"} render={() => (\r\n                            <CorsiList />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/corsi/new\"} render={() => (\r\n                            <AddNewCorso />\r\n                        )} />\r\n\r\n                        <Route exact path={superAdminRoute+\"/corsi/edit/:id\"} render={(routeProps) => (\r\n                            <EditCorso {...routeProps} />\r\n                        )} />\r\n\r\n                        <Route render={() => <Page404 goTo={superAdminRoute} />} />\r\n\r\n                    </Switch>\r\n                        \r\n                </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport { Modal } from \"antd\"\r\nimport { mountLogin, unmountLogin, siteUrl } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport { routerHistory } from \"../..\"\r\nimport { areStudent } from \"../../models/IStudent\"\r\nimport LogoCorso from \"../LogoCorso\"\r\nimport Footer from \"../Footer\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly codice: string\r\n}\r\n\r\nexport default class CodiceSegreto extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            codice: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    changeCodice = (event: any) => {\r\n        let code = event.target.value\r\n\r\n        this.setState({\r\n            codice: code.trim()\r\n        })\r\n    }\r\n\r\n    inviaCodice = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { codice } = this.state\r\n\r\n        if(codice === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire il campo.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.post(siteUrl+\"/api/firmaremota/accessoremoto\", codice, {\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        }).then(response => {\r\n            let data = response.data\r\n\r\n            if(areStudent(data)){\r\n                sessionStorage.removeItem(\"adminSession\")\r\n                sessionStorage.removeItem(\"superSession\")\r\n                sessionStorage.setItem(\"confermaCasa\", JSON.stringify(data))\r\n                routerHistory.push(\"/firmacasa\")\r\n            }else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: \"Il codice non corrisponde a nessun corso/classe, oppure è scaduto (chiedi al tuo coordinatore di cambiarlo).\",\r\n                    centered: true,\r\n                    maskClosable: true\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Il codice non è valido.\",\r\n                centered: true,\r\n                maskClosable: true\r\n            })\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { codice } = this.state\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100\">\r\n                <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.inviaCodice}>\r\n                    <h3 className=\"d-inline-block\">Accesso firma da casa</h3>\r\n                    <LogoCorso forLogin={true} />\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Codice segreto</label>\r\n                        <input name=\"username\" type=\"text\" className=\"form-control\" value={codice} onChange={this.changeCodice} />\r\n                    </div>\r\n\r\n                    <p className=\"text-muted\">Chiedi al tuo coordinatore il codice segreto per accedere alla firma da casa.</p>\r\n\r\n                    <input type=\"submit\" value=\"Prosegui\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n                </form>\r\n\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}","export interface IStudent{\r\n    readonly idStudente?: number\r\n    readonly email: string\r\n    readonly idCorso: number\r\n    readonly nome: string\r\n    readonly cognome: string\r\n    readonly annoFrequentazione: number\r\n    readonly cf: string\r\n    readonly password?: string\r\n    readonly dataNascita: string\r\n    readonly codice?: string\r\n    readonly ritirato?: boolean\r\n    readonly dataRitiro?: string\r\n    readonly giornate?: number\r\n    readonly frequenza?: number\r\n    readonly promosso?: boolean\r\n    readonly firmato?: boolean\r\n}\r\n\r\nexport const isStudent = (obj: any) => {\r\n    try{\r\n        return \"nome\" in obj && \"cognome\" in obj && \"idStudente\" in obj\r\n    }\r\n    catch{\r\n        return false\r\n    }\r\n}\r\n\r\nexport const isAccessStudent = (obj: any) => {\r\n    try{\r\n        return \"nome\" in obj && \"cognome\" in obj && \"idStudente\" in obj && \"password\" in obj\r\n    }\r\n    catch{\r\n        return false\r\n    }\r\n}\r\n\r\nexport const areStudent = (obj: any) => {\r\n    try{\r\n        obj.forEach((s: any) => {\r\n            if(!isStudent(s))\r\n                return false\r\n        })\r\n\r\n        return true\r\n    }\r\n    catch{\r\n        return false\r\n    }\r\n}","import React from \"react\"\r\nimport { Modal, Radio, Icon, Tooltip, Spin } from \"antd\"\r\nimport { mountLogin, unmountLogin, siteUrl, convertFromUTC } from \"../../utilities\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport LogoCorso from \"../LogoCorso\"\r\nimport { IMessage } from \"../../models/IMessage\"\r\nimport { askPassword } from \"../AskConferma\"\r\nimport Axios from \"axios\"\r\nimport { ILezione } from \"../../models/ILezione\"\r\nimport Footer from \"../Footer\"\r\nimport { routerHistory } from \"../..\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly studenti: IStudent[]\r\n    readonly selectedStudente: IStudent\r\n    readonly lezione: ILezione\r\n    readonly noLezione: boolean\r\n}\r\n\r\nexport default class FirmaCasa extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            studenti: null,\r\n            selectedStudente: null,\r\n            lezione: null,\r\n            noLezione: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n        this.caricaLezione()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    inviaFirma = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { selectedStudente } = this.state\r\n\r\n        if(!selectedStudente){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Selezionare uno studente.\",\r\n                maskClosable: true\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Axios.post(siteUrl+\"/api/studenti/richiestacodice\", selectedStudente.idStudente, {\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        }).then(_ => {\r\n            askPassword(siteUrl+\"/api/firmaremota/firmaremotastudente\", \"post\", {\r\n                idStudente: selectedStudente.idStudente\r\n            }, (response: any) => {\r\n                let popup = response.data as IMessage\r\n    \r\n                Modal.info({\r\n                    title: popup.title,\r\n                    content: <div style={{ marginLeft: 38 }}>{popup.message}</div>,\r\n                    icon: <i className={\"float-left mr-3 far \"+popup.icon} style={{ color: popup.iconColor, fontSize: 22 }}/>,\r\n                    maskClosable: false,\r\n                    onOk: () => routerHistory.push(\"/\")\r\n                })\r\n            }, null, \"Inserisci il codice che ti abbiamo inviato per e-mail\")\r\n        })\r\n    }\r\n\r\n    firmaDocente = () => {\r\n        const { lezione, studenti } = this.state\r\n\r\n        Axios.post(siteUrl+\"/api/docenti/richiestacodice\", lezione.idDocente, {\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        }).then(_ => {\r\n            askPassword(siteUrl+\"/api/firmaremota/firmaremotadocente\", \"post\", {\r\n                idDocente: lezione.idDocente,\r\n                idCorso: studenti[0].idCorso,\r\n                anno: studenti[0].annoFrequentazione\r\n            }, (response: any) => {\r\n                let popup = response.data as IMessage\r\n    \r\n                Modal.info({\r\n                    title: popup.title,\r\n                    content: <div style={{ marginLeft: 38 }}>{popup.message}</div>,\r\n                    icon: <i className={\"float-left mr-3 far \" + popup.icon} style={{ color: popup.iconColor, fontSize: 22 }}/>,\r\n                    maskClosable: false,\r\n                    onOk: () => routerHistory.push(\"/\")\r\n                })\r\n            }, null, \"Inserisci il codice che ti abbiamo inviato per e-mail\")\r\n        })\r\n    }\r\n\r\n    scegliStudente = (s: IStudent) => {\r\n        this.setState({\r\n            selectedStudente: s\r\n        })\r\n    }\r\n\r\n    caricaLezione = () => {\r\n        let studenti = JSON.parse(sessionStorage.getItem(\"confermaCasa\")) as any[],\r\n        temp = studenti[0]\r\n\r\n        Axios.get(siteUrl+\"/api/lezioni/\"+temp.idCorso+\"/\"+temp.annoFrequentazione).then(response => {\r\n            if(typeof(response.data) === \"string\"){\r\n                this.setState({\r\n                    noLezione: true,\r\n                    studenti: studenti as IStudent[]\r\n                })\r\n            }else{\r\n                let lezione = response.data as ILezione\r\n\r\n                studenti.forEach((s, i) => {\r\n                    Axios.get(siteUrl+\"/api/presenze/checkentrata/\" + lezione.idLezione+\"/\"+s.idStudente).then(response => {\r\n                        let firmato = response.data as boolean\r\n        \r\n                        s.firmato = firmato\r\n\r\n                        if(i === studenti.length - 1){\r\n                            this.setState({\r\n                                lezione: lezione,\r\n                                studenti: studenti as IStudent[]\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { studenti, selectedStudente, lezione, noLezione } = this.state\r\n\r\n        if(!studenti){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50, color: \"#fff\" }} spin />\r\n\r\n            return <div className=\"col-12 px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        if(!studenti.length){\r\n            return <div className=\"col-11 col-lg-4 mx-auto\" id=\"loginBlock\">\r\n                <div className=\"w-100 bg-white p-3 rounded shadow\">\r\n                    <p className=\"text-muted m-0 text-center\">\r\n                        <i className=\"fa fa-ban fa-fw fa-lg text-danger\"></i> Non è stato trovato nessuno studente.</p>\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100\">\r\n                <div className=\"bg-white p-3 rounded shadow mx-auto mb-3 col-12 col-md-6 pos-lg-fixed\">\r\n                    {\r\n                        lezione || (!lezione && noLezione) ? <div>\r\n                            {\r\n                                !noLezione ? <Tooltip title={lezione.titolo}>\r\n                                    <h5 className=\"mb-0 text-truncate\">{lezione.titolo}</h5>\r\n                                </Tooltip> : <h5 className=\"mb-0 text-truncate\">Non c'è lezione.</h5>\r\n                            }\r\n                            {\r\n                                !noLezione && <small className=\"text-muted\">{convertFromUTC(lezione.oraInizio)} - {convertFromUTC(lezione.oraFine)}</small>\r\n                            }\r\n                            \r\n                            <button type=\"button\" className=\"btn btn-blue w-100 text-uppercase mt-2\" disabled={lezione === null && noLezione} onClick={this.firmaDocente}>\r\n                                {\r\n                                    lezione === null && !noLezione && <Icon type=\"loading\" className=\"mr-2 loadable-btn\" spin />\r\n                                }\r\n\r\n                                Firma docente\r\n                            </button>\r\n                        </div> : <Icon type=\"loading\" spin style={{ fontSize: 23 }} />\r\n                    }\r\n                </div>\r\n\r\n                <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.inviaFirma}>\r\n                    <h3 className=\"d-inline-block\">Firma studente</h3>\r\n                    <LogoCorso idCorso={studenti[0].idCorso} forLogin={true} />\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">Scegli lo studente</label>\r\n                        <div className=\"multiselect form-control p-0\">\r\n                            {\r\n                                studenti.map(s => {            \r\n                                    let checked = selectedStudente === s,\r\n                                    classname = checked ? \"checked\" : \"\"\r\n                                    \r\n                                    return <label className={\"option \"+classname}>\r\n                                        <Radio className=\"mr-2\" onChange={() => this.scegliStudente(s)} checked={checked} /> {s.nome} {s.cognome} {s.firmato && <Tooltip title=\"Devi ancora firmare l'uscita!\">\r\n                                            <i className=\"fa fa-exclamation-circle text-warning float-right\" style={{ transform: \"translateY(25%)\" }}></i>\r\n                                        </Tooltip>}\r\n                                    </label>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <input type=\"submit\" disabled={lezione === null && noLezione} value=\"Firma\" className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n                </form>\r\n\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}","import React from \"react\"\r\nimport CodiceSegreto from \"./CodiceSegreto\"\r\nimport FirmaCasa from \"./FirmaCasa\"\r\n\r\nexport default class DashboardCasa extends React.Component{\r\n\r\n    componentWillUnmount = () => {\r\n        sessionStorage.removeItem(\"confermaCasa\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        let session = sessionStorage.getItem(\"confermaCasa\")\r\n        \r\n        if(!session)\r\n            return <CodiceSegreto />\r\n\r\n        return <FirmaCasa />\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport { mountLogin, unmountLogin, siteUrl, adminRoute, superAdminRoute } from \"../utilities\"\r\nimport { routerHistory } from \"..\"\r\n\r\nexport default class Docs extends React.Component{\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    scrollToIndex = (id: string) => {\r\n        let block = document.getElementById(id)\r\n        \r\n        block.scrollIntoView()\r\n        block.classList.add(\"highlight\")\r\n\r\n        setTimeout(() => {\r\n            block.classList.remove(\"highlight\")\r\n        }, 1000)\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        return <div className=\"col-11 col-lg-8 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100 bg-white p-4 rounded shadow text-justify my-4\">\r\n                <span className=\"link-primary float-right\" onClick={() => routerHistory.push(\"/\")}>\r\n                    <i className=\"far fa-arrow-left fa-fw fa-lg\"></i> Torna al registro\r\n                </span>\r\n\r\n                <div className=\"clearfix\"></div>\r\n\r\n                <h4 className=\"mb-1\">Come funziona il sito?</h4>\r\n                <p>Tramite questa semplice pagina andremo ad elencare le varie pagine del sito, nonché la modalità di accesso ad esse, suddividendo per i ruoli principali.</p>\r\n\r\n                <div className=\"ml-4\">\r\n                    <h6>Indice:</h6>\r\n                    <ul>\r\n                        <li><span className=\"link-primary u-hover\" onClick={() => this.scrollToIndex(\"stuDoc\")}>Studenti e docenti</span></li>\r\n                        <li><span className=\"link-primary u-hover\" onClick={() => this.scrollToIndex(\"tutor\")}>Coordinatori</span></li>\r\n                        <li><span className=\"link-primary u-hover\" onClick={() => this.scrollToIndex(\"admin\")}>Amministratori</span></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"pl-4 p-2 rounded overflow-hidden\" id=\"stuDoc\">\r\n                    <h6>Studenti e Docenti</h6>\r\n                    <p>Gli studenti e i docenti avranno la possibilità di firmare la loro entrata/uscita da una lezione tramite <a href={siteUrl+\"/#/\"} target=\"_blank\" rel=\"noopener noreferrer\">questo</a> URL.</p>\r\n                    <p>Una volta scelti il corso e la classe, l'accesso alla firma è possibile <strong>solamente</strong> tramite un codice segreto, fornito dal coordinatore del corso o, eventualmente, dal docente incaricato della lezione.</p>\r\n                    <p className=\"mb-0\">Tramite <a href={siteUrl+\"/#/firmacasa\"} target=\"_blank\" rel=\"noopener noreferrer\">questo</a> URL è possibile firmare da casa qualora sia necessario farlo. L'accesso alla firma è potretto da un codice segreto che il coordinatore del corso può generare su richiesta. Gli studenti dovranno solamente scegliere il loro nome nella lista, verrà quindi inviata un'e-mail con un codice segreto, da inserire per confermare la propria identità. Il procedimento rimane identico anche per i docenti, con la differenza che quest'ultimi potranno firmare tramite un semplice bottone.</p>\r\n                </div>\r\n\r\n                <div className=\"pl-4 p-2 rounded overflow-hidden\" id=\"tutor\">\r\n                    <h6>Coordinatori</h6>\r\n                    <p className=\"mb-2\">I coordinatori avranno la possibilità di gestire il corso a cui sono stati assegnati. Tramite <a href={siteUrl+\"/#\"+adminRoute} target=\"_blank\" rel=\"noopener noreferrer\">questo</a> URL si può accedere al gestionale, inserendo Username e Password ricevuti via e-mail dall'amministratore.</p>\r\n                    <p className=\"mb-2\">\r\n                        Grazie al gestionale, è possibile gestire le seguenti attività:\r\n                    </p>\r\n\r\n                    <ul>\r\n                        <li>Homepage:</li>\r\n                        <ul>\r\n                            <li className=\"bg-transblue\">Visualizzare il codice d'accesso alla firma del corso.</li>\r\n                            <li>Tenere traccia delle lezioni attualmente in corso nelle classi, con la lista degli studenti presenti.</li>\r\n                        </ul>\r\n                        <li>Studenti:</li>\r\n                        <ul>\r\n                            <li>Creazione e modifica di studenti, specificando i dati anagrafici e la classe di appartenenza.</li>\r\n                            <li>Possibilità di importare una classe tramite CSV, per velocizzare il processo.</li>\r\n                            <li>Possibilità di spostare gli studenti dal primo al secondo anno.</li>\r\n                            <li>Visualizzazione del dettaglio di uno studente, con la lista delle lezioni frequentate da quest'ultimo.</li>\r\n                            <li>Possibilità di modificare l'entrata o l'uscita di uno studente (nel caso in cui sia stato commesso un errore) tramite appositi bottoni nella lista delle lezioni frequentate.</li>\r\n                            <li>Possibilità di ritirare uno studente tramite apposito bottone nella lista degli studenti.</li>\r\n                            <li>Possibilità di archiviare uno studente (nel caso in cui quest'ultimo sia stato promosso) tramite apposito bottone nella lista degli studenti.</li>\r\n                        </ul>\r\n                        <li>Docenti:</li>\r\n                        <ul>\r\n                            <li>Creazione e modifica di docenti, specificando i dati anagrafici, le materie insegnate e i corsi di appartenenza.</li>\r\n                            <li>Visualizzazione del dettaglio di un docente, con la lista delle lezioni tenute da quest'ultimo.</li>\r\n                            <li>Possibilità di modificare l'entrata o l'uscita di un docente (nel caso in cui sia stato commesso un errore) tramite appositi bottoni nella lista delle lezioni tenute.</li>\r\n                            <li>Possibilità di ritirare un docente dal corso tramite apposito bottone nella lista dei docenti, con possibilità di annullare l'azione di ritiro in caso di reintegro nel corso.</li>\r\n                        </ul>\r\n                        <li>Materie:</li>\r\n                        <ul>\r\n                            <li>Creazione e modifica di materie del corso, assegnabili poi ai docenti.</li>\r\n                        </ul>\r\n                        <li>Calendario:</li>\r\n                        <ul>\r\n                            <li>\r\n                                <p>Possibilità di configurare il calendario delle classi del corso, caricando così le lezioni nel database del registro.</p>\r\n\r\n                                <p className=\"bg-transblue\">Gli eventi del calendario dovranno <strong>obbligatoriamente</strong> essere scritti nel seguente modo:\r\n                                    <div className=\"text-center\">\r\n                                        <strong>LUOGO: DOCENTE - MATERIA</strong> (esempio: LAB 1 PASCAL: Matteo Mascellani - PHP).\r\n                                    </div>\r\n                                </p>\r\n                                \r\n                                <p className=\"mb-0 bg-transblue\"><strong>ATTENZIONE</strong>: prima di configurare il calendario è necessario creare tutte le materie e i docenti citati nel calendario stesso. Ovviamente, è possibile salvare nuovamente il calendario per aggiornare le lezioni nel caso in cui si aggiungano docenti o materie durante l'anno.</p>\r\n                            </li>\r\n                        </ul>\r\n                        <li>Firma da remoto:</li>\r\n                        <ul>\r\n                            <li>\r\n                                <p>Possibilità di abilitare la firma da casa qualora sia necessario.</p>\r\n\r\n                                <p>Tramite <a href={siteUrl+\"/#\"+adminRoute+\"/codicefirma\"} target=\"_blank\" rel=\"noopener noreferrer\">questo</a> URL è possibile creare un codice segreto per identificare la classe scelta. Il codice andrà condiviso con gli studenti, e <u>varrà solamente per il giorno in cui è stato generato</u>.</p>\r\n                                \r\n                                <p>Da <a href={siteUrl+\"/#/firmacasa\"} target=\"_blank\" rel=\"noopener noreferrer\">questo</a> URL gli studenti saranno in grado di inserire il codice creato e, scegliendo il loro nome e cognome, potranno firmare per la lezione programmata.</p>\r\n\r\n                                <p className=\"mb-0\">Il procedimento rimane identico anche per i docenti, con la differenza che quest'ultimi potranno firmare tramite un semplice bottone.</p>\r\n                            </li>\r\n                        </ul>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"pl-4 p-2 rounded overflow-hidden\" id=\"admin\">\r\n                    <h6>Amministratori</h6>\r\n                    <p className=\"mb-2\">Gli amministratori avranno la possibilità di gestire FITSTIC. Tramite <a href={siteUrl+\"/#\"+superAdminRoute} target=\"_blank\" rel=\"noopener noreferrer\">questo</a> URL si può accedere al gestionale, inserendo Username e Password dell'amministratore.</p>\r\n                    <p className=\"mb-2\">\r\n                        Grazie al gestionale, è possibile gestire le seguenti attività:\r\n                    </p>\r\n\r\n                    <ul>\r\n                        <li>Corsi:</li>\r\n                        <ul>\r\n                            <li>Creazione e modifica di corsi (es: Alan Turing, McLuhan, Hopper, ecc.), con possibilità di inserire nome, luogo e logo del corso.</li>\r\n                            <li>Creazione e modifica di coordinatori, che possono essere assegnati ad un determinato corso per gestirlo di conseguenza. \r\n                                <div className=\"bg-transblue\">Al momento della creazione il nuovo coordinatore riceverà un'e-mail con le credenziali per accedere al gestionale, e il codice per confermare l'accesso all'interfaccia della firma (visualizzabile anche nel gestionale dei coordinatori).</div>\r\n                            </li>\r\n                        </ul>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { routerHistory } from \"../..\"\r\nimport { message, Modal } from \"antd\"\r\nimport { mountLogin, unmountLogin, siteUrl, logoUrl, stageRoute } from \"../../utilities\"\r\nimport Axios from \"axios\"\r\nimport Footer from \"../Footer\"\r\nimport { isAccessStudent } from \"../../models/IStudent\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly userEmail: string\r\n    readonly userCode: string\r\n    readonly isExisting: boolean\r\n}\r\n\r\nexport default class LoginStage extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            userEmail: \"\",\r\n            userCode: \"\",\r\n            isExisting: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mountLogin()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        unmountLogin()\r\n    }\r\n\r\n    changeMail = (event: any) => {\r\n        let email = event.target.value.trim()\r\n\r\n        this.setState({\r\n            userEmail: email\r\n        })\r\n    }\r\n\r\n    changeCode = (event: any) => {\r\n        let code = event.target.value\r\n\r\n        this.setState({\r\n            userCode: code\r\n        })\r\n    }\r\n\r\n    cancelAction = () => {\r\n        this.setState({\r\n            isExisting: false\r\n        })\r\n    }\r\n\r\n    tryAccess = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { userEmail, userCode, isExisting } = this.state\r\n\r\n        if(!isExisting){\r\n            Axios.post(siteUrl+\"/api/studenti/checkemaillogin\", {\r\n                email: userEmail\r\n            }).then(response => {\r\n                let exists = response.data as boolean\r\n\r\n                if(exists){\r\n                    this.setState({\r\n                        isExisting: exists\r\n                    })\r\n                }else{\r\n                    Modal.error({\r\n                        title: \"Errore!\",\r\n                        content: \"L'e-mail inserita non corrisponde a nessuno studente.\"\r\n                    })\r\n                }\r\n            })\r\n        }else{\r\n            Axios.post(siteUrl+\"/api/studenti/loginstudente\", {\r\n                email: userEmail,\r\n                password: userCode\r\n            }).then(response => {\r\n                let data = response.data\r\n\r\n                if(isAccessStudent(data)){\r\n                    sessionStorage.setItem(\"stageSession\", JSON.stringify(data))\r\n                    routerHistory.push(stageRoute)\r\n                    message.success(\"Login effettuato con successo!\")\r\n                }else{\r\n                    Modal.error({\r\n                        title: \"Errore!\",\r\n                        content: \"E-mail o codice errati.\",\r\n                        centered: true,\r\n                        maskClosable: true\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { userCode, userEmail, isExisting } = this.state\r\n\r\n        return <div className=\"col-11 col-lg-5 mx-auto\" id=\"loginBlock\">\r\n            <div className=\"w-100\">\r\n                <form className=\"w-100 bg-white p-3 rounded shadow\" onSubmit={this.tryAccess}>\r\n                    <h3 className=\"d-inline-block\">Accesso studenti</h3>\r\n                    <img src={logoUrl} height=\"40\" className=\"float-right logo\" alt=\"logo\" />\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-secondary\">E-mail</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" value={userEmail} onChange={this.changeMail} />\r\n                    </div>\r\n\r\n                    {\r\n                        isExisting && <div className=\"form-group\">\r\n                            <label className=\"text-secondary\">Codice ricevuto per e-mail</label>\r\n                            <input name=\"code\" type=\"password\" className=\"form-control\" value={userCode} onChange={this.changeCode} />\r\n                        </div>\r\n                    }\r\n\r\n                    \r\n                    <div className=\"row\">\r\n                        {\r\n                            isExisting && <div className=\"pr-1 col-6\">\r\n                                <input type=\"button\" value=\"Annulla\" className=\"btn btn-lg btn-link text-danger w-100 text-uppercase\" onClick={this.cancelAction} />\r\n                            </div>\r\n                        }\r\n                        <div className={isExisting ? \"pl-1 col\" : \"col\"}>\r\n                            <input type=\"submit\" value={isExisting ? \"Accedi\" : \"Prosegui\"} className=\"btn btn-lg btn-success w-100 text-uppercase\"/>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}","import React from \"react\"\r\nimport Axios from \"axios\"\r\nimport { Modal, Button, DatePicker } from \"antd\"\r\nimport { validateTime, formatItalian, siteUrl, formattaData } from \"../../utilities\"\r\nimport locale from \"antd/es/date-picker/locale/it_IT\"\r\nimport moment from \"moment\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport { IMessage } from \"../../models/IMessage\"\r\n\r\nexport interface IProps{\r\n    readonly studente: IStudent\r\n    readonly visible: boolean\r\n    readonly annullaAggiunta: () => void\r\n    readonly reloadStage: () => void\r\n}\r\nexport interface IState{\r\n    readonly date: string\r\n    readonly oraInizio: string\r\n    readonly oraFine: string\r\n    readonly argomento: string\r\n    readonly loading: boolean\r\n}\r\n\r\nexport default class AddForm extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            date: formatItalian(new Date().toString()),\r\n            oraFine: \"\",\r\n            oraInizio: \"\",\r\n            argomento: \"\",\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    changeData = (data: string) => {\r\n        this.setState({\r\n            date: data\r\n        })\r\n    }\r\n\r\n    changeInizio = (e: any) => {\r\n        let inizio = e.target.value.trim()\r\n\r\n        this.setState({\r\n            oraInizio: inizio\r\n        })\r\n    }\r\n\r\n    changeFine = (e: any) => {\r\n        let fine = e.target.value.trim()\r\n\r\n        this.setState({\r\n            oraFine: fine\r\n        })\r\n    }\r\n\r\n    changeArgomento = (e: any) => {\r\n        this.setState({\r\n            argomento: e.target.value\r\n        })\r\n    }\r\n\r\n    toggleLoading = () => {\r\n        this.setState({\r\n            loading: !this.state.loading\r\n        })\r\n    }\r\n\r\n    addStage = (e: any) => {\r\n        e.preventDefault()\r\n\r\n        const { studente } = this.props,\r\n        { oraFine, oraInizio, argomento, date } = this.state,\r\n        currentDate = new Date(),\r\n        data = date.split(\"-\")\r\n\r\n        if(argomento === \"\" || date === \"\"){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Riempire tutti i campi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(data[2] !== currentDate.getFullYear().toString()){\r\n\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Anno non valido. Puoi inserire solo l'anno corrente.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(!validateTime(oraFine) || !validateTime(oraInizio)){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Orari non validi. (ore:minuti)\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if(oraFine === oraInizio){\r\n            Modal.error({\r\n                title: \"Errore!\",\r\n                content: \"Gli orari devono essere diversi.\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        this.toggleLoading()\r\n\r\n        Axios.post(siteUrl+\"/api/studenti/postorestage/\" + studente.idStudente, {\r\n            password: studente.password,\r\n            argomento,\r\n            data: formattaData(date, true),\r\n            oraInizio: new Date(`${data[2]}-${data[1]}-${data[0]} ${oraInizio}`),\r\n            oraFine: new Date(`${data[2]}-${data[1]}-${data[0]} ${oraFine}`),\r\n        }).then(response => {\r\n            let output = response.data as IMessage\r\n\r\n            this.toggleLoading()\r\n\r\n            if(output.type === \"success\")\r\n                this.props.reloadStage()\r\n            else{\r\n                Modal.error({\r\n                    title: \"Errore!\",\r\n                    content: output.message\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { date, oraInizio, oraFine, argomento, loading } = this.state,\r\n        { visible, annullaAggiunta } = this.props\r\n\r\n        return <Modal title=\"Registrazione ore di stage\" visible={visible} footer={[\r\n            <Button type=\"primary\" onClick={this.addStage} loading={loading}>Aggiungi</Button>,\r\n            <Button type=\"default\" onClick={annullaAggiunta}>Annulla</Button>\r\n        ]} onCancel={annullaAggiunta}>\r\n            <form onSubmit={this.addStage}>\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Data</label>\r\n                    <DatePicker locale={locale} className=\"w-100 select-date\" onChange={(_, d2) => this.changeData(d2)} format=\"DD-MM-YYYY\" defaultValue={moment(date, \"DD-MM-YYYY\")} disabled={loading} />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Mansioni svolte</label>\r\n                    <textarea value={argomento} onChange={this.changeArgomento} className=\"form-control\" disabled={loading}></textarea>\r\n                </div>\r\n\r\n                <div className=\"form-group row mx-0\">\r\n                    <div className=\"col pr-1 pl-0\">\r\n                        <label className=\"text-secondary\">Inizio</label>\r\n                        <input type=\"text\" value={oraInizio} onChange={this.changeInizio} className=\"form-control\" disabled={loading} />\r\n                    </div>\r\n                    <div className=\"col pr-0 pl-1\">\r\n                        <label className=\"text-secondary\">Fine</label>\r\n                        <input type=\"text\" value={oraFine} onChange={this.changeFine} className=\"form-control\" disabled={loading} />\r\n                    </div>\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"d-none\" />\r\n            </form>\r\n        </Modal>\r\n    }\r\n}","import React from \"react\"\r\nimport Axios from \"axios\"\r\nimport { Spin, Icon, Progress, Tooltip } from \"antd\"\r\nimport { IStage } from \"../../models/IStage\"\r\nimport { siteUrl, formatItalian, convertFromUTC } from \"../../utilities\"\r\nimport AddForm from \"./AddForm\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\n\r\nexport interface IProps{\r\n    readonly studente: IStudent\r\n}\r\nexport interface IState{\r\n    readonly oreList: IStage[]\r\n    readonly addNew: boolean\r\n    readonly totaleOre: number\r\n}\r\n\r\nexport default class Home extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            oreList: null,\r\n            addNew: false,\r\n            totaleOre: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.loadOre()\r\n    }\r\n\r\n    loadOre = () => {\r\n        this.setState({\r\n            oreList: null,\r\n            addNew: false\r\n        })\r\n\r\n        Axios.get(siteUrl+\"/api/studenti/getorestage/\"+this.props.studente.idStudente).then(response => {\r\n            let ore = response.data as IStage[],\r\n            totale = 0\r\n\r\n            ore.forEach(o => totale += o.totaleRelativo)\r\n\r\n            this.setState({\r\n                oreList: ore,\r\n                totaleOre: totale\r\n            })\r\n        })\r\n    }\r\n\r\n    toggleAdd = () => {\r\n        this.setState({\r\n            addNew: !this.state.addNew\r\n        })\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { oreList, addNew, totaleOre } = this.state,\r\n        { studente } = this.props\r\n\r\n        if(!oreList){\r\n            const icon = <Icon type=\"loading\" style={{ fontSize: 50 }} spin />\r\n\r\n            return <div className=\"col px-5 py-4 right-block\" id=\"mainBlock\">\r\n                <Spin indicator={icon} />\r\n            </div>\r\n        }\r\n\r\n        return <div className=\"col px-5 py-4 right-block\">\r\n            \r\n            <div className=\"p-3 bg-white border rounded col-4 mb-3\">\r\n                <h4 className=\"text-uppercase mb-2 text-truncate\">{studente.nome} {studente.cognome}</h4>\r\n                <strong>Ore svolte</strong>: {totaleOre} su 800 totali\r\n                <Progress percent={Math.floor(((100 * totaleOre / 800) + Number.EPSILON) * 100) / 100} />\r\n            </div>\r\n\r\n            <h3 className=\"d-inline-block\">Ore di stage segnate</h3>\r\n\r\n            <button className=\"btn btn-success float-right mb-3\" type=\"button\" onClick={this.toggleAdd}>\r\n                <i className=\"fal fa-plus fa-fw\"></i> Aggiungi ore di stage\r\n            </button>\r\n\r\n            <div className=\"clearfix\"></div>\r\n\r\n            {\r\n                !oreList.length ? <div className=\"text-center\">Non hai ancora segnato ore di stage.</div> : <table className=\"table table-bordered text-center\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th style={{width: \"15%\"}}>Data</th>\r\n                            <th style={{width: \"25%\"}}>Descrizione</th>\r\n                            <th>Inizio</th>\r\n                            <th>Fine</th>\r\n                            <th>Totale</th>\r\n                        </tr>\r\n\r\n                        {\r\n                            oreList.map(s => {        \r\n                                return <tr>\r\n                                    <td>{formatItalian(s.data)}</td>\r\n                                    <Tooltip title={s.argomento}>\r\n                                        <td style={{maxWidth: 0}} className=\"text-truncate\">{s.argomento}</td>\r\n                                    </Tooltip>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{convertFromUTC(s.oraInizio + \"Z\")}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{convertFromUTC(s.oraFine + \"Z\")}</td>\r\n                                    <td style={{maxWidth: 0}} className=\"text-truncate\">{s.totaleRelativo}</td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            }\r\n\r\n            <AddForm studente={studente} annullaAggiunta={this.toggleAdd} visible={addNew} reloadStage={this.loadOre} />\r\n        </div>\r\n    }\r\n}","import React from \"react\"\r\nimport { NavLink, Route, Router, Switch } from \"react-router-dom\"\r\nimport { routerHistory } from \"../..\"\r\nimport LogoCorso from \"../LogoCorso\"\r\nimport Page404 from \"../Page404\"\r\nimport { stageRoute } from \"../../utilities\"\r\nimport Footer from \"../Footer\"\r\nimport LoginStage from \"./LoginStage\"\r\nimport { IStudent } from \"../../models/IStudent\"\r\nimport Home from \"./Home\"\r\n\r\nexport default class StageDashboard extends React.Component{\r\n\r\n    componentWillUnmount = () => {\r\n        sessionStorage.removeItem(\"stageSession\")\r\n    }\r\n\r\n    render(): JSX.Element{\r\n\r\n        let session = sessionStorage.getItem(\"stageSession\")\r\n        \r\n        if(!session)\r\n            return <LoginStage />\r\n\r\n        let studente = JSON.parse(session) as IStudent\r\n\r\n        return <div className=\"container-fluid\">\r\n            <Router history={routerHistory}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3 bg-blue p-0 menu\">\r\n                        \r\n                        <LogoCorso idCorso={0} />\r\n\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => routerHistory.push(stageRoute+\"/home\")} to={stageRoute+\"/home\"}>\r\n                            <span><i className=\"fal fa-home-alt fa-fw mr-1\"></i> Home</span>\r\n                        </NavLink>\r\n                        <NavLink className=\"router-link\" activeClassName=\"active\" onClick={() => {\r\n                            sessionStorage.removeItem(\"stageSession\")\r\n                            routerHistory.push(stageRoute)\r\n                        }} exact to={stageRoute+\"/login\"}>\r\n                            <span><i className=\"fal fa-power-off fa-fw mr-1\"></i> Esci</span>\r\n                        </NavLink>\r\n\r\n                        <Footer inMenu={true} />\r\n                    </div>\r\n  \r\n                    <Switch>\r\n                        <Route exact path={stageRoute} render={() => {\r\n                            routerHistory.push(stageRoute+\"/home\")\r\n\r\n                            return null\r\n                        }} />\r\n\r\n                        <Route exact path={stageRoute+\"/home\"} render={() => (\r\n                            <Home studente={studente} />\r\n                        )} />\r\n\r\n                        <Route render={() => <Page404 goTo={stageRoute} />} />\r\n\r\n                    </Switch>\r\n                        \r\n                </div>\r\n            </Router>\r\n        </div>\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { createHashHistory } from \"history\"\r\nimport \"./index.scss\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\nimport Main from \"./comp/Main\"\r\nimport { Router, Switch, Route } from \"react-router-dom\"\r\nimport Dashboard from \"./comp/admin/Dashboard\"\r\nimport Page404 from \"./comp/Page404\"\r\nimport moment from \"moment\"\r\nimport \"moment/locale/it\"\r\nimport SuperDashboard from \"./comp/superadmin/SuperDashboard\"\r\nimport { superAdminRoute, adminRoute, stageRoute } from \"./utilities\"\r\nimport DashboardCasa from \"./comp/firmacasa/DashboardCasa\"\r\nimport Docs from \"./comp/Docs\"\r\nimport StageDashboard from \"./comp/stage/StageDashboard\"\r\n\r\nmoment.locale(\"it\")\r\n\r\nexport const routerHistory = createHashHistory()\r\n\r\nReactDOM.render(<Router history={routerHistory}>\r\n    <Switch>\r\n        <Route exact path=\"/\" render={() => {\r\n            routerHistory.push(\"/firme/\")\r\n\r\n            return null\r\n        }} />\r\n\r\n        <Route path=\"/firme/\" render={() => (\r\n            <Main />\r\n        )} />\r\n\r\n        <Route path={adminRoute} render={() => (\r\n            <Dashboard />\r\n        )} />\r\n\r\n        <Route path={stageRoute} render={() => (\r\n            <StageDashboard />\r\n        )} />\r\n\r\n        <Route path={superAdminRoute} render={() => (\r\n            <SuperDashboard />\r\n        )} />\r\n\r\n        <Route path=\"/firmacasa\" render={() => (\r\n            <DashboardCasa />\r\n        )} />\r\n\r\n        <Route exact path=\"/documentazione\" render={() => (\r\n            <Docs />\r\n        )} />\r\n\r\n        <Route render={() => <Page404 goTo=\"/\" />} />\r\n    </Switch>\r\n</Router>, document.getElementById(\"root\"))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}