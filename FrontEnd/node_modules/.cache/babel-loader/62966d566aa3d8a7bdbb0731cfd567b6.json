{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\React\\\\qrlog\\\\src\\\\comp\\\\Main.tsx\";\nimport React from \"react\";\nexport default class Main extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.changeCode = event => {\n      let code = event.target.value;\n      this.setState({\n        code: code.toUpperCase()\n      });\n      if (code.length === 16) this.tryToLog();\n    };\n\n    this.tryToLog = () => {\n      this.showMessagePopup();\n    };\n\n    this.showMessagePopup = () => {\n      let popup = document.getElementById(\"popup\");\n      popup.classList.add(\"show\");\n      setTimeout(() => {\n        popup.classList.remove(\"show\");\n      }, 1500);\n    };\n\n    this.state = {\n      code: \"\",\n      popup: {\n        title: \"Errore!\",\n        icon: \"fa-check-circle\",\n        iconColor: \"red\",\n        message: \"Non sono riuscito ad eseguire l'accesso.\"\n      }\n    };\n  }\n\n  render() {\n    const popup = this.state.popup;\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-3 bg-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-9 bg-light main-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-center mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Scannerizza il codice\"), React.createElement(\"input\", {\n      autoFocus: true,\n      type: \"text\",\n      className: \"form-control w-50 text-center m-auto\",\n      value: this.state.code,\n      onChange: this.changeCode,\n      maxLength: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"popup\",\n      className: \"col-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fal fa-fw fa-lg fa-3x \" + popup.icon,\n      style: {\n        color: popup.iconColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, popup.title), React.createElement(\"div\", {\n      className: \"mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, popup.message))))));\n  }\n\n}","map":{"version":3,"sources":["D:/Desktop/React/qrlog/src/comp/Main.tsx"],"names":["React","Main","PureComponent","constructor","props","changeCode","event","code","target","value","setState","toUpperCase","length","tryToLog","showMessagePopup","popup","document","getElementById","classList","add","setTimeout","remove","state","title","icon","iconColor","message","render","color"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport { IMessage } from \"../models/IMessage\"\r\n\r\nexport interface IProps{}\r\nexport interface IState{\r\n    readonly code: string\r\n    readonly popup: IMessage\r\n}\r\n\r\nexport default class Main extends React.PureComponent<IProps, IState>{\r\n    constructor(props: IProps){\r\n        super(props)\r\n\r\n        this.state = {\r\n            code: \"\",\r\n            popup: {\r\n                title: \"Errore!\",\r\n                icon: \"fa-check-circle\",\r\n                iconColor: \"red\",\r\n                message: \"Non sono riuscito ad eseguire l'accesso.\"\r\n            }\r\n        }\r\n    }\r\n\r\n    changeCode = (event: any) => {\r\n        let code = event.target.value\r\n\r\n        this.setState({\r\n            code: code.toUpperCase()\r\n        })\r\n\r\n        if(code.length === 16)\r\n            this.tryToLog()\r\n    }\r\n\r\n    tryToLog = () => {\r\n        this.showMessagePopup()\r\n    }\r\n\r\n    showMessagePopup = () => {\r\n        let popup = document.getElementById(\"popup\")\r\n\r\n        popup.classList.add(\"show\")\r\n\r\n        setTimeout(() => {\r\n            popup.classList.remove(\"show\")\r\n        }, 1500)\r\n    }\r\n\r\n    render(): JSX.Element{\r\n        const { popup } = this.state\r\n\r\n        return <div className=\"container-fluid\">\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-3 bg-danger\">\r\n\r\n                </div>\r\n\r\n                <div className=\"col-9 bg-light main-block\">\r\n                    <div className=\"w-100\">\r\n                        <h2 className=\"text-center mb-2\">Scannerizza il codice</h2>\r\n                        <input autoFocus type=\"text\" className=\"form-control w-50 text-center m-auto\" value={this.state.code} onChange={this.changeCode} maxLength={16} />\r\n                    </div>\r\n\r\n                    <div id=\"popup\" className=\"col-9\">\r\n                        <div className=\"w-100\">\r\n                            <i className={\"fal fa-fw fa-lg fa-3x \" + popup.icon} style={{ color: popup.iconColor}}></i>\r\n                            <h2 className=\"mt-2\">{popup.title}</h2>\r\n                            <div className=\"mt-2\">{popup.message}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}